<?xml version="1.0" encoding="utf-8"?><doc>
  <assembly>
    <name>System.DirectoryServices</name>
  </assembly>
  <members>
    <member name="T:System.DirectoryServices.DirectoryEntries">
      <summary>Contains a collection of <see cref="T:System.DirectoryServices.DirectoryEntry"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)">
      <summary>Creates a new entry in the container.</summary>
      <param name="name">The name of the new entry.</param>
      <param name="schemaClassName">The name of the schema that is used for the new entry.</param>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntry"></see> object that represents the new entry.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred during the call to the underlying interface.</exception>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntries.Find(System.String)">
      <summary>Returns the member of this collection with the specified name.</summary>
      <param name="name">Contains the name of the child object for which to search.</param>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntry"></see> that represents the child object that was found.</returns>
      <exception cref="T:System.InvalidOperationException">The Active Directory Domain Services object is not a container.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred during the call to the underlying interface.</exception>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)">
      <summary>Returns the member of this collection with the specified name and of the specified type.</summary>
      <param name="name">The name of the child directory object for which to search.</param>
      <param name="schemaClassName">The class name of the child directory object for which to search.</param>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntry"></see> object that represents the child object that was found.</returns>
      <exception cref="T:System.InvalidOperationException">The Active Directory Domain Services object is not a container.</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred during the call to the underlying interface.</exception>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntries.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)">
      <summary>Deletes a member of this collection.</summary>
      <param name="entry">The name of the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object to delete.</param>
      <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred during the call to the underlying interface.</exception>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntries.SchemaFilter">
      <summary>Gets the schemas that specify which child objects are contained in the collection.</summary>
      <returns>A <see cref="System.DirectoryServices.SchemaNameCollection"></see> that specifies which child objects are contained in the <see cref="System.DirectoryServices.DirectoryEntries"></see> instance.</returns>
    </member>
    <member name="T:System.DirectoryServices.DirectoryEntry">
      <summary>The <see cref="T:System.DirectoryServices.DirectoryEntry"></see> class encapsulates a node or object in the Active Directory Domain Services hierarchy.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> class that binds to the specified native Active Directory Domain Services object.</summary>
      <param name="adsObject">The name of the native Active Directory Domain Services object to bind to.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> class that binds this instance to the node in Active Directory Domain Services located at the specified path.</summary>
      <param name="path">The path at which to bind the <see cref="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String)"></see> to the directory. The <see cref="P:System.DirectoryServices.DirectoryEntry.Path"></see> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> class.</summary>
      <param name="path">The path of this <see cref="T:System.DirectoryServices.DirectoryEntry"></see>. The <see cref="P:System.DirectoryServices.DirectoryEntry.Path"></see> property is initialized to this value.</param>
      <param name="username">The user name to use when authenticating the client. The <see cref="P:System.DirectoryServices.DirectoryEntry.Username"></see> property is initialized to this value.</param>
      <param name="password">The password to use when authenticating the client. The <see cref="P:System.DirectoryServices.DirectoryEntry.Password"></see> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.#ctor(System.String,System.String,System.String,System.DirectoryServices.AuthenticationTypes)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> class.</summary>
      <param name="path">The path of this <see cref="T:System.DirectoryServices.DirectoryEntry"></see>. The <see cref="P:System.DirectoryServices.DirectoryEntry.Path"></see> property is initialized to this value.</param>
      <param name="username">The user name to use when authenticating the client. The <see cref="P:System.DirectoryServices.DirectoryEntry.Username"></see> property is initialized to this value.</param>
      <param name="password">The password to use when authenticating the client. The <see cref="P:System.DirectoryServices.DirectoryEntry.Password"></see> property is initialized to this value.</param>
      <param name="authenticationType">One of the <see cref="T:System.DirectoryServices.AuthenticationTypes"></see> values. The <see cref="P:System.DirectoryServices.DirectoryEntry.AuthenticationType"></see> property is initialized to this value.</param>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.AuthenticationType">
      <summary>Gets or sets the type of authentication to use.</summary>
      <returns>One of the <see cref="System.DirectoryServices.AuthenticationTypes"></see> values.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Children">
      <summary>Gets the child entries of this node in the Active Directory Domain Services hierarchy.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntries"></see> object containing the child entries of this node in the Active Directory Domain Services hierarchy.</returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.Close">
      <summary>Closes the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object and releases any system resources that are associated with this component.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.CommitChanges">
      <summary>Saves changes that are made to a directory entry to the underlying directory store.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)">
      <summary>Creates a copy of this entry as a child of the specified parent.</summary>
      <param name="newParent">The distinguished name of the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object that will be the parent for the copy that is being created.</param>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntry"></see> object that represents the copy of this entry as a child of the new parent.</returns>
      <exception cref="T:System.InvalidOperationException">The specified <see cref="System.DirectoryServices.DirectoryEntry"></see> is not a container.</exception>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)">
      <summary>Creates a copy of this <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object, as a child of the specified parent <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object, with the specified new name.</summary>
      <param name="newParent">The DN of the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object that will be the parent for the copy that is being created.</param>
      <param name="newName">The name of the copy of this entry.</param>
      <returns>A renamed copy of this entry as a child of the specified parent.</returns>
      <exception cref="T:System.InvalidOperationException">The specified <see cref="System.DirectoryServices.DirectoryEntry"></see> object is not a container.</exception>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.DeleteTree">
      <summary>Deletes this entry and its entire subtree from the Active Directory Domain Services hierarchy.</summary>
      <exception cref="T:System.InvalidOperationException">The specified <see cref="System.DirectoryServices.DirectoryEntry"></see> is not a container.</exception>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.Dispose(System.Boolean)">
      <summary>Disposes of the resources (other than memory) that are used by the <see cref="T:System.DirectoryServices.DirectoryEntry"></see>.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.Exists(System.String)">
      <summary>Determines if the specified path represents an actual entry in the directory service.</summary>
      <param name="path">The path of the entry to verify.</param>
      <returns>true if the specified path represents a valid entry in the directory service; otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Guid">
      <summary>Gets the GUID of the <see cref="T:System.DirectoryServices.DirectoryEntry"></see>.</summary>
      <returns>A <see cref="System.Guid"></see> structure that represents the GUID of the <see cref="System.DirectoryServices.DirectoryEntry"></see>.</returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])">
      <summary>Calls a method on the native Active Directory Domain Services object.</summary>
      <param name="methodName">The name of the method to invoke.</param>
      <param name="args">An array of type <see cref="T:System.Object"></see> objects that contains the arguments of the method to invoke.</param>
      <returns>The return value of the invoked method.</returns>
      <exception cref="T:System.DirectoryServices.DirectoryServicesCOMException">The native method threw a <see cref="System.Runtime.InteropServices.COMException"></see> exception.</exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The native method threw a <see cref="System.Reflection.TargetInvocationException"></see> exception. The <see cref="System.Exception.InnerException"></see> property contains a <see cref="System.Runtime.InteropServices.COMException"></see> exception that contains information about the actual error that occurred.</exception>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.InvokeGet(System.String)">
      <summary>Gets a property from the native Active Directory Domain Services object.</summary>
      <param name="propertyName">The name of the property to get.</param>
      <returns>An object that represents the requested property.</returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.InvokeSet(System.String,System.Object[])">
      <summary>Sets a property on the native Active Directory Domain Services object.</summary>
      <param name="propertyName">The name of the property to set.</param>
      <param name="args">The Active Directory Domain Services object to set.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)">
      <summary>Moves this <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object to the specified parent.</summary>
      <param name="newParent">The parent to which you want to move this entry.</param>
      <exception cref="T:System.InvalidOperationException">The specified <see cref="System.DirectoryServices.DirectoryEntry"></see> is not a container.</exception>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)">
      <summary>Moves this <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object to the specified parent and changes its name to the specified value.</summary>
      <param name="newParent">The parent to which you want to move this entry.</param>
      <param name="newName">The new name of this entry.</param>
      <exception cref="T:System.InvalidOperationException">The specified <see cref="System.DirectoryServices.DirectoryEntry"></see> is not a container.</exception>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Name">
      <summary>Gets the name of the object as named with the underlying directory service.</summary>
      <returns>The name of the object as named with the underlying directory service.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.NativeGuid">
      <summary>Gets the GUID of the <see cref="T:System.DirectoryServices.DirectoryEntry"></see>, as returned from the provider.</summary>
      <returns>A <see cref="System.Guid"></see> structure that represents the GUID of the <see cref="System.DirectoryServices.DirectoryEntry"></see>, as returned from the provider.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.NativeObject">
      <summary>Gets the native Active Directory Service Interfaces (ADSI) object.</summary>
      <returns>The native ADSI object.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.ObjectSecurity">
      <summary>Gets or sets the security descriptor for this entry.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectorySecurity"></see> object that represents the security descriptor for this directory entry.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Options">
      <summary>Gets the provider-specific options for this entry.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntryConfiguration"></see> object that contains the provider-specific options for this entry.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Parent">
      <summary>Gets this entry&amp;#39;s parent in the Active Directory Domain Services hierarchy.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntry"></see> object that represents the parent of this entry.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Password">
      <summary>Sets the password to use when authenticating the client.</summary>
      <returns>The password to use when authenticating the client.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Path">
      <summary>Gets or sets the path for this <see cref="T:System.DirectoryServices.DirectoryEntry"></see>.</summary>
      <returns>The path of this <see cref="System.DirectoryServices.DirectoryEntry"></see> object. The default is an empty string (&amp;quot;&amp;quot;).</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Properties">
      <summary>Gets the Active Directory Domain Services properties for this <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object.</summary>
      <returns>A <see cref="System.DirectoryServices.PropertyCollection"></see> object that contains the properties that are set on this entry.</returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.RefreshCache">
      <summary>Loads the property values for this <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object into the property cache.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])">
      <summary>Loads the values of the specified properties into the property cache.</summary>
      <param name="propertyNames">An array of the specified properties.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntry.Rename(System.String)">
      <summary>Changes the name of this <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object.</summary>
      <param name="newName">The new name of the entry.</param>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.SchemaClassName">
      <summary>Gets the name of the schema class for this <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object.</summary>
      <returns>The name of the schema class for this <see cref="System.DirectoryServices.DirectoryEntry"></see> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.SchemaEntry">
      <summary>Gets the schema object for this entry.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntry"></see> object that represents the schema class for this entry.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.UsePropertyCache">
      <summary>Gets or sets a value indicating whether the cache should be committed after each operation.</summary>
      <returns>true if the cache should not be committed after each operation; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntry.Username">
      <summary>Gets or sets the user name to use when authenticating the client.</summary>
      <returns>The user name to use when authenticating the client.</returns>
    </member>
    <member name="T:System.DirectoryServices.DirectoryEntryConfiguration">
      <summary>The <see cref="T:System.DirectoryServices.DirectoryEntryConfiguration"></see> class provides a direct way to specify and obtain provider-specific options for manipulating a directory object. Typically, the options apply to search operations of the underlying directory store. The supported options are provider-specific.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntryConfiguration.GetCurrentServerName">
      <summary>Gets the host name of the server for the current binding to this directory object.</summary>
      <returns>The name of the server.</returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntryConfiguration.IsMutuallyAuthenticated">
      <summary>Determines if mutual authentication is performed by the SSPI layer.</summary>
      <returns>true if mutual authentication has been performed; otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntryConfiguration.PageSize">
      <summary>Gets or sets the page size in a paged search.</summary>
      <returns>The number of entries in a page.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding">
      <summary>Gets or sets the password encoding method.</summary>
      <returns>One of the <see cref="System.DirectoryServices.PasswordEncodingMethod"></see> enumeration members that indicates the type of password encoding.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordPort">
      <summary>Gets or sets the port number to use to establish an SSL connection when the password is set or changed.</summary>
      <returns>The port number to use to establish an SSL connection when the password is set or changed.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntryConfiguration.Referral">
      <summary>Gets or sets a value that determines if and how referral chasing is pursued.</summary>
      <returns>A combination of one or more of the <see cref="System.DirectoryServices.ReferralChasingOption"></see> enumeration members that specifies if and how referral chasing is pursued.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks">
      <summary>Gets or sets a security mask to use with <see cref="T:System.DirectoryServices.DirectoryEntryConfiguration"></see>.</summary>
      <returns>A combination of one or more of the <see cref="System.DirectoryServices.SecurityMasks"></see> enumeration members that specifies the security mask.</returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryEntryConfiguration.SetUserNameQueryQuota(System.String)">
      <summary>Sets the name of a security principal so that when the principal is accessed, its quota information will also be returned.</summary>
      <param name="accountName">The account name that is being set to allow queries on its principal name.</param>
    </member>
    <member name="T:System.DirectoryServices.DirectorySearcher">
      <summary>Performs queries against Active Directory Domain Services.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher"></see> class with default values.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher"></see> class using the specified search root.</summary>
      <param name="searchRoot">The node in the Active Directory Domain Services hierarchy where the search starts. The <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot"></see> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher"></see> class with the specified search filter.</summary>
      <param name="filter">The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <see cref="P:System.DirectoryServices.DirectorySearcher.Filter"></see> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher"></see> class with the specified search root and search filter.</summary>
      <param name="searchRoot">The node in the Active Directory Domain Services hierarchy where the search starts. The <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot"></see> property is initialized to this value.</param>
      <param name="filter">The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <see cref="P:System.DirectoryServices.DirectorySearcher.Filter"></see> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher"></see> class with the specified search filter and properties to retrieve.</summary>
      <param name="filter">The search filter string in Lightweight Directory Access Protocol (LDAP) format. The  <see cref="P:System.DirectoryServices.DirectorySearcher.Filter"></see> property is initialized to this value.</param>
      <param name="propertiesToLoad">The set of properties to retrieve during the search. The <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad"></see> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher"></see> class with the specified search root, search filter, and properties to retrieve..</summary>
      <param name="searchRoot">The node in the Active Directory Domain Services hierarchy where the search starts. The <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot"></see> property is initialized to this value.</param>
      <param name="filter">The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <see cref="P:System.DirectoryServices.DirectorySearcher.Filter"></see> property is initialized to this value.</param>
      <param name="propertiesToLoad">The set of properties that are retrieved during the search. The <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad"></see> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher"></see> class with the specified search filter, properties to retrieve, and search scope.</summary>
      <param name="filter">The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <see cref="P:System.DirectoryServices.DirectorySearcher.Filter"></see> property is initialized to this value.</param>
      <param name="propertiesToLoad">The set of properties to retrieve during the search. The <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad"></see> property is initialized to this value.</param>
      <param name="scope">The scope of the search that is observed by the server. The <see cref="T:System.DirectoryServices.SearchScope"></see> property is initialized to this value.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySearcher"></see> class with the specified search root, search filter, properties to retrieve, and search scope.</summary>
      <param name="searchRoot">The node in the Active Directory Domain Services hierarchy where the search starts. The <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot"></see> property is initialized to this value.</param>
      <param name="filter">The search filter string in Lightweight Directory Access Protocol (LDAP) format. The <see cref="P:System.DirectoryServices.DirectorySearcher.Filter"></see> property is initialized to this value.</param>
      <param name="propertiesToLoad">The set of properties to retrieve during the search. The <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad"></see> property is initialized to this value.</param>
      <param name="scope">The scope of the search that is observed by the server. The <see cref="T:System.DirectoryServices.SearchScope"></see> property is initialized to this value.</param>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.Asynchronous">
      <summary>Gets or sets a value that indicates if the search is performed asynchronously.</summary>
      <returns>true if the search is asynchronous; false otherwise.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery">
      <summary>Gets or sets the LDAP display name of the distinguished name attribute to search in. Only one attribute can be used for this type of search.</summary>
      <returns>The LDAP display name of the attribute to perform the search against, or an empty string of no attribute scope query is set.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="System.DirectoryServices.DirectorySearcher.SearchScope"></see> property is set to a value other than <see cref="System.DirectoryServices.SearchScope.Base"></see>.</exception>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.CacheResults">
      <summary>Gets or sets a value indicating whether the result is cached on the client computer.</summary>
      <returns>true if the result is cached on the client computer; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.ClientTimeout">
      <summary>Gets or sets the maximum amount of time that the client waits for the server to return results. If the server does not respond within this time, the search is aborted and no results are returned.</summary>
      <returns>A <see cref="System.TimeSpan"></see> structure that contains the maximum amount of time for the client to wait for the server to return results.  
 The default value is -1 second, which means to wait indefinitely.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.DerefAlias">
      <summary>Gets or sets a value indicating how the aliases of objects that are found during a search should be resolved.</summary>
      <returns>A <see cref="System.DirectoryServices.DereferenceAlias"></see> value that specifies the behavior in which aliases are dereferenced. The default setting for this property is <see cref="System.DirectoryServices.DereferenceAlias.Never"></see>.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization">
      <summary>Gets or sets an object that represents the directory synchronization control to use with the search.</summary>
      <returns>The <see cref="System.DirectoryServices.DirectorySynchronization"></see> object for the search. null if the directory synchronization control should not be used.</returns>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)">
      <summary>Releases the managed resources that are used by the <see cref="T:System.DirectoryServices.DirectorySearcher"></see> object and, optionally, releases unmanaged resources.</summary>
      <param name="disposing">true if this method releases both managed and unmanaged resources; false if it releases only unmanaged resources.</param>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.ExtendedDN">
      <summary>Gets or sets a value that indicates the format of the distinguished names.</summary>
      <returns>One of the <see cref="System.DirectoryServices.ExtendedDN"></see> values.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.Filter">
      <summary>Gets or sets a value indicating the Lightweight Directory Access Protocol (LDAP) format filter string.</summary>
      <returns>The search filter string in LDAP format, such as &amp;quot;(objectClass=user)&amp;quot;. The default is &amp;quot;(objectClass=*)&amp;quot;, which retrieves all objects.</returns>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.FindAll">
      <summary>Executes the search and returns a collection of the entries that are found.</summary>
      <returns>A <see cref="System.DirectoryServices.SearchResultCollection"></see> object that contains the results of the search.</returns>
      <exception cref="T:System.InvalidOperationException">The specified <see cref="System.DirectoryServices.DirectoryEntry"></see> is not a container.</exception>
      <exception cref="T:System.NotSupportedException">Searching is not supported by the provider that is being used.</exception>
    </member>
    <member name="M:System.DirectoryServices.DirectorySearcher.FindOne">
      <summary>Executes the search and returns only the first entry that is found.</summary>
      <returns>A <see cref="System.DirectoryServices.SearchResult"></see> object that contains the first entry that is found during the search.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.PageSize">
      <summary>Gets or sets a value indicating the page size in a paged search.</summary>
      <returns>The maximum number of objects the server can return in a paged search. The default is zero, which means do not do a paged search.</returns>
      <exception cref="T:System.ArgumentException">The new value is less than zero.</exception>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad">
      <summary>Gets a value indicating the list of properties to retrieve during the search.</summary>
      <returns>A <see cref="System.Collections.Specialized.StringCollection"></see> object that contains the set of properties to retrieve during the search.  
 The default is an empty <see cref="System.Collections.Specialized.StringCollection"></see>, which retrieves all properties.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly">
      <summary>Gets or sets a value indicating whether the search retrieves only the names of attributes to which values have been assigned.</summary>
      <returns>true if the search obtains only the names of attributes to which values have been assigned; false if the search obtains the names and values for all the requested attributes. The default value is false.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.ReferralChasing">
      <summary>Gets or sets a value indicating how referrals are chased.</summary>
      <returns>One of the <see cref="System.DirectoryServices.ReferralChasingOption"></see> values. The default is <see cref="System.DirectoryServices.ReferralChasingOption.External"></see>.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not one of the <see cref="System.DirectoryServices.ReferralChasingOption"></see> values.</exception>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.SearchRoot">
      <summary>Gets or sets a value indicating the node in the Active Directory Domain Services hierarchy where the search starts.</summary>
      <returns>The <see cref="System.DirectoryServices.DirectoryEntry"></see> object in the Active Directory Domain Services hierarchy where the search starts. The default is a null reference (Nothing in Visual Basic).</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.SearchScope">
      <summary>Gets or sets a value indicating the scope of the search that is observed by the server.</summary>
      <returns>One of the <see cref="System.DirectoryServices.SearchScope"></see> values. The default is <see cref="System.DirectoryServices.SearchScope.Subtree"></see>.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not one of the <see cref="System.DirectoryServices.ReferralChasingOption"></see> values.</exception>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.SecurityMasks">
      <summary>Gets or sets a value indicating which security access information for the specified attributes should be returned by the search.</summary>
      <returns>One of the <see cref="System.DirectoryServices.SecurityMasks"></see> values.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit">
      <summary>Gets or sets a value indicating the maximum amount of time the server should search for an individual page of results. This is not the same as the time limit for the entire search.</summary>
      <returns>A <see cref="System.TimeSpan"></see> that represents the amount of time the server should search for a page of results.  
 The default value is -1 seconds, which means to search indefinitely.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit">
      <summary>The <see cref="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit"></see> property gets or sets a value indicating the maximum amount of time the server spends searching. If the time limit is reached, only entries that are found up to that point are returned.</summary>
      <returns>A <see cref="System.TimeSpan"></see> that represents the amount of time that the server should search.  
 The default value is -1 seconds, which means to use the server-determined default of 120 seconds.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.SizeLimit">
      <summary>Gets or sets a value indicating the maximum number of objects that the server returns in a search.</summary>
      <returns>The maximum number of objects that the server returns in a search. The default value is zero, which means to use the server-determined default size limit of 1000 entries.</returns>
      <exception cref="T:System.ArgumentException">The new value is less than zero.</exception>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.Sort">
      <summary>Gets or sets a value indicating the property on which the results are sorted.</summary>
      <returns>A <see cref="System.DirectoryServices.SortOption"></see> object that specifies the property and direction that the search results should be sorted on.</returns>
      <exception cref="T:System.ArgumentNullException">The property value is null (Nothing in Visual Basic).</exception>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.Tombstone">
      <summary>Gets or sets a value indicating whether the search should also return deleted objects that match the search filter.</summary>
      <returns>true if deleted objects should be included in the search; false otherwise. The default value is false.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySearcher.VirtualListView">
      <summary>Gets or sets a value indicating the virtual list view options for the search.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectoryVirtualListView"></see> object that contains the virtual list view search information. The default value for this property is null, which means do not use the virtual list view search option.</returns>
    </member>
    <member name="T:System.DirectoryServices.DirectoryServicesCOMException">
      <summary>Contains extended error information about an error that occurred when the <see cref="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])"></see> method is called.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryServicesCOMException"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryServicesCOMException"></see> class with the specified string.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryServicesCOMException"></see> class with the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> destination for this serialization.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryServicesCOMException"></see> class with the specified string and exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="inner">The exception that is the cause of the current exception.</param>
    </member>
    <member name="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedError">
      <summary>Gets the extended error code.</summary>
      <returns>The extended error code.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryServicesCOMException.ExtendedErrorMessage">
      <summary>Gets the extended error message.</summary>
      <returns>The extended error message.</returns>
    </member>
    <member name="M:System.DirectoryServices.DirectoryServicesCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates the <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object with the data needed to serialize the <see cref="T:System.DirectoryServices.DirectoryServicesCOMException"></see> object.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object to populate with data.</param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object that is the destination for this serialization.</param>
    </member>
    <member name="T:System.DirectoryServices.DirectorySynchronization">
      <summary>Specifies how to synchronize a directory within a domain.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectorySynchronization.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySynchronization"></see> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySynchronization"></see> object with a cookie.</summary>
      <param name="cookie">A Byte data type object that specifies the directory synchronization search cookie.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySynchronization"></see> object with a directory synchronization object.</summary>
      <param name="sync">A <see cref="T:System.DirectoryServices.DirectorySynchronization"></see> data type object.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySynchronization"></see> object with a directory synchronization option.</summary>
      <param name="option">A <see cref="T:System.DirectoryServices.DirectorySynchronizationOptions"></see> data type object that specifies how a directory synchronization search is performed.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectorySynchronization"></see> object with a directory synchronization option and cookie.</summary>
      <param name="option">A <see cref="T:System.DirectoryServices.DirectorySynchronizationOptions"></see> data type object that specifies how a directory synchronization search is performed.</param>
      <param name="cookie">A Byte data type object that specifies the directory synchronization search cookie.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectorySynchronization.Copy">
      <summary>Returns a copy of the current <see cref="T:System.DirectoryServices.DirectorySynchronization"></see> instance.</summary>
      <returns>Returns a <see cref="System.DirectoryServices.DirectorySynchronization"></see> object.</returns>
    </member>
    <member name="M:System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie">
      <summary>Gets the directory synchronization search cookie.</summary>
      <returns>The directory synchronization search cookie object.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectorySynchronization.Option">
      <summary>Gets or sets the options for the directory synchronization search.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectorySynchronizationOptions"></see> object.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not one of the <see cref="System.DirectoryServices.DirectorySynchronizationOptions"></see> values.</exception>
    </member>
    <member name="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie">
      <summary>Resetss the directory synchronization search cookie.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])">
      <summary>Resets the directory synchronization search cookie.</summary>
      <param name="cookie">A Byte data type object that contains a directory synchronization search cookie.  This method resets the cookie for this <see cref="T:System.DirectoryServices.DirectorySynchronization"></see> object instance to this value.</param>
    </member>
    <member name="T:System.DirectoryServices.DirectorySynchronizationOptions">
      <summary>Contains flags that determine how directories within a domain will be synchronized.  These options can be set for the <see cref="P:System.DirectoryServices.DirectorySynchronization.Option"></see> property.</summary>
    </member>
    <member name="F:System.DirectoryServices.DirectorySynchronizationOptions.IncrementalValues">
      <summary>If this flag is not present, all of the values, up to a server-specified limit, in a multi-valued attribute are returned when any value changes. If this flag is present, only the changed values are returned.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.DirectorySynchronizationOptions.None">
      <summary>No flags are set.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.DirectorySynchronizationOptions.ObjectSecurity">
      <summary>If this flag is not present, the caller must have the right to replicate changes. If this flag is present, the caller requires no rights, but is allowed to see only objects and attributes that are accessible to the caller.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.DirectorySynchronizationOptions.ParentsFirst">
      <summary>Return parents before children, when parents would otherwise appear later in the replication stream.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.DirectorySynchronizationOptions.PublicDataOnly">
      <summary>Do not return private data in the search results.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.DirectoryVirtualListView">
      <summary>The <see cref="T:System.DirectoryServices.DirectoryVirtualListView"></see> class specifies how to conduct a virtual list view search. A virtual list view search enables users to view search results as address-book style virtual list views. It is specifically designed for very large result sets. Search data is retrieved in contiguous subsets of a sorted directory search.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryVirtualListView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryVirtualListView"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryVirtualListView"></see> class with the after count set.</summary>
      <param name="afterCount">A <see cref="T:System.Int32"></see> data type object that gets or sets a value to indicate the number of entries after the target entry that the client is requesting from the server.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryVirtualListView"></see> class with the before count, after count, and offset set.</summary>
      <param name="beforeCount">A <see cref="T:System.Int32"></see> data type objects that gets or sets a value to indicate the number of entries after the target entry that the client is requesting from the server.</param>
      <param name="afterCount">A <see cref="T:System.Int32"></see> data type object that gets or sets a value to indicate the number of entries after the target entry that the client is requesting from the server.</param>
      <param name="offset">An <see cref="T:System.Int32"></see> data type that gets or sets a value to indicate the estimated target entry&amp;#39;s requested offset within the list.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryVirtualListView"></see> class with the before count, after count, and target set.</summary>
      <param name="beforeCount">A <see cref="T:System.Int32"></see> data type objects that gets or sets a value to indicate the number of entries after the target entry that the client is requesting from the server.</param>
      <param name="afterCount">A <see cref="T:System.Int32"></see> data type object that gets or sets a value to indicate the number of entries after the target entry that the client is requesting from the server.</param>
      <param name="target">A <see cref="T:System.String"></see> that gets or sets a value to indicate the desired target entry requested by the client.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.Int32,System.DirectoryServices.DirectoryVirtualListViewContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryVirtualListView"></see> class with the before count, after count, offset and context set.</summary>
      <param name="beforeCount">A <see cref="T:System.Int32"></see> data type objects that gets or sets a value to indicate the number of entries after the target entry that the client is requesting from the server.</param>
      <param name="afterCount">A <see cref="T:System.Int32"></see> data type object that gets or sets a value to indicate the number of entries after the target entry that the client is requesting from the server.</param>
      <param name="offset">An <see cref="T:System.Int32"></see> data type that gets or sets a value to indicate the estimated target entry&amp;#39;s requested offset within the list.</param>
      <param name="context">A <see cref="T:System.DirectoryServices.DirectoryVirtualListViewContext"></see> data type objects that gets or sets a value to indicate the virtual list view search response.</param>
    </member>
    <member name="M:System.DirectoryServices.DirectoryVirtualListView.#ctor(System.Int32,System.Int32,System.String,System.DirectoryServices.DirectoryVirtualListViewContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DirectoryVirtualListView"></see> class with the before count, after count, target and context set.</summary>
      <param name="beforeCount">A <see cref="T:System.Int32"></see> data type objects that gets or sets a value to indicate the number of entries after the target entry that the client is requesting from the server.</param>
      <param name="afterCount">A <see cref="T:System.Int32"></see> data type object that gets or sets a value to indicate the number of entries after the target entry that the client is requesting from the server.</param>
      <param name="target">A <see cref="T:System.String"></see> that gets or sets a value to indicate the desired target entry requested by the client.</param>
      <param name="context">A <see cref="T:System.DirectoryServices.DirectoryVirtualListViewContext"></see> data type objects that gets or sets a value to indicate the virtual list view search response.</param>
    </member>
    <member name="P:System.DirectoryServices.DirectoryVirtualListView.AfterCount">
      <summary>Gets or sets a value to indicate the number of entries after the target entry that the client is requesting from the server.</summary>
      <returns>An integer value that represents the number of entries after the target entry that the client is requesting from the server.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="System.DirectoryServices.DirectoryVirtualListView.AfterCount"></see> property is set to a value less than zero.</exception>
    </member>
    <member name="P:System.DirectoryServices.DirectoryVirtualListView.ApproximateTotal">
      <summary>Gets or sets a value to indicate the estimated total count of items in the list.</summary>
      <returns>An integer value that represents the estimated total count of items in the list.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="System.DirectoryServices.DirectoryVirtualListView.ApproximateTotal"></see> property is set to a value less than zero.</exception>
    </member>
    <member name="P:System.DirectoryServices.DirectoryVirtualListView.BeforeCount">
      <summary>Gets or sets a value to indicate the number of entries before the target entry that the client is requesting from the server.</summary>
      <returns>An integer value that represents the number of entries before the target entry that the client is requesting from the server.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="System.DirectoryServices.DirectoryVirtualListView.BeforeCount"></see> property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.DirectoryServices.DirectoryVirtualListView.DirectoryVirtualListViewContext">
      <summary>Gets or sets a value to indicate the virtual list view search response.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectoryVirtualListViewContext"></see> that indicates the virtual list view search response.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryVirtualListView.Offset">
      <summary>Gets or sets a value to indicate the target entry&amp;#39;s offset within the list.</summary>
      <returns>An integer value that represents the target entry&amp;#39;s estimated offset within the list.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="System.DirectoryServices.DirectoryVirtualListView.Offset"></see> property is set to a value less than 0.</exception>
    </member>
    <member name="P:System.DirectoryServices.DirectoryVirtualListView.Target">
      <summary>The <see cref="P:System.DirectoryServices.DirectoryVirtualListView.Target"></see> property gets or sets a value to indicate the target entry that was requested by the client.</summary>
      <returns>A string that contains the target entry that was requested by the client.</returns>
    </member>
    <member name="P:System.DirectoryServices.DirectoryVirtualListView.TargetPercentage">
      <summary>The <see cref="P:System.DirectoryServices.DirectoryVirtualListView.TargetPercentage"></see> property gets or sets a value to indicate the estimated target entry&amp;#39;s requested offset within the list, as a percentage of the total number of items in the list.</summary>
      <returns>An integer value that represents the estimated percentage offset within the list of the target entry.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="System.DirectoryServices.DirectoryVirtualListView.TargetPercentage"></see> property is set to a value greater than 100 or less than 0.</exception>
    </member>
    <member name="T:System.DirectoryServices.DirectoryVirtualListViewContext">
      <summary>Specifies how to construct directory virtual list view response.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor">
      <summary>Initializes a new instance of the <see cref="M:System.DirectoryServices.DirectoryVirtualListViewContext.#ctor"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.DirectoryVirtualListViewContext.Copy">
      <summary>Returns a copy of the current <see cref="T:System.DirectoryServices.DirectoryVirtualListViewContext"></see> instance.</summary>
      <returns>Returns a <see cref="System.DirectoryServices.DirectoryVirtualListViewContext"></see> object.</returns>
    </member>
    <member name="T:System.DirectoryServices.ExtendedDN">
      <summary>The <see cref="T:System.DirectoryServices.ExtendedDN"></see> enumeration specifies the format in which to return the extended distinguished name. This enumeration is used with the <see cref="P:System.DirectoryServices.DirectorySearcher.ExtendedDN"></see> property.</summary>
    </member>
    <member name="F:System.DirectoryServices.ExtendedDN.HexString">
      <summary>Indicates that the distinguished name uses the hexadecimal format.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ExtendedDN.None">
      <summary>Indicates that the distinguished name uses the distinguished name format.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ExtendedDN.Standard">
      <summary>Indicates that the distinguished name uses the standard string format.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ExtendedRightAccessRule">
      <summary>Represents a specific type of access rule that is used to allow or deny an Active Directory object an extended right. Extended rights are special operations that are not covered by the standard set of access rights. An example of an extended right is Send-As, which gives a user the right to send email for another user. For a list of possible extended rights, see the topic Extended Rights in the MSDN Library at http://msdn.microsoft.com/library.  For more information about extended rights, see the topic Control Access Rights, also in the MSDN Library.</summary>
    </member>
    <member name="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ExtendedRightAccessRule"></see> class with the specified identity reference and access control type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that  identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
    </member>
    <member name="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ExtendedRightAccessRule"></see> class with the specified identity reference, access control type, and Active Directory security inheritance.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ExtendedRightAccessRule"></see> class with the specified identity reference, access control type, and extended right identifier.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="extendedRightType">The Rights-Guid of the extended right that this access rule applies to. For more information, see the topic Rights-Guid in the MSDN Library at http://msdn.microsoft.com/library.  In the Active Directory schema documentation, this information can be found in the Rights-GUID row on the reference page for each extended right. If this parameter is <see cref="F:System.Guid.Empty"></see>, the access rule applies to all extended rights. For a list of extended rights, see the topic Extended Rights in the MSDN Library.</param>
    </member>
    <member name="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ExtendedRightAccessRule"></see> class with the specified identity reference, access control type, Active Directory security inheritance, and inherited object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
      <param name="inheritedObjectType">The schema GUID of the child object type that can inherit this access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ExtendedRightAccessRule"></see> class with the specified identity reference, access control type, extended right identifier, and Active Directory security inheritance.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="extendedRightType">The Rights-Guid of the extended right that this access rule applies to. For more information, see the topic Rights-Guid in the MSDN Library at http://msdn.microsoft.com/library.  In the Active Directory schema documentation, this information can be found in the Rights-GUID row on the reference page for each extended right. If this parameter is <see cref="F:System.Guid.Empty"></see>, the access rule applies to all extended rights. For a list of extended rights, see the topic Extended Rights in the MSDN Library.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ExtendedRightAccessRule"></see> class with the specified identity reference, access control type, extended right identifier, Active Directory security inheritance, and inherited object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="extendedRightType">The Rights-Guid attribute of the extended right that this access rule applies to. For more information, see the topic Rights-Guid in the MSDN Library at http://msdn.microsoft.com/library. In the Active Directory schema documentation, this information can be found in the Rights-GUID row on the reference page for each extended right. If this parameter is <see cref="F:System.Guid.Empty"></see>, the access rule applies to all extended rights. For a list of extended rights, see the topic Extended Rights in the MSDN Library.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
      <param name="inheritedObjectType">The schema GUID of the child object type that can inherit this access rule.</param>
    </member>
    <member name="T:System.DirectoryServices.ListChildrenAccessRule">
      <summary>The <see cref="T:System.DirectoryServices.ListChildrenAccessRule"></see> class represents a specific type of access rule that is used to allow or deny an Active Directory Domain Services object the right to list child objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ListChildrenAccessRule"></see> class with the specified identity reference and access control type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
    </member>
    <member name="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ListChildrenAccessRule"></see> class with the specified identity reference, access control type, and Active Directory Domain Services security inheritance information.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ListChildrenAccessRule"></see> class with the specified identity reference, access control type, Active Directory Domain Services security inheritance information, and inherited object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
      <param name="inheritedObjectType">The schema GUID of the child object type that can inherit this access rule.</param>
    </member>
    <member name="T:System.DirectoryServices.PasswordEncodingMethod">
      <summary>Specifies whether SSL is used when you set or change a password. This enumeration is used with the <see cref="P:System.DirectoryServices.DirectoryEntryConfiguration.PasswordEncoding"></see> property.</summary>
    </member>
    <member name="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingClear">
      <summary>Passwords are not encoded and are transmitted in plain text.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.PasswordEncodingMethod.PasswordEncodingSsl">
      <summary>Passwords are encoded using SSL.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.PropertyAccess">
      <summary>The <see cref="T:System.DirectoryServices.PropertyAccess"></see> enumeration is used with the <see cref="T:System.DirectoryServices.PropertyAccessRule"></see> and <see cref="T:System.DirectoryServices.PropertySetAccessRule"></see> classes to indicate the type of access that is applied to an Active Directory property or property set.</summary>
    </member>
    <member name="F:System.DirectoryServices.PropertyAccess.Read">
      <summary>Indicates permission to read properties.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.PropertyAccess.Write">
      <summary>Indicates permission to write properties.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.PropertyAccessRule">
      <summary>The <see cref="T:System.DirectoryServices.PropertyAccessRule"></see> class represents a specific type of access rule that is used to allow or deny access to an Active Directory Domain Services property.</summary>
    </member>
    <member name="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.PropertyAccessRule"></see> class with the specified identity reference, access control type, and property access.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="access">One of the <see cref="T:System.DirectoryServices.PropertyAccess"></see> enumeration values that specifies the property access type.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.PropertyAccessRule"></see> class with the specified identity reference, access control type, property access, and Active Directory Domain Services security inheritance.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="access">One of the <see cref="T:System.DirectoryServices.PropertyAccess"></see> enumeration values that specifies the property access type.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.PropertyAccessRule"></see> class with the specified identity reference, access control type, property access, and property type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="access">One of the <see cref="T:System.DirectoryServices.PropertyAccess"></see> enumeration values that specifies the property access type.</param>
      <param name="propertyType">The schema GUID of the property that this access rule applies to. If this is <see cref="F:System.Guid.Empty"></see>, then the access rule applies to all property types.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.PropertyAccessRule"></see> class with the specified identity reference, access control type, property access, Active Directory Domain Services security inheritance, and inherited object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="access">One of the <see cref="T:System.DirectoryServices.PropertyAccess"></see> enumeration values that specifies the property access type.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
      <param name="inheritedObjectType">The schema GUID of the child object type that can inherit this access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.PropertyAccessRule"></see> class with the specified identity reference, access control type, property access, property type, and Active Directory Domain Services security inheritance.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="access">One of the <see cref="T:System.DirectoryServices.PropertyAccess"></see> enumeration values that specifies the property access type.</param>
      <param name="propertyType">The schema GUID of the property that this access rule applies to. If this is <see cref="F:System.Guid.Empty"></see>, then the access rule applies to all property types.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.PropertyAccessRule"></see> class with the specified identity reference, access control type, property access, property type, Active Directory Domain Services security inheritance, and inherited object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object which identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values which specifies the access rule type.</param>
      <param name="access">One of the <see cref="T:System.DirectoryServices.PropertyAccess"></see> enumeration values that specifies the property access type.</param>
      <param name="propertyType">The schema GUID of the property that this access rule applies to. If this is <see cref="F:System.Guid.Empty"></see>, then the access rule applies to all property types.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
      <param name="inheritedObjectType">The schema GUID of the child object type that can inherit this access rule.</param>
    </member>
    <member name="T:System.DirectoryServices.PropertyCollection">
      <summary>The <see cref="T:System.DirectoryServices.PropertyCollection"></see> class contains the properties of a <see cref="T:System.DirectoryServices.DirectoryEntry"></see>.</summary>
    </member>
    <member name="M:System.DirectoryServices.PropertyCollection.Contains(System.String)">
      <summary>Determines whether the specified property is in this collection.</summary>
      <param name="propertyName">The name of the property to find.</param>
      <returns>The return value is true if the specified property belongs to this collection; otherwise, false.</returns>
    </member>
    <member name="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
      <summary>Copies the all objects in this collection to an array, starting at the specified index in the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.PropertyValueCollection"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in array where this method starts copying this collection.</param>
      <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred during the call to the underlying interface.</exception>
    </member>
    <member name="P:System.DirectoryServices.PropertyCollection.Count">
      <summary>Gets the number of properties in this collection.</summary>
      <returns>The number of properties in this collection.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred during the call to the underlying interface.</exception>
      <exception cref="T:System.NotSupportedException">The directory cannot report the number of properties.</exception>
    </member>
    <member name="M:System.DirectoryServices.PropertyCollection.GetEnumerator">
      <summary>Returns an enumerator that you can use to iterate through this collection.</summary>
      <returns>An <see cref="System.Collections.IDictionaryEnumerator"></see> that you can use to iterate through this collection.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred during the call to the underlying interface.</exception>
    </member>
    <member name="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
      <summary>Gets the specified property.</summary>
      <param name="propertyName">The name of the property to retrieve.</param>
      <returns>The value of the specified property.</returns>
    </member>
    <member name="P:System.DirectoryServices.PropertyCollection.PropertyNames">
      <summary>Gets the names of the properties in this collection.</summary>
      <returns>An <see cref="System.Collections.ICollection"></see> object that contains the names of the properties in this collection.</returns>
    </member>
    <member name="P:System.DirectoryServices.PropertyCollection.Values">
      <summary>Gets the values of the properties in this collection.</summary>
      <returns>An <see cref="System.Collections.ICollection"></see> that contains the values of the properties in this collection.</returns>
    </member>
    <member name="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
      <param name="index">The zero-based index in array at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="array">array</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index">index</paramref> is less than zero.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="array">array</paramref> is multidimensional.  
 -or-  
 The number of elements in the source <see cref="System.Collections.ICollection"></see> is greater than the available space from <paramref name="index">index</paramref> to the end of the destination <paramref name="array">array</paramref>.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination <paramref name="array">array</paramref>.</exception>
    </member>
    <member name="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="System.Collections.ICollection"></see>.</returns>
    </member>
    <member name="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
      <summary>Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary"></see> object.</summary>
      <param name="key">The <see cref="T:System.Object"></see> to use as the key of the element to add.</param>
      <param name="value">The <see cref="T:System.Object"></see> to use as the value of the element to add.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="key">key</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="System.Collections.IDictionary"></see> object.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="System.Collections.IDictionary"></see> is read-only.  
 -or-  
 The <see cref="System.Collections.IDictionary"></see> has a fixed size.</exception>
    </member>
    <member name="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear">
      <summary>Removes all elements from the <see cref="T:System.Collections.IDictionary"></see> object.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="System.Collections.IDictionary"></see> object is read-only.</exception>
    </member>
    <member name="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
      <summary>Determines whether the <see cref="T:System.Collections.IDictionary"></see> object contains an element with the specified key.</summary>
      <param name="value">The key to locate in the <see cref="T:System.Collections.IDictionary"></see> object.</param>
      <returns>true if the <see cref="System.Collections.IDictionary"></see> contains an element with the key; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="key">key</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IDictionary"></see> object has a fixed size.</summary>
      <returns>true if the <see cref="System.Collections.IDictionary"></see> object has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IDictionary"></see> object is read-only.</summary>
      <returns>true if the <see cref="System.Collections.IDictionary"></see> object is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
      <summary>Gets or sets the element with the specified key.</summary>
      <param name="key">The key of the element to get or set.</param>
      <returns>The element with the specified key.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="key">key</paramref> is null.</exception>
      <exception cref="T:System.NotSupportedException">The property is set and the <see cref="System.Collections.IDictionary"></see> object is read-only.  
 -or-  
 The property is set, <paramref name="key">key</paramref> does not exist in the collection, and the <see cref="System.Collections.IDictionary"></see> has a fixed size.</exception>
    </member>
    <member name="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection"></see> object containing the keys of the <see cref="T:System.Collections.IDictionary"></see> object.</summary>
      <returns>An <see cref="System.Collections.ICollection"></see> object containing the keys of the <see cref="System.Collections.IDictionary"></see> object.</returns>
    </member>
    <member name="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
      <summary>Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary"></see> object.</summary>
      <param name="key">The key of the element to remove.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="key">key</paramref> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <see cref="System.Collections.IDictionary"></see> object is read-only.  
 -or-  
 The <see cref="System.Collections.IDictionary"></see> has a fixed size.</exception>
    </member>
    <member name="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerable"></see> object.</summary>
      <returns>An <see cref="System.Collections.IEnumerable"></see>.object.</returns>
    </member>
    <member name="T:System.DirectoryServices.PropertySetAccessRule">
      <summary>The <see cref="T:System.DirectoryServices.PropertySetAccessRule"></see> class represents a specific type of access rule that is used to allow or deny access to an Active Directory Domain Services property set. For a list of property sets that are defined for Active Directory Domain Services, see the topic Property Sets in the MSDN Library at http://msdn.microsoft.com/library.</summary>
    </member>
    <member name="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.PropertySetAccessRule"></see> class with the specified identity reference, access control type, property access type, and property set identifier.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="access">One of the <see cref="T:System.DirectoryServices.PropertyAccess"></see> enumeration values that specifies the property access type.</param>
      <param name="propertySetType">The Rights-Guid of the property set that this access rule applies to. In the Active Directory Domain Services schema documentation, this information can be found in the Rights-GUID row on the reference page for each property set. For more information, see the topic Rights-GUID in the MSDN Library at http://msdn.microsoft.com/library.  
 For a list of property sets, see the topic Property Sets in the MSDN Library.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.PropertySetAccessRule"></see> class with the specified identity reference, access control type, property access type, property set identifier, and Active Directory Domain Services security inheritance information.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="access">One of the <see cref="T:System.DirectoryServices.PropertyAccess"></see> enumeration values that specifies the property access type.</param>
      <param name="propertySetType">The Rights-Guid of the property set that this access rule applies to. In the Active Directory Domain Services schema documentation, this information can be found in the Rights-GUID row on the reference page for each property set. For more information, see the topic Rights-GUID in the MSDN Library at http://msdn.microsoft.com/library.  
 For a list of property sets, see the topic Property Sets in the MSDN Library.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.PropertySetAccessRule"></see> class with the specified identity reference, access control type, property access type, property set identifier, inheritance type, and inherited object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="access">One of the <see cref="T:System.DirectoryServices.PropertyAccess"></see> enumeration values that specifies the property access type.</param>
      <param name="propertySetType">The Rights-Guid of the property set that this access rule applies to. In the Active Directory Domain Services schema documentation, this information can be found in the Rights-GUID row on the reference page for each property set. For more information, see the topic Rights-GUID in the MSDN Library at http://msdn.microsoft.com/library.  
 For a list of property sets, see the topic Property Sets in the MSDN Library.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
      <param name="inheritedObjectType">The schema GUID of the child object type that can inherit this access rule.</param>
    </member>
    <member name="T:System.DirectoryServices.PropertyValueCollection">
      <summary>Contains the values of a <see cref="T:System.DirectoryServices.DirectoryEntry"></see> property.</summary>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)">
      <summary>Appends the specified <see cref="T:System.DirectoryServices.PropertyValueCollection"></see> object to this collection.</summary>
      <param name="value">The <see cref="T:System.DirectoryServices.PropertyValueCollection"></see> object to append to this collection.</param>
      <returns>The zero-based index of the <see cref="System.DirectoryServices.PropertyValueCollection"></see> object that is appended to this collection.</returns>
      <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred during the call to the underlying interface.</exception>
      <exception cref="T:System.ArgumentNullException">The property value is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)">
      <summary>Appends the contents of the <see cref="T:System.DirectoryServices.PropertyValueCollection"></see> object to this collection.</summary>
      <param name="value">A <see cref="T:System.DirectoryServices.PropertyValueCollection"></see> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.ArgumentNullException">The property value is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.PropertyValueCollection"></see> object to this collection.</summary>
      <param name="value">The <see cref="T:System.DirectoryServices.PropertyValueCollection"></see> array that contains the objects to append to this collection.</param>
      <exception cref="T:System.ArgumentNullException">The property value is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.DirectoryServices.PropertyValueCollection"></see> object is in this collection.</summary>
      <param name="value">The <see cref="T:System.DirectoryServices.PropertyValueCollection"></see> object to search for in this collection.</param>
      <returns>true if the specified property belongs to this collection; otherwise, false.</returns>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.PropertyValueCollection"></see> objects in this collection to the specified array, starting at the specified index in the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.PropertyValueCollection"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in array where this method starts copying this collection.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)">
      <summary>Retrieves the index of a specified property value in this collection.</summary>
      <param name="value">The property value to find.</param>
      <returns>The zero-based index of the specified property value. If the object is not found, the return value is -1.</returns>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts a property value into this collection at a specified index.</summary>
      <param name="index">The zero-based index at which to insert the property value.</param>
      <param name="value">The property value to insert.</param>
      <exception cref="T:System.ArgumentNullException">The property value is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred during the call to the underlying interface.</exception>
      <exception cref="T:System.IndexOutOfRangeException">The index is less than 0 (zero) or greater than the size of the collection.</exception>
    </member>
    <member name="P:System.DirectoryServices.PropertyValueCollection.Item(System.Int32)">
      <summary>Gets or sets the property value that is located at a specified index of this collection.</summary>
      <param name="index">The zero-based index of the property value.</param>
      <returns>The property value at the specified index.</returns>
      <exception cref="T:System.ArgumentNullException">The property value is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.IndexOutOfRangeException">The index is less than zero (0) or greater than the size of the collection.</exception>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.OnClearComplete">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete"></see> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index at which to insert value.</param>
      <param name="value">The new value of the element at index.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index at which value can be found.</param>
      <param name="value">The value of the element to remove from index.</param>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index at which oldValue can be found.</param>
      <param name="oldValue">The value to replace with newValue.</param>
      <param name="newValue">The new value of the element at index.</param>
    </member>
    <member name="P:System.DirectoryServices.PropertyValueCollection.PropertyName">
      <summary>Gets the property name for the attributes in the value collection.</summary>
      <returns>A string that contains the name of the property with the values that are included in this <see cref="System.DirectoryServices.PropertyValueCollection"></see> object.</returns>
    </member>
    <member name="M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)">
      <summary>Removes a specified property value from this collection.</summary>
      <param name="value">The property value to remove.</param>
      <exception cref="T:System.ArgumentNullException">The property value is a null reference (Nothing in Visual Basic).</exception>
      <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred during the call to the underlying interface.</exception>
    </member>
    <member name="P:System.DirectoryServices.PropertyValueCollection.Value">
      <summary>Gets or sets the values of the collection.</summary>
      <returns>If the collection is empty, the property value is a null reference (Nothing in Visual Basic). If the collection contains one value, the property value is that value. If the collection contains multiple values, the property value equals a copy of an array of those values.  
 If setting this property, the value or values are added to the <see cref="System.DirectoryServices.PropertyValueCollection"></see>. Setting this property to a null reference (Nothing) clears the collection.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection"></see> class is a read/write collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Appends the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object to this collection.</summary>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object to append to this collection.</param>
      <returns>The zero-based index of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object that is appended to this collection.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaProperty">schemaProperty</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[])">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> array to this collection.</summary>
      <param name="properties">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> array that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="properties">properties</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection)">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection"></see> object to this collection.</summary>
      <param name="properties">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection"></see> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="properties">properties</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection)">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection"></see> object to this collection.</summary>
      <param name="properties">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection"></see> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="properties">properties</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object is in this collection.</summary>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaProperty">schemaProperty</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)">
      <summary>Copies all of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="properties">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in properties where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="properties">properties</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Returns the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object in this collection.</summary>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaProperty">schemaProperty</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Inserts the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object into this collection at the specified index.</summary>
      <param name="index">The zero-based index in this collection where the object is inserted.</param>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object to insert into this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="site">site</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="schemaProperty">schemaProperty</paramref> specified is out of range of the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Item(System.Int32)">
      <summary>Gets or sets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object to get or set.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentException">The member already exists in this collection (applies to set only).</exception>
      <exception cref="T:System.ArgumentNullException">The item specified is null (applies to set only).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of this collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object has not yet been saved to the Active Directory Domain Services store (applies to set only).</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnClearComplete">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete"></see> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete"></see> method.</summary>
      <param name="index">The zero-based index at which the element was inserted.</param>
      <param name="value">The new value of the element at index.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index at which the element was removed.</param>
      <param name="value">The element that was removed from this collection.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index at which the set operation occurred.</param>
      <param name="oldValue">The element that was replaced by newValue.</param>
      <param name="newValue">The element that replaced oldValue.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnValidate(System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)"></see> method.</summary>
      <param name="value">The element in this collection to validate.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Removes the first occurrence of an object in this collection that is identical to the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</summary>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object to remove from this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object does not exist in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaProperty">schemaProperty</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"></see> class exception is thrown when a server is unavailable to respond to a service request.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"></see> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"></see> class, using the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> for the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"></see> class with a specified error message and an underlying exception object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception"></see> object that contains underlying exception information.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"></see> class with a specified error message, a specified error code, and a specified server name.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="errorCode">An error code that identifies the error.</param>
      <param name="name">The name of the server that caused the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.String,System.Exception,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"></see> class with a specified error message, an underlying exception object, a specified error code, and a specified server name.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception"></see> object that contains underlying exception information.</param>
      <param name="errorCode">An error code that identifies the error.</param>
      <param name="name">The name of the server that caused the error.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.ErrorCode">
      <summary>Gets the error code for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"></see> object.</summary>
      <returns>An <see cref="System.Int32"></see> value that identifies the error.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object with information about the exception.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object that holds serialized object data about the exception that is being thrown.</param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Message">
      <summary>Gets the message that describes the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"></see> object error.</summary>
      <returns>A <see cref="System.String"></see> that describes the error.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.Name">
      <summary>Gets the name of the server that is associated with the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"></see> object.</summary>
      <returns>A <see cref="System.String"></see> that contains the name of the server that caused this error.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> class defines a set of domain controllers that are well-connected in terms of speed and cost. A site object consists of a set of one or more IP subnets.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> class, using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object for creating this site.</param>
      <param name="siteName">The name for the new site.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:  

The target in the <paramref name="context">context</paramref> parameter is not a forest, configuration set, domain controller, or an AD LDS server.  

<paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.AdjacentSites">
      <summary>Gets a read-only collection of sites that are connected through a common site link with this site object.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection"></see> collection that contains a read-only collection of sites that are connected through a common site link with this site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.BridgeheadServers">
      <summary>Gets a read-only collection of bridgehead servers for this site.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection"></see> collection that contains a read-only collection of directory servers in this site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Delete">
      <summary>Deletes the current site.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose">
      <summary>Releases all resources used by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the object and optionally releases the managed resources.</summary>
      <param name="disposing">true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Domains">
      <summary>Gets all domains in the site.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainCollection"></see> object containing all domains in the site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Returns a site based on a site name.</summary>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that is valid for this site.</param>
      <param name="siteName">The name of the site to find.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object for the requested site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The site could not be found for the given <paramref name="siteName">siteName</paramref> in the <paramref name="context">context</paramref> specified.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:  

The target in the <paramref name="context">context</paramref> parameter is not a forest, configuration set, domain controller, or an AD LDS server.  

<paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetComputerSite">
      <summary>Gets the site that this computer is a member of.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object that contains the caller&amp;#39;s current site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The caller&amp;#39;s computer does not belong to a site.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object for this site.</summary>
      <returns>The <see cref="System.DirectoryServices.DirectoryEntry"></see> object for this site.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.InterSiteTopologyGenerator">
      <summary>Gets or sets the directory server that serves as the inter-site topology generator.</summary>
      <returns>A read/write <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object that represents the directory server that serves as the inter-site topology generator.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.NotSupportedException">The transport type is not supported.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.IntraSiteReplicationSchedule">
      <summary>Gets or sets the default setting for the replication schedule for the site.</summary>
      <returns>A read/write <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"></see> that represents the default setting for the replication schedule for the site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Location">
      <summary>Gets or sets the location of the site.</summary>
      <returns>A string value that gets or sets the location of the site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Name">
      <summary>Gets the name of the site.</summary>
      <returns>A string value that contains the name of the site.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Options">
      <summary>Gets or sets the site options.</summary>
      <returns>A read/write <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions"></see> value that gets or sets the site options.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredRpcBridgeheadServers">
      <summary>Returns a collection of directory servers that are designated as preferred bridgehead servers for the RPC transport.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServerCollection"></see> object that contains the directory servers that are designated as preferred bridgehead servers for the RPC transport.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredSmtpBridgeheadServers">
      <summary>Returns a collection of directory servers that are designated as preferred bridgehead servers for the SMTP transport.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServerCollection"></see> object that contains a collection of directory servers that are designated as preferred bridgehead servers for the SMTP transport.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Save">
      <summary>Writes any changes to the object to the Active Directory Domain Services store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The site object already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.NotSupportedException">The transport type is not supported.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Servers">
      <summary>Returns a read-only collection of directory servers in the site.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection"></see> that contains a read-only collection of directory servers in the site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.SiteLinks">
      <summary>Gets a read-only collection of site links that involve this site.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection"></see> object that contains a read-only collection of site links that this site is in.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Subnets">
      <summary>Returns a writable collection of subnets in the site.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection"></see> object that contains a writable collection of subnets in the site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.ToString">
      <summary>Returns the name of the site.</summary>
      <returns>A <see cref="System.String"></see> that represents the name of the site.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection"></see> class is a read/write collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Appends the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object to this collection.</summary>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object to append to this collection.</param>
      <returns>The zero-based index of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object that is appended to this collection.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="site">site</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[])">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> array to this collection.</summary>
      <param name="sites">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> array that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="sites">sites</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection)">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection"></see> object to this collection.</summary>
      <param name="sites">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection"></see> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="sites">sites</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object is in this collection.</summary>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="site">site</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index of array where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="array">array</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Returns the zero-based index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object in this collection.</summary>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="site">site</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Inserts the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object into this collection at the specified index.</summary>
      <param name="index">The zero-based index in the collection where the object is inserted.</param>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object to insert into this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="site">site</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Item(System.Int32)">
      <summary>Gets or sets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object to get or set.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentException">The member already exists in this collection (applies to set only).</exception>
      <exception cref="T:System.ArgumentNullException">The item specified is null (applies to set only).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of this collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object has not yet been saved in the Active Directory Domain Services store (applies to set only).</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnClearComplete">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete"></see> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index where the element was inserted.</param>
      <param name="value">The new value of the element at index.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index where the element was removed.</param>
      <param name="value">The element that was removed from the collection.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index where the object was set.</param>
      <param name="oldValue">The element that was replaced by newValue.</param>
      <param name="newValue">The element that replaced oldValue.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnValidate(System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)"></see> method.</summary>
      <param name="value">The element in this collection to validate.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Removes the first occurrence of an object in this collection that is identical to the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object.</summary>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object to remove from this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object does not exist in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="site">site</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> class represents a set of two or more sites that can be scheduled, for replication, to communicate at uniform cost and through a particular transport.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> class using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object and name.</summary>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object for creating this site link.</param>
      <param name="siteLinkName">The name for the site link.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons.  

The target in the <paramref name="context">context</paramref> parameter is not a forest,  configuration set, domain controller, or an AD LDS server.  

<paramref name="siteLinkName">siteLinkName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="siteLinkName">siteLinkName</paramref> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> class using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object, name, and transport type.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object for creating this site link.</param>
      <param name="siteLinkName">The name for the site link.</param>
      <param name="transport">An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> object that specifies the transport type.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons.  

The target in the <paramref name="context">context</paramref> parameter is not a forest, configuration set, domain controller, or an AD LDS server.  

<paramref name="siteLinkName">siteLinkName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> parameter or <paramref name="siteLinkName">siteLinkName</paramref> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="transport">transport</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> value.</exception>
      <exception cref="T:System.NotSupportedException">The <paramref name="transport">transport</paramref> type is not supported.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> class using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object, name, transport type, and replication schedule.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object for creating this site link.</param>
      <param name="siteLinkName">The name for the site link.</param>
      <param name="transport">An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> object that specifies the transport type.</param>
      <param name="schedule">An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"></see> object that specifies the replication schedule for this site link.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons.  

The target in the <paramref name="context">context</paramref> parameter is not a forest, configuration set, domain controller, or an AD LDS server.  

<paramref name="siteLinkName">siteLinkName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or the <paramref name="siteLinkName">siteLinkName</paramref> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="transport">transport</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> value.</exception>
      <exception cref="T:System.NotSupportedException">The <paramref name="transport">transport</paramref> type is not supported.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Cost">
      <summary>Gets or sets the site link cost.</summary>
      <returns>A cost that is associated with this site link. The default value is 100.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">An Active Directory Domain Services operation failed. See the exception for details.</exception>
      <exception cref="T:System.ArgumentException">The cost is less than zero. (applies to set only)</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.DataCompressionEnabled">
      <summary>Gets or sets the data compression mode of the site link.</summary>
      <returns>true if data compression mode is enabled; false if data compression is disabled.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">An Active Directory Domain Services operation failed. See the exception for details.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Delete">
      <summary>Deletes the current site link.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose">
      <summary>Releases all resources used by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the object and optionally releases the managed resources.</summary>
      <param name="disposing">true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Returns a site link based on a site link name and transport.</summary>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that is valid for this site link.</param>
      <param name="siteLinkName">The name of the site link to find.</param>
      <param name="transport">An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> object that specifies the transport type.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object for the requested site link.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The site could not be found for the given <paramref name="siteLinkName">siteLinkName</paramref> in the <paramref name="context">context</paramref> specified.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:  

The target in the <paramref name="context">context</paramref> parameter is not a forest, configuration set, domain controller, or an AD LDS server.  

<paramref name="siteLinkName">siteLinkName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="siteLinkName">siteLinkName</paramref> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transport">transport</paramref> parameter is not a valid <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> value.</exception>
      <exception cref="T:System.NotSupportedException">The <paramref name="transport">transport</paramref> type is not supported.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Returns a site link based on a site link name.</summary>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that is valid for this site link.</param>
      <param name="siteLinkName">The name of the site link to find.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object for the requested site link.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The site could not be found for the given <paramref name="siteLinkName">siteLinkName</paramref> in the <paramref name="context">context</paramref> specified.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:  

The target in the <paramref name="context">context</paramref> parameter is not a forest,  configuration set, domain controller, or an AD LDS server.  

<paramref name="siteLinkName">siteLinkName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="siteLinkName">siteLinkName</paramref> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> for this object.</summary>
      <returns>The <see cref="System.DirectoryServices.DirectoryEntry"></see> object for this site link.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.InterSiteReplicationSchedule">
      <summary>Gets or sets the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"></see> object for the current site link object.</summary>
      <returns>Gets or sets the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"></see> object for the current site link object. Setting this property changes the replication schedule for the site link.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">An Active Directory Domain Services operation failed. See the exception for details.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Name">
      <summary>Gets the name of the site link.</summary>
      <returns>The name of the site link.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.NotificationEnabled">
      <summary>Gets or sets a value indicating whether notifications are enabled.</summary>
      <returns>true if notifications are enabled; false if notifications are disabled.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">An Active Directory Domain Services operation failed. See the exception for details.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReciprocalReplicationEnabled">
      <summary>Gets or sets the mode for reciprocal replication between sites.</summary>
      <returns>true if reciprocal replication is enabled; false if reciprocal replication is disabled.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">An Active Directory Domain Services operation failed. See the exception for details.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ReplicationInterval">
      <summary>Gets or sets the replication interval between sites.</summary>
      <returns>The replication interval between sites.</returns>
      <exception cref="T:System.ArgumentException">Invalid <paramref name="ReplicationInterval">ReplicationInterval</paramref> specified.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Save">
      <summary>Writes any changes to the object to the Active Directory Domain Services store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The site object already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Sites">
      <summary>Gets a read/write collection of sites that this site link contains.</summary>
      <returns>A writable <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection"></see> collection of sites that this site link contains. Sites can be added and deleted from this collection.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">An Active Directory Domain Services operation failed. See the exception for details.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ToString">
      <summary>Returns the site link name.</summary>
      <returns>A string that contains the name of the site link.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.TransportType">
      <summary>Gets the transport type of the site link.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> value indicating the transport type of this site link.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> class represents a set of site links that communicate through a transport.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> class using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object and name.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that specifies the context for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object.</param>
      <param name="bridgeName">A <see cref="T:System.String"></see> that specifies the name for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons:  

The <paramref name="context">context</paramref> parameter does not refer to a valid forest, configuration set,  domain controller, or AD LDS server.  

The <paramref name="bridgeName">bridgeName</paramref> parameter is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context">context</paramref> parameter or the <paramref name="bridgeName">bridgeName</paramref> parameter is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Initializes an instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> class using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object, name, and transport type.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that specifies the context for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object.</param>
      <param name="bridgeName">A <see cref="T:System.String"></see> that specifies the name for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object.</param>
      <param name="transport">A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> value that specifies the transport type to be used.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons:  

The <paramref name="context">context</paramref> parameter does not refer to a valid forest, configuration set, domain controller, or AD LDS server.  

The <paramref name="bridgeName">bridgeName</paramref> parameter is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context">context</paramref> parameter or the <paramref name="bridgeName">bridgeName</paramref> parameter is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="transport">transport</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> value.</exception>
      <exception cref="T:System.NotSupportedException">The transport type specified in the <paramref name="transport">transport</paramref> parameter is not supported.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Delete">
      <summary>Deletes the site link bridge.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose">
      <summary>Releases the resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object and, optionally, releases unmanaged resources.</summary>
      <param name="disposing">true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object that matches a given directory context and name for the RPC transport protocol only.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that specifies the context for the search.</param>
      <param name="bridgeName">A <see cref="T:System.String"></see> that specifies the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object to search for.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object. null if the object was not found.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">In the <paramref name="context">context</paramref> parameter that was specified, the site link bridge could not be found for the given <paramref name="bridgeName">bridgeName</paramref> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons.  

The target in the <paramref name="context">context</paramref> parameter is not a forest, configuration set, domain controller, or an AD LDS server.  

The <paramref name="bridgeName">bridgeName</paramref> parameter is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context">context</paramref> or the <paramref name="bridgeName">bridgeName</paramref> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object that matches a given directory context, name, and transport type.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that specifies the context for the search.</param>
      <param name="bridgeName">A <see cref="T:System.String"></see> that specifies the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object to search for.</param>
      <param name="transport">A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> value that specifies the transport type of the object to search for.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object. null if the object was not found.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">In the <paramref name="context">context</paramref> parameter that was specified, the site link bridge could not be found for the given <paramref name="bridgeName">bridgeName</paramref> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons:  

The target in the <paramref name="context">context</paramref> parameter is not a forest, configuration set, domain controller, or an AD LDS server.  

The <paramref name="bridgeName">bridgeName</paramref> parameter is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context">context</paramref> or the <paramref name="bridgeName">bridgeName</paramref> parameter is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transport">transport</paramref> parameter is not a valid <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> value.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntry"></see> object that represents the directory entry for the site link bridge object.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Name">
      <summary>Gets the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object.</summary>
      <returns>A <see cref="System.String"></see> that represents the name of the current site link bridge object.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Save">
      <summary>Commits all changes to the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object to the underlying directory store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The site link bridge object already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.SiteLinks">
      <summary>Gets a collection of site link objects that are associated with the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection"></see> object that contains <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> objects that are associated with the current site link bridge object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.ToString">
      <summary>Gets the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object.</summary>
      <returns>A <see cref="System.String"></see> that represents the name of the current <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.TransportType">
      <summary>Gets the transport type for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> value that represents the transport type that is used by the current site link bridge object.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection"></see> class is a read/write collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Appends the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object to this collection.</summary>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object to append to this collection.</param>
      <returns>The zero-based index of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object that is appended to this collection.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="link">link</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[])">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> array to this collection.</summary>
      <param name="links">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> array that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="links">links</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection)">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection"></see> object to this collection.</summary>
      <param name="links">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection"></see> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="links">links</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object is in this collection.</summary>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object is in this collection; otherwise false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="link">link</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> array that receives the elements of this collection.</param>
      <param name="index">The zero-based index in array where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="array">array</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object in this collection.</summary>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="link">link</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Inserts the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object into this collection at the specified index.</summary>
      <param name="index">The zero-based index in this collection where the object is inserted.</param>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object to insert into this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="link">link</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Item(System.Int32)">
      <summary>Gets or sets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object to get or set.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentException">The member already exists in this collection (applies to set only).</exception>
      <exception cref="T:System.ArgumentNullException">The item specified is null (applies to set only).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of this collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> specified has not yet been saved to the Active Directory Domain Services store (applies to set only).</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnClearComplete">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete"></see> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete"></see> method.</summary>
      <param name="index">The zero-based index at which the element was inserted.</param>
      <param name="value">The new value of the element at index.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index at which the element was removed.</param>
      <param name="value">The element that was removed from the collection.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index at which the set operation occurred.</param>
      <param name="oldValue">The element that was replaced by newValue.</param>
      <param name="newValue">The element that replaced oldValue.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnValidate(System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)"></see> method.</summary>
      <param name="value">The element in this collection to validate.</param>
      <exception cref="T:System.ArgumentException"><paramref name="value">value</paramref> is not an <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="value">value</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Removes the first occurrence of an object in this collection that is identical to the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object.</summary>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object to remove from this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object does not exist in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="link">link</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions">
      <summary>Specifies the bit identifiers for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object site options.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoInterSiteTopologyDisabled">
      <summary>Automatic intra-site topology generation is disabled.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoMinimumHopDisabled">
      <summary>Automatic minimum hops topology is disabled.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.AutoTopologyDisabled">
      <summary>Inter-site topology generation is disabled.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.ForceKccWindows2003Behavior">
      <summary>The KCC (Knowledge Consistency Checker) is forced to operate in Windows Server 2003 behavior mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.GroupMembershipCachingEnabled">
      <summary>Group memberships for users is enabled.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.None">
      <summary>No site options are set.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RandomBridgeHeaderServerSelectionDisabled">
      <summary>The KCC can randomly pick a bridgehead server when creating a connection.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.RedundantServerTopologyEnabled">
      <summary>Creation of static failover connections is enabled.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.StaleServerDetectDisabled">
      <summary>Stale server detection is disabled.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.TopologyCleanupDisabled">
      <summary>Topology cleanup is disabled.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseHashingForReplicationSchedule">
      <summary>The KCC is allowed to use hashing when creating a replication schedule.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteOptions.UseWindows2000IstgElection">
      <summary>The KCC is forced to use the Windows 2000 ISTG election algorithm.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> class represents a subnet in a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see>.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Initializes an instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> class, using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object and subnet name.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that specifies the context for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object.</param>
      <param name="subnetName">A <see cref="T:System.String"></see> that specifies the name of the subnet.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><paramref name="context">context</paramref> specifies a configuration set, but no AD LDS instance was found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons:  

<paramref name="context">context</paramref> does not refer a valid forest, configuration set, domain controller, or AD LDS server.  

<paramref name="subnetName">subnetName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="subnetName">subnetName</paramref> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
      <summary>Initializes an instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> class, using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object, subnet name, and site name.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that specifies the context for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object.</param>
      <param name="subnetName">A <see cref="T:System.String"></see> that specifies the name of the subnet.</param>
      <param name="siteName">A <see cref="T:System.String"></see> that specifies the name of the site that contains the subnet.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><paramref name="context">context</paramref> specifies a configuration set, but no AD LDS instance was found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons:  

<paramref name="context">context</paramref> does not refer to a valid forest, configuration set, domain controller, or AD LDS server.  

<paramref name="subnetName">subnetName</paramref> or <paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref>, <paramref name="subnetName">subnetName</paramref>, or <paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Delete">
      <summary>Deletes the subnet that is represented by this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose">
      <summary>Releases all resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object and optionally releases the managed resources.</summary>
      <param name="disposing">true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Returns a subnet that is based on a subnet name.</summary>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that is valid for this subnet.</param>
      <param name="subnetName">The name of the subnet to find.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> for the requested subnet.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">In the <paramref name="context">context</paramref> parameter that was specified, the site could not be found for the given <paramref name="subnetName">subnetName</paramref> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons:  

The target in the <paramref name="context">context</paramref> parameter is not a forest, configuration set, domain controller, or AD LDS server.  

<paramref name="subnetName">subnetName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="subnetName">subnetName</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object.</summary>
      <returns>The <see cref="System.DirectoryServices.DirectoryEntry"></see> object for this <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Location">
      <summary>Gets or sets the location description of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object.</summary>
      <returns>The location description of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name">
      <summary>Gets the subnet name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object.</summary>
      <returns>The name of the subnet.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Save">
      <summary>Writes any changes to the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object to the Active Directory Domain Services store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The subnet object already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Site">
      <summary>Gets or sets the site that the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object is a member of.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object for the site that the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object is a member of.</returns>
      <exception cref="T:System.InvalidOperationException">Applies to set only. The specified <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object does not exist. If it was newly created, it must be committed to the directory store before assigning it to the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ToString">
      <summary>Returns the name of the subnet.</summary>
      <returns>A <see cref="System.String"></see> that represents the name of the subnet.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection"></see> class is a read/write collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <summary>Appends the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object to this collection.</summary>
      <param name="subnet">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object to append to this collection.</param>
      <returns>The zero-based index of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> that is appended to this collection.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="subnet">subnet</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[])">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> array to this collection.</summary>
      <param name="subnets">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> array that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="subnets">subnets</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection)">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection"></see> object to this collection.</summary>
      <param name="subnets">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection"></see> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="subnets">subnets</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object is in this collection.</summary>
      <param name="subnet">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="subnet">subnet</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in array where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="array">array</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object in this collection.</summary>
      <param name="subnet">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="subnet">subnet</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <summary>Inserts the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object into this collection at the specified index.</summary>
      <param name="index">The zero-based index in this collection where the object is inserted.</param>
      <param name="subnet">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object to insert into this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="subnet">subnet</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Item(System.Int32)">
      <summary>Gets or sets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object to get or set.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentException">The member already exists in this collection (applies to set only).</exception>
      <exception cref="T:System.ArgumentNullException">The item specified is null (applies to set only).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of this collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> specified has not yet been saved to the Active Directory Domain Services store (applies to set only).</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClear">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete"></see> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnClearComplete">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete"></see> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete"></see> method.</summary>
      <param name="index">The zero-based index at which the element was inserted.</param>
      <param name="value">The new value of the element at index.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index at which the element was removed.</param>
      <param name="value">The element that was removed from the collection.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index at which the set operation occurred.</param>
      <param name="oldValue">The element that was replaced by newValue.</param>
      <param name="newValue">The element that replaced oldValue.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnValidate(System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)"></see> method.</summary>
      <param name="value">The element in this collection to validate.</param>
      <exception cref="T:System.ArgumentException"><paramref name="value">value</paramref> is not an <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="value">value</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
      <summary>Removes the first occurrence of an object in this collection that is identical to the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object.</summary>
      <param name="subnet">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object to remove from this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object does not exist in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="subnet">subnet</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax">
      <summary>Specifies the data representation (syntax) type of a <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.AccessPointDN">
      <summary>An AccessPoint object type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Bool">
      <summary>A Boolean value type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseExactString">
      <summary>A case-sensitive string type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.CaseIgnoreString">
      <summary>A case-insensitive string type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DirectoryString">
      <summary>A directory string specification.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DN">
      <summary>A distinguished name of a directory service object.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithBinary">
      <summary>An ADS_DN_WITH_BINARY structure used for mapping a distinguished name to a non-varying GUID. For more information, see the topic &amp;quot;ADS_DN_WITH_BINARY&amp;quot; in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.DNWithString">
      <summary>An ADS_DN_WITH_STRING structure used for mapping a distinguished name to a non-varying string value. For more information, see the topic &amp;quot;ADS_DN_WITH_STRING&amp;quot; in the MSDN Library at http://msdn.microsoft.com/library</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Enumeration">
      <summary>An enumeration value type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.GeneralizedTime">
      <summary>A time expressed in generalized time format.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.IA5String">
      <summary>An IA5 character set string.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int">
      <summary>A 32-bit integer value type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Int64">
      <summary>A 64 bit (large) integer value type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.NumericString">
      <summary>A numeric value represented as a string.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.OctetString">
      <summary>A byte array represented as a string.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Oid">
      <summary>An OID value type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ORName">
      <summary>An OR-Name object type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PresentationAddress">
      <summary>A Presentation-Address object type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.PrintableString">
      <summary>A printable character set string.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.ReplicaLink">
      <summary>A Replica-Link object type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.SecurityDescriptor">
      <summary>A security descriptor value type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.Sid">
      <summary>An SID value type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax.UtcTime">
      <summary>A time expressed in Coordinated Universal Time format.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType">
      <summary>Identifies the transport type of a replication connection.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Rpc">
      <summary>Specifies the RPC transport type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Smtp">
      <summary>Specifies the SMTP transport type.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.AdamInstance">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance"></see> class represents an AD LDS instance server.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency">
      <summary>Invokes the Knowledge Consistency Checker (KCC) that verifies the replication topology for this AD LDS instance.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet"></see> object for this AD LDS instance.</summary>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ConfigurationSet"></see> object for this <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition">
      <summary>Gets or sets the default partition that this AD LDS instance serves.</summary>
      <returns>A <see cref="System.String"></see> that contains the distinguished name of the default partition that this AD LDS instance serves.  If the default partition is not set, this will return null.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">The partition name is not in a valid distinguished name format, or the AD LDS instance does not serve this partition. Applies to set only.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object and, optionally, releases managed resources.</summary>
      <param name="disposing">A <see cref="T:System.Boolean"></see> value that determines if the managed resources should be released. true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize">
      <summary>Overrides the <see cref="M:System.Object.Finalize"></see> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Finds all AD LDS instances in the specified context that host the specified partition.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search. The target of this context must be an AD LDS configuration set.</param>
      <param name="partitionName">A <see cref="T:System.String"></see> that contains the name of the partition to search for AD LDS instances.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.AdamInstanceCollection"></see> that contains the AD LDS instances that are found by the search.</returns>
      <exception cref="T:System.ArgumentException">The <paramref name="context">context</paramref> or <paramref name="partitionName">partitionName</paramref> parameter is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context">context</paramref> or <paramref name="partitionName">partitionName</paramref> parameter is null.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No AD LDS instance was found.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Finds a single AD LDS instance in the specified context that hosts the specified partition.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search. The target of this context must be an AD LDS configuration set.</param>
      <param name="partitionName">A <see cref="T:System.String"></see> that contains the name of the partition to search for an AD LDS instance.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object that represents the AD LDS instance that is found by the search.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No AD LDS instance was found.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="context">context</paramref> or <paramref name="partitionName">partitionName</paramref> parameter is not valid.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context">context</paramref> or <paramref name="partitionName">partitionName</paramref> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Returns an AD LDS instance for a specified context.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use to retrieve the object. The target of the context must be an AD LDS instance.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object that refers to the AD LDS instance that is found.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the target that was specified in the <paramref name="context">context</paramref> parameter could not be made.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context">context</paramref> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="context">context</paramref> parameter is not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors">
      <summary>Returns the replication neighbors for this AD LDS instance.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection"></see> object that contains the replication neighbors for this AD LDS instance.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures">
      <summary>Returns a list of replication connection failures that are recorded by this AD LDS instance.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection"></see> object that contains the replication connection failures that are recorded by this AD LDS instance.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)">
      <summary>Returns the replication cursor information for a specified partition.</summary>
      <param name="partition">A <see cref="T:System.String"></see> that contains the distinguished name of the partition for which to retrieve the replication cursor information.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection"></see> object that contains the replication cursor information.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="partition">partition</paramref> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="partition">partition</paramref> parameter is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)">
      <summary>Returns the replication metadata for a specific Active Directory Domain Services object.</summary>
      <param name="objectPath">A <see cref="T:System.String"></see> that contains the path to the Active Directory Domain Services object for which to retrieve the replication metadata.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata"></see> object that contains the replication cursor information.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="objectPath">objectPath</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="objectPath">objectPath</paramref> is not valid.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)">
      <summary>Returns the replication neighbors for a specified partition.</summary>
      <param name="partition">A <see cref="T:System.String"></see> that contains the distinguished name of the partition for which to retrieve the replication neighbors.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection"></see> object that contains the replication neighbors for this AD LDS instance.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="partition">partition</paramref> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="partition">partition</paramref> parameter is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation">
      <summary>Returns the current and pending replication operations for this AD LDS instance.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation"></see> object that contains the current and pending replications operations.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.HostName">
      <summary>Gets the host name of the computer that hosts this AD LDS instance.</summary>
      <returns>A <see cref="System.String"></see> that contains the computer host name.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections">
      <summary>Gets the inbound replication connections for this AD LDS instance.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection"></see> object that contains the inbound replication connections for this AD LDS instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress">
      <summary>Gets the IP address of the computer that hosts this AD LDS instance.</summary>
      <returns>A <see cref="System.String"></see> that contains the IP address of the computer that hosts this AD LDS instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort">
      <summary>Gets the LDAP port number of this AD LDS instance.</summary>
      <returns>A <see cref="System.Int32"></see> value that contains the LDAP port number of this AD LDS instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections">
      <summary>Gets the outbound replication connections for this AD LDS instance.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection"></see> object that contains the outbound replication connections for this AD LDS instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.Roles">
      <summary>Gets the roles that this AD LDS instance holds.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.AdamRoleCollection"></see> object that contains <see cref="System.DirectoryServices.ActiveDirectory.AdamRole"></see> members that indicate the roles that this AD LDS instance serves.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.Save">
      <summary>Commits changes to the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object to the underlying directory store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <summary>Seizes ownership of the specified role.</summary>
      <param name="role">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"></see> members that specifies which role the AD LDS instance should take ownership of.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="role">role</paramref> parameter is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName">
      <summary>Gets the name of the site of which this AD LDS instance is a member.</summary>
      <returns>A <see cref="System.String"></see> that contains the name of the site of which this AD LDS instance is a member.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort">
      <summary>Gets the SSL port number of this AD LDS instance.</summary>
      <returns>A <see cref="System.Int32"></see> value that contains the SSL port number of this AD LDS instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback">
      <summary>Gets or sets the synchronization delegate for this AD LDS instance.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.SyncUpdateCallback"></see> delegate that this AD LDS instance will use for synchronization notifications.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <summary>Synchronizes the specified partition with all other domain controllers.</summary>
      <param name="partition">A <see cref="T:System.String"></see> that contains the distinguished name of the partition of the domain controller to synchronize.</param>
      <param name="options">A combination of one of more of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions"></see> members.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="partition">partition</paramref> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="partition">partition</paramref> parameter is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">An error occurred in the synchronization operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)">
      <summary>Synchronizes the specified partition with the specified domain controller.</summary>
      <param name="partition">A <see cref="T:System.String"></see> that contains the distinguished name of the partition to synchronize.</param>
      <param name="sourceServer">A <see cref="T:System.String"></see> that contains the name of the server with which to synchronize.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="partition">partition</paramref> or <paramref name="sourceServer">sourceServer</paramref> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="partition">partition</paramref> or <paramref name="sourceServer">sourceServer</paramref> parameter is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <summary>Transfers the specified role to this AD LDS instance.</summary>
      <param name="role">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"></see> members that specifies which role should be transferred to this AD LDS instance.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="role">role</paramref> parameter is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)">
      <summary>Begins a synchronization of the specified partition.</summary>
      <param name="partition">A <see cref="T:System.String"></see> that contains the distinguished name of the partition to synchronize.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="partition">partition</paramref> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="partition">partition</paramref> is parameter not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamInstance)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object is in this collection.</summary>
      <param name="adamInstance">The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="adamInstance">adamInstance</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamInstance[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="adamInstances">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in adamInstances where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough to hold the required number of elements.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="adamInstances">adamInstances</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamInstance)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object in this collection.</summary>
      <param name="adamInstance">The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="adamInstance">adamInstance</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.AdamRole">
      <summary>Indicates specific roles of a <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.AdamRole.NamingRole">
      <summary>The AD LDS server holds the domain naming master role.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.AdamRole.SchemaRole">
      <summary>The AD LDS server holds the schema operations master role.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRoleCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"></see> items.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"></see> item is in this collection.</summary>
      <param name="role">The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"></see> item to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.AdamRole"></see> item is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="role">role</paramref> parameter is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="role">role</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.AdamRole"></see> value.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamRole[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"></see> items in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="roles">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"></see> items that receives the elements of this collection.</param>
      <param name="index">The zero-based index in roles where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough to hold the required number of elements.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="roles">roles</paramref> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> parameter that is specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamRole)">
      <summary>Returns the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"></see> item in this collection.</summary>
      <param name="role">The <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"></see> item to search for in this collection.</param>
      <returns>The zero-based index of the first matching item. -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.AdamRole"></see> item.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="role">role</paramref> parameter is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="role">role</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.AdamRole"></see> value.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AdamRoleCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"></see> item in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.AdamRole"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.AdamRole"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> class represents an application partition for a particular domain.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> class, using the specified distinguished name.</summary>
      <param name="context">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that is used to create this application partition.</param>
      <param name="distinguishedName">The <see cref="T:System.String"></see> that specifies the distinguished name for this application partition.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">The target in the <paramref name="context">context</paramref> parameter is not a server, or the <paramref name="distinguishedName">distinguishedName</paramref> parameter is not in a valid distinguished name format.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="distinguishedName">distinguishedName</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> class, using the specified distinguished name and object class.</summary>
      <param name="context">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that is used to create this application partition.</param>
      <param name="distinguishedName">The <see cref="T:System.String"></see> that specifies the distinguished name for this application partition.</param>
      <param name="objectClass">The <see cref="T:System.String"></see> that specifies the object class that represents this application partition.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">The target in the <paramref name="context">context</paramref> parameter is not a server, or the <paramref name="distinguishedName">distinguishedName</paramref> parameter is not in a valid distinguished name format.  This exception is also thrown if the application partition is being created within an Active Directory forest, rather than an AD LDS configuration set, because the <paramref name="objectClass">objectClass</paramref> can only be specified for AD LDS configuration sets.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="distinguishedName">distinguishedName</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Delete">
      <summary>Deletes this application partition.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object has not yet been saved in the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.DirectoryServers">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection"></see> object that contains the directory servers that host this application partition.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServerCollection"></see> object that contains <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> objects that represent directory servers for this application partition.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Dispose(System.Boolean)">
      <summary>Releases the managed resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object and optionally releases unmanaged resources.</summary>
      <param name="disposing">A <see cref="T:System.Boolean"></see> value that determines if the managed resources should be released. true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers">
      <summary>Returns a <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection"></see> object that contains all of the directory servers that host this application partition.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection"></see> object that contains all of the directory servers that host this application partition.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers(System.String)">
      <summary>Returns an <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection"></see> object that contains all of the directory servers that host this application partition in the specified site.</summary>
      <param name="siteName">A <see cref="T:System.String"></see> that specifies the name of the site to search.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection"></see> object that contains the directory servers that host this application partition in the specified site.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers(System.String)">
      <summary>Returns a <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection"></see> object that contains all of the directory servers that have registered a site-specific DNS record, for the specified site, for the application partition.</summary>
      <param name="siteName">A <see cref="T:System.String"></see> that specifies the name of the site to search.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection"></see> object that contains the directory servers that are found.</returns>
      <exception cref="T:System.ArgumentException"><paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.NotSupportedException">The application partition is an AD LDS application partition.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers">
      <summary>Returns a <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection"></see> object that contains all of the directory servers that have registered either a site-specific DNS record for the current site or a non-site-specific DNS record for the application partition.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection"></see> object that contains the directory servers that were found.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.NotSupportedException">The application partition is an AD LDS application partition.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Returns an <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object for a given <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object and distinguished name.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search.</param>
      <param name="distinguishedName">A <see cref="T:System.String"></see> that contains the distinguished name of the application partition to search for.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object that represents the results of the search.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">This exception will occur for any one of the following reasons:  

A target specified in the <paramref name="context">context</paramref> parameter could not be found.  

The target is a configuration set and no AD LDS instance was found in that configuration set.  

The target is a forest and the application partition was not found in that forest.  

The target does not host the current application partition.  

No AD LDS instance was found for the application partition.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="distinguishedName">distinguishedName</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons:  

The <paramref name="context">context</paramref> parameter is not a valid forest, configuration set, or directory server.  

The <paramref name="distinguishedName">distinguishedName</paramref> has a zero length  

The <paramref name="distinguishedName">distinguishedName</paramref> parameter is in an invalid format.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer">
      <summary>Returns a <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object for this application partition and current site.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object for this application partition and site.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.Boolean)">
      <summary>Returns a <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object for the application partition and current site with an option to ignore cached information.</summary>
      <param name="forceRediscovery">A <see cref="T:System.Boolean"></see> value that indicates whether cached information should be ignored. true if cached information should be ignored; otherwise, false.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object for this application partition and site.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String)">
      <summary>Returns a <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object for the application partition and a specified site.</summary>
      <param name="siteName">A <see cref="T:System.String"></see> that specifies a site name.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object for this application partition and specified site.</returns>
      <exception cref="T:System.ArgumentException"><paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String,System.Boolean)">
      <summary>Returns a <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object for this application partition for a specified site, with an option to ignore cached information.</summary>
      <param name="siteName">A <see cref="T:System.String"></see> that specifies a site name.</param>
      <param name="forceRediscovery">A <see cref="T:System.Boolean"></see> value that indicates whether cached information should be ignored. true if cached information should be ignored; otherwise, false.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object for this application partition and specified site.</returns>
      <exception cref="T:System.ArgumentException"><paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object has not yet been committed to the underlying directory store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetApplicationPartition(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Returns an <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object for a specified directory context.</summary>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use to retrieve the application partition object.  The directory context must specify the DNS name of the application partition.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object that represents the application partition for the specified directory context.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A target specified in <paramref name="context">context</paramref> could not be found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> is not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetDirectoryEntry">
      <summary>Gets a <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object for this application partition.</summary>
      <returns>The <see cref="System.DirectoryServices.DirectoryEntry"></see> for this application partition.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.Save">
      <summary>Commits all changes to the current application partition object to the underlying directory store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">An application partition with the same name already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.SecurityReferenceDomain">
      <summary>Gets and sets the security reference domain for this application partition.</summary>
      <returns>The distinguished name of the security reference domain for this application.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object has not yet been committed to the underlying directory store (applies to set only).</exception>
      <exception cref="T:System.NotSupportedException">The application partition is an AD LDS application partition.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Contains(System.DirectoryServices.ActiveDirectory.ApplicationPartition)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object is in this collection.</summary>
      <param name="applicationPartition">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> is in this collection, otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="applicationPartition">applicationPartition</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ApplicationPartition[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="applicationPartitions">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in applicationPartitions where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="applicationPartitions">applicationPartitions</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ApplicationPartition)">
      <summary>Returns the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object in this collection.</summary>
      <param name="applicationPartition">The <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching item. -1 if no member of this collection is identical to <paramref name="applicationPartition">applicationPartition</paramref>.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="applicationPartition">applicationPartition</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> class is used to contain replication metadata for an Active Directory Domain Services attribute.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingChangeTime">
      <summary>Gets the time at which the last originating change was made to this attribute.</summary>
      <returns>A <see cref="System.DateTime"></see> object that contains the last originating change time for this attribute.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LastOriginatingInvocationId">
      <summary>Gets the invocation identifier of the server on which the last change was made to this attribute.</summary>
      <returns>A <see cref="System.Guid"></see> structure that contains the identifier.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.LocalChangeUsn">
      <summary>Gets the update sequence number (USN) on the destination server at which the last change to this attribute was applied.</summary>
      <returns>An <see cref="System.Int64"></see> value that contains the USN.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Name">
      <summary>Gets the name of the attribute.</summary>
      <returns>The LDAP display name of the attribute.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingChangeUsn">
      <summary>Gets the update sequence number (USN) on the originating server at which the last change to this attribute was made.</summary>
      <returns>An <see cref="System.Int64"></see> value that contains the USN.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.OriginatingServer">
      <summary>Gets the name of the originating server.</summary>
      <returns>The distinguished name of the originating server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadata.Version">
      <summary>Gets the version number of this attribute.</summary>
      <returns>The version number of this attribute. Each originating modification of the attribute increases this value by one.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection">
      <summary>A read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Contains(System.DirectoryServices.ActiveDirectory.AttributeMetadata)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> object is in this collection.</summary>
      <param name="metadata">The <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> is in this collection, otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="metadata">metadata</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="metadata">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in metadata where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="metadata">metadata</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AttributeMetadata)">
      <summary>Returns the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> object in this collection.</summary>
      <param name="metadata">The <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching item. -1 if no member of this collection is identical to <paramref name="metadata">metadata</paramref>.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="metadata">metadata</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> object that exists at the specified index.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet"></see> class represents a configuration set for one or more AD LDS instances.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances">
      <summary>Gets a read-only collection of AD LDS instances that are in the configuration set.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.AdamInstanceCollection"></see> object that contains the <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> objects that are in the configuration set.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions">
      <summary>Gets a read-only collection of application partitions that are in the configuration set.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection"></see> object that contains the <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartition"></see> objects that are in the configuration set.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose">
      <summary>Releases all managed and unmanaged resources that are used by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the object and optionally releases managed resources.</summary>
      <param name="disposing">A <see cref="T:System.Boolean"></see> value that determines if the managed resources should be released. true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance">
      <summary>Finds an AD LDS instance in this configuration set.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object that represents an AD LDS instance that was found.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">An AD LDS instance could be not found in this configuration set.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)">
      <summary>Finds an AD LDS instance in this configuration set for a given partition name.</summary>
      <param name="partitionName">A <see cref="T:System.String"></see> that specifies a partition in which to search.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object that represents an AD LDS instance that was found.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="partitionName">partitionName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">An AD LDS instance for the specified <paramref name="partitionName">partitionName</paramref> could not be found in this configuration set.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)">
      <summary>Finds an AD LDS instance in this configuration set for a given partition name and site name.</summary>
      <param name="partitionName">A <see cref="T:System.String"></see> that specifies a partition in which to search.</param>
      <param name="siteName">A <see cref="T:System.String"></see> that specifies a site in which to search.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object that represents an AD LDS instance that was found.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">An AD LDS instance for the specified <paramref name="partitionName">partitionName</paramref> and <paramref name="siteName">siteName</paramref> parameters could not be found in this configuration set.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)">
      <summary>Returns all AD LDS instances in this configuration set for a given partition name.</summary>
      <param name="partitionName">A <see cref="T:System.String"></see> that specifies a partition in which to search.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.AdamInstanceCollection"></see> object that contains the <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> objects that were found.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="partitionName">partitionName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)">
      <summary>Returns all AD LDS instances in this configuration set for a given partition name and site name.</summary>
      <param name="partitionName">A <see cref="T:System.String"></see> that specifies a partition in which to search.</param>
      <param name="siteName">A <see cref="T:System.String"></see> that specifies a partition in which to search.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.AdamInstanceCollection"></see> object that contains the <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> objects that are found.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances">
      <summary>Returns all AD LDS instances in this configuration set.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.AdamInstanceCollection"></see> object that contains the <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> objects that were found.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Returns an <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet"></see> object for the specified directory context.</summary>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use to retrieve the object. The target of the context can be an AD LDS instance or keywords that are specified in the serviceConnectionPoint object in the current forest that can identify the configuration set.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ConfigurationSet"></see> object that represents the configuration set for the specified context.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A target specified in the <paramref name="context">context</paramref> parameter could not be found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="context">context</paramref> parameter is not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object for the configuration partition.</summary>
      <returns>The <see cref="System.DirectoryServices.DirectoryEntry"></see> object for the configuration partition.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSecurityLevel">
      <summary>Returns the AD LDS replication security level.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel"></see> value that indicates  the current AD LDS replication authentication mode.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Name">
      <summary>Gets the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet"></see> object.</summary>
      <returns>A <see cref="System.String"></see> that contains the name of the <see cref="System.DirectoryServices.ActiveDirectory.ConfigurationSet"></see> object.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner">
      <summary>Gets the AD LDS instance that is the current owner of the domain naming master role.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object that represents the AD LDS instance that currently holds the domain naming master role.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema">
      <summary>Gets the schema object for the configuration set.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema"></see> object that represents the schema for this configuration set.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner">
      <summary>Gets the AD LDS instance that is the current owner of the schema operations master role.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.AdamInstance"></see> object that represents the AD LDS+  
 instance that currently holds the schema operations master role.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SetSecurityLevel(System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel)">
      <summary>Sets the AD LDS replication security level.</summary>
      <param name="securityLevel">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel"></see> value to which to set the AD LDS replication authentication mode.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="securityLevel">securityLevel</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel"></see> value.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites">
      <summary>Gets a read-only collection of sites that are in the configuration set.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection"></see> object that contains <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> objects that are in the configuration set.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ToString">
      <summary>Returns the name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ConfigurationSet"></see> object.</summary>
      <returns>A <see cref="System.String"></see> that contains the name of the current <see cref="System.DirectoryServices.ActiveDirectory.ConfigurationSet"></see> object.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DirectoryContext">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> class identifies a specific directory and the credentials that are used to access the directory.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> class of the specified type that contains the credentials of the current user context.</summary>
      <param name="contextType">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType"></see> members that specifies the type of context to create.  For this constructor, the context type must be <see cref="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Domain"></see> or <see cref="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Forest"></see>.  Other types of directory contexts cannot be created using this constructor because other types require a constructor that includes a parameter specifying the directory or target name.</param>
      <exception cref="T:System.ArgumentException"><paramref name="contextType">contextType</paramref> is not valid.</exception>
      <exception cref="T:System.PlatformNotSupportedException">This class does not work on the current platform.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> class of the specified type that contains the specified name and the credentials of the current user context.</summary>
      <param name="contextType">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType"></see> members that specifies the type of context to create.</param>
      <param name="name">The target of the directory context. This string can take any of the formats defined in the Remarks section of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> topic.</param>
      <exception cref="T:System.ArgumentException"><paramref name="name">name</paramref> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="name">name</paramref> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="contextType">contextType</paramref> is not valid.</exception>
      <exception cref="T:System.PlatformNotSupportedException">This class does not work on the current platform.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> class of the specified type that contains the specified user name and password.</summary>
      <param name="contextType">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType"></see> members that specifies the type of context to create. For this constructor, this parameter must be <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType"></see> or <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType"></see>.</param>
      <param name="username">The user name to use for access.</param>
      <param name="password">The password to use for access.</param>
      <exception cref="T:System.ArgumentException"><paramref name="contextType">contextType</paramref> is not valid.</exception>
      <exception cref="T:System.PlatformNotSupportedException">This class does not work on the current platform.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> class of the specified type that contains the specified target, user name, and password.</summary>
      <param name="contextType">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType"></see> members that specifies the type of context to create.</param>
      <param name="name">The target of the directory context. This string can take any of the formats defined in the Remarks section of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> topic.</param>
      <param name="username">The user name to use for access.</param>
      <param name="password">The password to use for access.</param>
      <exception cref="T:System.ArgumentException"><paramref name="name">name</paramref> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="name">name</paramref> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="contextType">contextType</paramref> is not valid.</exception>
      <exception cref="T:System.PlatformNotSupportedException">This class does not work on the current platform.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.ContextType">
      <summary>Gets the type of the context object.</summary>
      <returns>One of the <see cref="System.DirectoryServices.ActiveDirectory.DirectoryContextType"></see> members that specifies the type of context.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.Name">
      <summary>Gets the name of the context.</summary>
      <returns>The name of the context.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.UserName">
      <summary>Gets the user name of the context.</summary>
      <returns>The user name to use for access by this context.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DirectoryContextType">
      <summary>Specifies the context type for an <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ApplicationPartition">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object represents an application partition.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.ConfigurationSet">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object represents an AD LDS configuration set.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.DirectoryServer">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object represents a directory server.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Domain">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object represents a domain.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DirectoryContextType.Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object represents a forest.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DirectoryServer">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> class is an abstract class that represents an Active Directory Domain Services server or AD LDS instance.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.CheckReplicationConsistency">
      <summary>Uses the Knowledge Consistency Checker (KCC) to verify and recalculate the replication topology for this server.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose">
      <summary>Releases all managed and unmanaged resources that are used by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose(System.Boolean)">
      <summary>Releases all unmanaged resources and, optionally, all managed resources that are used by the object.</summary>
      <param name="disposing">Determines if the managed resources should be released. true if the managed resources are released; false if the managed resources are not released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.Finalize">
      <summary>Overrides the <see cref="M:System.Object.Finalize"></see> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors">
      <summary>Retrieves all of the replication neighbors for this object.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection"></see> object that contains the replication neighbors for this object.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object that represents the directory server.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntry"></see> object that represents the directory server.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures">
      <summary>Retrieves a collection of the replication connection failures for this directory server.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection"></see> object that contains the replication connection failures for this directory server.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)">
      <summary>Retrieves the replication cursor information for the specified partition.</summary>
      <param name="partition">The distinguished name of the partition for which to retrieve the replication cursor information.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection"></see> that contains the replication cursor information.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)">
      <summary>Retrieves the replication metadata for a specific Active Directory Domain Services object.</summary>
      <param name="objectPath">The path to the object for which to retrieve the replication metadata.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata"></see> object that contains the replication metadata for the specified object.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)">
      <summary>Retrieves the replication neighbors of this directory server for the specified partition.</summary>
      <param name="partition">The distinguished name of the partition for which to retrieve the replication.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection"></see> object that contains the replication neighbors for this object.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation">
      <summary>Retrieves the current and pending replication operations for this directory server.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation"></see> object that contains the current and pending replication operations.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections">
      <summary>Retrieves the inbound replication connections for this directory server.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection"></see> object that contains the inbound replication connections for this directory server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress">
      <summary>Retrieves the IP address of this directory server.</summary>
      <returns>The Internet protocol (IP) address of this directory server in string form.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)">
      <summary>Moves the directory server to another site within the forest or configuration set.</summary>
      <param name="siteName">The name of the site within the domain to which to move the directory server.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Name">
      <summary>Gets the name of the directory server.</summary>
      <returns>The name of the directory server.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections">
      <summary>Gets the outbound replication connections for this directory server.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection"></see> object that contains the outbound replication connections for this directory server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions">
      <summary>Gets the partitions on this directory server.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection"></see> object that contains the distinguished names of the partitions on this directory server.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SiteName">
      <summary>Gets the name of the site that this directory server belongs to.</summary>
      <returns>The name of the site that this directory server belongs to.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncFromAllServersCallback">
      <summary>Gets or sets the synchronization delegate for this directory server.</summary>
      <returns>The delegate that this directory server will use for synchronization notifications.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <summary>Causes this directory server to synchronize the specified partition with all other directory servers in the same site that hosts the partition.</summary>
      <param name="partition">The distinguished name of the partition to synchronize.</param>
      <param name="options">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions"></see> members.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)">
      <summary>Causes this directory server to synchronize the specified partition with the specified directory server.</summary>
      <param name="partition">The distinguished name of the partition to synchronize.</param>
      <param name="sourceServer">The name of the server to synchronize the partition with.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString">
      <summary>Retrieves the name of the directory server.</summary>
      <returns>The name of the server.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)">
      <summary>Begins a synchronization of the specified partition.</summary>
      <param name="partition">The distinguished name of the partition to synchronize.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection"></see> class is a read/write collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Add(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Appends the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object to this collection.</summary>
      <param name="server">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object to append to this collection.</param>
      <returns>The zero-based <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object that is appended to this collection.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="server">server</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.AddRange(System.DirectoryServices.ActiveDirectory.DirectoryServer[])">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> array to this collection.</summary>
      <param name="servers">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> array that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="servers">servers</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object is in this collection.</summary>
      <param name="server">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="server">server</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in array where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="array">array</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object in this array.</summary>
      <param name="server">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="server">server</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Inserts the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object into this collection at the specified index.</summary>
      <param name="index">The zero-based index in this collection where the object is inserted.</param>
      <param name="server">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object to insert into this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="server">server</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Item(System.Int32)">
      <summary>Gets or sets a <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object to get or set.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentException">The member already exists in this collection (applies to set only).</exception>
      <exception cref="T:System.ArgumentNullException">The item specified is null (applies to set only).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of this collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> specified has not yet been saved to the Active Directory Domain Services store (applies to set only).</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClear">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete"></see> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnClearComplete">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete"></see> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete"></see> method.</summary>
      <param name="index">The zero-based index at which the element was inserted.</param>
      <param name="value">The new value of the element at index.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index at which the element was removed.</param>
      <param name="value">The element that was removed from the collection.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index at which the set operation occurred.</param>
      <param name="oldValue">The element that was replaced by newValue.</param>
      <param name="newValue">The element that replaced oldValue.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnValidate(System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)"></see> method.</summary>
      <param name="value">The element in this collection to validate.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Remove(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Removes the first occurrence of an object in this collection that is identical to the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object.</summary>
      <param name="server">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object to remove from this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object does not exist in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="server">server</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.Domain">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> class represents an Active Directory domain.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.Children">
      <summary>Gets the domains that are children of this domain.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.DomainCollection"></see> object that contains the child domains.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <summary>Creates the local side of a trust relationship with the specified domain.</summary>
      <param name="targetDomainName">The DNS name of the domain that the trust is created with.</param>
      <param name="direction">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection"></see> members that determines the direction of the trust, relative to this domain.</param>
      <param name="trustPassword">The password for the trust.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The trust relationship already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetDomainName">targetDomainName</paramref> or <paramref name="trustPassword">trustPassword</paramref> is empty.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomainName">targetDomainName</paramref> or <paramref name="trustPassword">trustPassword</paramref> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="direction">direction</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <summary>Creates both sides of a trust relationship with the specified domain.</summary>
      <param name="targetDomain">A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object that represents the domain that the trust is being created with.</param>
      <param name="direction">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection"></see> members that determines the direction of the trust, relative to this domain.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The trust relationship already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomain">targetDomain</paramref> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="direction">direction</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)">
      <summary>Deletes the local side of a trust relationship.</summary>
      <param name="targetDomainName">The DNS name of the domain that the trust exists with.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> that is specified by the <paramref name="targetDomainName">targetDomainName</paramref> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetDomainName">targetDomainName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomainName">targetDomainName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)">
      <summary>Deletes both sides of a trust relationship.</summary>
      <param name="targetDomain">A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object that represents the domain that the trust exists with.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the specified <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomain">targetDomain</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers">
      <summary>Gets the domain controllers in this domain.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainControllerCollection"></see> object that contains the domain controllers in this domain.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.DomainMode">
      <summary>Gets the mode that this domain is operating in.</summary>
      <returns>One of the <see cref="System.DirectoryServices.ActiveDirectory.DomainMode"></see> values that indicates the mode that this domain is operating in.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel">
      <summary>Gets the mode level that this domain is operating in.</summary>
      <returns>The domain mode level.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)">
      <summary>Finds all of the discoverable domain controllers in this domain that are also in the specified site.</summary>
      <param name="siteName">The name of the site to search for the domain controllers.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainControllerCollection"></see> that contains the domain controller objects that were found by this method.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers">
      <summary>Finds all of the discoverable domain controllers in this domain.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainControllerCollection"></see> that contains the domain controller objects that were found by this method.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers">
      <summary>Finds all of the domain controllers in this domain.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainControllerCollection"></see> that contains the domain controller objects that were found by this method.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)">
      <summary>Finds all of the domain controllers in this domain that are also in the specified site.</summary>
      <param name="siteName">The name of the site to search for the domain controllers.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainControllerCollection"></see> that contains the domain controller objects that were found by this method.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController">
      <summary>Finds any domain controller in this domain.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> that represents the domain controller that is found by this method.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A domain controller cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a domain controller in this domain that meets the specified criteria.</summary>
      <param name="flag">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions"></see> members that defines the type of domain controller to find.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> that represents the domain controller that is found by this method.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A domain controller cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="flag">flag</paramref> parameter contains an invalid value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)">
      <summary>Finds a domain controller in this domain and in the specified site.</summary>
      <param name="siteName">The name of the site to search for the domain controller.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object that represents the domain controller that is found by this method.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A domain controller cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a domain controller in this domain and in the specified site that meets the specified criteria.</summary>
      <param name="siteName">The name of the site to search for the domain controller.</param>
      <param name="flag">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions"></see> members that defines the type of domain controller to find.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object that represents the domain controller that is found by this method.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A domain controller cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any of the following reasons.  

<paramref name="siteName">siteName</paramref> is an empty string.  

<paramref name="flag">flag</paramref> contains an invalid value.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.Forest">
      <summary>Gets the forest that this domain is a member of.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> object that represents the forest that this domain is a member of.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships">
      <summary>Retrieves all of the trust relationships for this domain.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection"></see> object that contains all of the trust relationships for this domain.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object that represents the domain to which the local computer is joined.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> object that represents the domain to which the local machine is joined.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the domain could not be made.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object for the current user credentials in effect for the security context under which the application is running.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> object that represents the domain for the specified user credentials in effect for the security context under which the application is running.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the current context could not be made.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object that represents the default naming context of the domain.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntry"></see> object that represents the domain.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object for the specified context.</summary>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use to retrieve the object. The type of the context must be a domain or directory server.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> object that represents the domain for the specified context.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the target specified in <paramref name="context">context</paramref> could not be made.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)">
      <summary>Determines the authentication type of an inbound trust.</summary>
      <param name="targetDomainName">The DNS name of the domain which with the trust exists.</param>
      <returns>true if the authentication of the trust is selective; false if the authentication is domain-wide.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> that is specified by the <paramref name="targetForestName">targetForestName</paramref> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">The call to LsaQueryTrustedDomainInfoByName failed. For more information, see the topic LsaQueryTrustedDomainInfoByName in the MSDN Library at http://msdn.microsoft.com/library.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetDomainName">targetDomainName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomainName">targetDomainName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)">
      <summary>Determines the SID filtering status of a trust.</summary>
      <param name="targetDomainName">The DNS name of the domain which with the trust relationship exists.</param>
      <returns>true if SID filtering is enabled; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> that is specified by the <paramref name="targetForestName">targetForestName</paramref> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetDomainName">targetDomainName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomainName">targetDomainName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)">
      <summary>Gets the trust relationship between this domain and the specified domain.</summary>
      <param name="targetDomainName">The DNS name of the domain with which the trust relationship exists.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> object that represents the trust relationship between this domain and the specified domain.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> that is specified by the <paramref name="targetForestName">targetForestName</paramref> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetDomainName">targetDomainName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomainName">targetDomainName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner">
      <summary>Gets the infrastructure role owner for this domain.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object that represents the domain controller that holds the infrastructure owner role.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.Parent">
      <summary>Gets the parent domain of this domain.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> object that represents the parent domain of this domain. null if this domain has no parent domain.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController"></see> object that holds the primary domain controller (PDC) for this domain.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object that represents the domain controller that holds the PDC emulator role for this domain.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)">
      <summary>Raises the mode of operation for the domain.</summary>
      <param name="domainMode">An <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode"></see> enumeration value that specifies the new operation level for the domain.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">Based on the current operating mode of the domain, the value specified for <paramref name="domainMode">domainMode</paramref> is not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="domainMode">domainMode</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.DomainMode"></see> enumeration value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)">
      <summary>Raises the functionality level for the domain.</summary>
      <param name="domainMode">A value representing the new level.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)">
      <summary>Repairs a trust relationship.</summary>
      <param name="targetDomain">An <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object that represents the domain with which the trust exists.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> that is specified by <paramref name="targetDomain">targetDomain</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target or source server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomain">targetDomain</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner">
      <summary>Gets the RID master role holder for this domain.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object that represents the domain controller that holds the relative identifier (RID) master role for this domain.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)">
      <summary>Enables or disables selective authentication for an inbound trust.</summary>
      <param name="targetDomainName">The DNS name of the domain with which the inbound trust exists.</param>
      <param name="enable">true if selective authentication is enabled; otherwise, false.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the domain controller that is specified by <paramref name="targetDomainName">targetDomainName</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetDomainName">targetDomainName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomainName">targetDomainName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)">
      <summary>Sets the SID filtering state for the specified domain.</summary>
      <param name="targetDomainName">The DNS name of the domain with which the trust exists.</param>
      <param name="enable">true if SID filtering must be enabled; otherwise, false.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the domain that is specified by <paramref name="targetDomainName">targetDomainName</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetDomainName">targetDomainName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomainName">targetDomainName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)">
      <summary>Updates the password for the local side of a trust relationship.</summary>
      <param name="targetDomainName">The DNS name of the domain with which a trust exists.</param>
      <param name="newTrustPassword">The new password for the trust.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the domain that is specified by <paramref name="targetDomainName">targetDomainName</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetDomainName">targetDomainName</paramref> or <paramref name="newTrustPassword">newTrustPassword</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomainName">targetDomainName</paramref> or <paramref name="newTrustPassword">newTrustPassword</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <summary>Updates the password and trust direction for the local side of a trust relationship.</summary>
      <param name="targetDomainName">The DNS name of the domain with which a trust exists.</param>
      <param name="newTrustDirection">An <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value for the new trust direction for the trust relationship.</param>
      <param name="newTrustPassword">The new password for the trust.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the domain that is specified by the <paramref name="targetDomainName">targetDomainName</paramref> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetDomainName">targetDomainName</paramref> or <paramref name="newTrustPassword">newTrustPassword</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomainName">targetDomainName</paramref> or <paramref name="newTrustPassword">newTrustPassword</paramref> are null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="newTrustDirection">newTrustDirection</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <summary>Updates the trust direction for an existing trust relationship. The trust directions are updated on both sides of the trust.</summary>
      <param name="targetDomain">An <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object that represents the domain with which the trust exists.</param>
      <param name="newTrustDirection">An <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value that specifies the new trust direction for the trust relationship.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the domain that is specified by the <paramref name="targetDomain">targetDomain</paramref> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomain">targetDomain</paramref> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="newTrustDirection">newTrustDirection</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)">
      <summary>Verifies that a previously established outbound trust with the specified domain is valid.</summary>
      <param name="targetDomainName">The DNS name of the domain with which the trust exists.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no outbound trust relationship with the domain that is specified by <paramref name="targetDomainName">targetDomainName</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetDomainName">targetDomainName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomainName">targetDomainName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <summary>Verifies that a previously established trust with the specified domain is valid.</summary>
      <param name="targetDomain">A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object that represents the domain with which the trust exists.</param>
      <param name="direction">A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value that specifies the direction, relative to this domain, of the trust.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the domain that is specified by the <paramref name="targetDomain">targetDomain</paramref> parameter, or the target domain does not have the trust direction that is specified by the <paramref name="direction">direction</paramref> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetDomain">targetDomain</paramref> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="direction">direction</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DomainCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(System.DirectoryServices.ActiveDirectory.Domain)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object is in this collection.</summary>
      <param name="domain">The <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="domain">domain</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="domains">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in domains where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="domains">domains</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(System.DirectoryServices.ActiveDirectory.Domain)">
      <summary>Returns the zero-based index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object in this collection.</summary>
      <param name="domain">The <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="domain">domain</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions">
      <summary>Specifies additional information about a forest trust collision when the <see cref="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType"></see> property value is <see cref="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Domain"></see>.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByAdmin">
      <summary>The forest trust NetBIOS record was disabled by administrative action.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.NetBiosNameDisabledByConflict">
      <summary>The forest trust NetBIOS record was disabled due to a conflict with an existing NetBIOS record.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.None">
      <summary>No action has occurred.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByAdmin">
      <summary>The forest trust SID was disabled by administrative action.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions.SidDisabledByConflict">
      <summary>The forest trust SID was disabled due to a conflict with an existing SID.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DomainController">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController"></see> class represents a domain controller in an Active Directory domain.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency">
      <summary>Uses the Knowledge Consistency Checker (KCC) to verify the replication topology for this domain controller.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime">
      <summary>Gets the current date and time from this domain controller.</summary>
      <returns>A <see cref="System.DateTime"></see> object that contains the current date and time from this domain controller.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)">
      <summary>Causes the object to release all managed and/or unmanaged resources.</summary>
      <param name="disposing">Determines if the managed resources should be released. true if the managed resources are released; otherwise, false.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain">
      <summary>Gets the domain that this domain controller is a member of.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> object that represents the domain that this domain controller is a member of.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog">
      <summary>Promotes this domain controller to a global catalog server.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object that represents the global catalog server.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.Finalize">
      <summary>Overrides the <see cref="M:System.Object.Finalize"></see> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Finds all domain controllers in the specified context and site.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search.</param>
      <param name="siteName">The name of the site to search for domain controllers.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainControllerCollection"></see> object that contains the domain controllers that were found by the search.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="siteName">siteName</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Finds all domain controllers in the specified context.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search. The target of this <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object is the name of the domain that will be searched for domain controllers.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainControllerCollection"></see> object that contains the domain controllers found by the search.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> is not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Finds a single domain controller in the specified context.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object that represents the domain controller that was found by the search.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No domain controller was found.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a single domain controller in the specified context, allowing for additional search options.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search.</param>
      <param name="flag">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions"></see> members that defines the type of domain controller to find.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object that represents the domain controller that was found by the search.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No domain controller was found.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> or <paramref name="flag">flag</paramref> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Finds a single domain controller in the specified context and site.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search.</param>
      <param name="siteName">The name of the site to search for a domain controller.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object that represents the domain controller that was found by the search.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No domain controller was found.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> or <paramref name="siteName">siteName</paramref> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="siteName">siteName</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a single domain controller in the specified context and site, allowing for additional search options.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search.</param>
      <param name="siteName">The name of the site to search for a domain controller.</param>
      <param name="flag">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions"></see> members that defines the type of domain controller to find.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object that represents the domain controller that was found by the search.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No domain controller was found.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref>, <paramref name="siteName">siteName</paramref>, or <paramref name="flag">flag</paramref> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="siteName">siteName</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest">
      <summary>Gets the forest that this domain controller is a member of.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> object that represents the forest that this domain controller is a member of.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors">
      <summary>Retrieves the replication neighbors for this domain controller.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection"></see> object that contains the replication neighbors for this domain controller.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectorySearcher"></see> object for the domain controller.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectorySearcher"></see> object for the domain controller.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController"></see> object for the specified context.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use to retrieve the object. The target of this context must be a domain controller.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object that represents the domain controller that was found.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the target specified in <paramref name="context">context</paramref> could not be made.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> is not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures">
      <summary>Retrieves a list of the replication connection failures recorded by this domain controller.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection"></see> object that contains the replication connection failures that were recorded by this domain controller.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)">
      <summary>Retrieves the replication cursor information for the specified partition.</summary>
      <param name="partition">The distinguished name of the partition for which to retrieve the replication cursor information.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection"></see> that contains the replication cursor information.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="partition">partition</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="partition">partition</paramref> is an empty string.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)">
      <summary>Retrieves the replication metadata for a specific Active Directory Domain Services object.</summary>
      <param name="objectPath">The path to the object for which to retrieve the replication metadata.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata"></see> object that contains the replication metadata for the specified object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="objectPath">objectPath</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="objectPath">objectPath</paramref> is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)">
      <summary>Retrieves the replication neighbors for the specified partition.</summary>
      <param name="partition">The distinguished name of the partition for which to retrieve the replication neighbors.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection"></see> object that contains the replication neighbors for this object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="partition">partition</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="partition">partition</paramref> is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation">
      <summary>Retrieves the current and pending replication operations for this domain controller.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation"></see> object that contains the current and pending replication operations.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn">
      <summary>Gets the highest update sequence number that has been committed to this domain controller.</summary>
      <returns>The highest update sequence number (USN) that has been committed to this domain controller.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections">
      <summary>Gets the inbound replication connections for this domain controller.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection"></see> object that contains the inbound replication connections for this domain controller.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.IPAddress">
      <summary>Gets the IP address of this domain controller.</summary>
      <returns>The Internet protocol (IP) address of this domain controller in string form.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog">
      <summary>Determines if this domain controller is a global catalog server.</summary>
      <returns>true if this domain controller is a global catalog server or false otherwise.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion">
      <summary>Gets the operating system version of this domain controller.</summary>
      <returns>The version of the operating system that is in use on this domain controller.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections">
      <summary>Gets the outbound replication connections for this domain controller.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection"></see> object that contains the outbound replication connections for this domain controller.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles">
      <summary>Gets the roles that this domain controller serves.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection"></see> object that contains a collection of <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> members that indicate the roles that this domain controller serves.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <summary>Causes this domain controller to take ownership of the specified role.</summary>
      <param name="role">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> members that specifies which role the domain controller should take ownership of.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="role">role</paramref> is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName">
      <summary>Gets the name of the site that this domain controller belongs to.</summary>
      <returns>The name of the site that this domain controller belongs to.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">The site name was not found.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback">
      <summary>Gets or sets the synchronization delegate for this domain controller.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.SyncUpdateCallback"></see> delegate that will be used for synchronization notifications.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
      <summary>Causes this domain controller to synchronize the specified partition with all other domain controllers.</summary>
      <param name="partition">The distinguished name of the partition for the domain controller to synchronize.</param>
      <param name="options">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions"></see> members.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="partition">partition</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="partition">partition</paramref> is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">An error occurred in the synchronization operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)">
      <summary>Causes this domain controller to synchronize the specified partition with the specified domain controller.</summary>
      <param name="partition">The distinguished name of the partition with which to synchronize the domain controller.</param>
      <param name="sourceServer">The name of the server with which to synchronize the partition.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="partition">partition</paramref> or <paramref name="sourceServer">sourceServer</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="partition">partition</paramref> or <paramref name="sourceServer">sourceServer</paramref> is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <summary>Causes ownership of the specified role to be transferred to this domain controller.</summary>
      <param name="role">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> members that specifies which role will be transferred to this domain controller.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="role">role</paramref> is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)">
      <summary>Begins a synchronization of the specified partition.</summary>
      <param name="partition">The distinguished name of the partition to synchronize.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="partition">partition</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="partition">partition</paramref> is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Contains(System.DirectoryServices.ActiveDirectory.DomainController)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController"></see> object is in this collection.</summary>
      <param name="domainController">The <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="domainController">domainController</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DomainController[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="domainControllers">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in domainControllers where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="domainControllers">domainControllers</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DomainController)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController"></see> object in this collection.</summary>
      <param name="domainController">The <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController"></see> to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="domainController">domainController</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.DomainMode">
      <summary>Indicates the mode that a domain is operating in.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Unknown">
      <summary>The domain mode is in an unknown state.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000MixedDomain">
      <summary>The domain is operating in Windows 2000 mixed mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain">
      <summary>The domain is operating in Windows 2000 native mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain">
      <summary>The domain is operating in Windows Server 2003 mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain">
      <summary>The domain is operating in Windows Server 2003 domain-function mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2008Domain">
      <summary>The domain is operating in Windows Server 2008 mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2008R2Domain">
      <summary>The domain is operating in Windows Server 2008 R2 mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2012R2Domain">
      <summary>[Supported in the .NET Framework 4.5.1 and later versions]  The domain is operating in Windows Server 2012 R2 mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.DomainMode.Windows8Domain">
      <summary>The domain is operating in Windows 8 mode.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> class represents an Active Directory Domain Services forest.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions">
      <summary>Gets a collection of all application partitions in the forest.</summary>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection"></see> object that contains all of the application partitions in this forest.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <summary>Creates the local side of a trust relationship with the specified forest.</summary>
      <param name="targetForestName">The DNS name of the forest that the trust is created with.</param>
      <param name="direction">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection"></see> members that determines the direction of the trust, relative to this forest.</param>
      <param name="trustPassword">The password for the trust.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The trust relationship already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetForest">targetForest</paramref> name or <paramref name="trustPassword">trustPassword</paramref> string is empty.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForest">targetForest</paramref> or <paramref name="trustPassword">trustPassword</paramref> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="direction">direction</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <summary>Creates both sides of a trust relationship with the specified forest.</summary>
      <param name="targetForest">A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> object that represents the forest that the trust is being created with.</param>
      <param name="direction">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection"></see> members that determines the direction of the trust, relative to this forest.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">The trust relationship already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForest">targetForest</paramref> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="direction">direction</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)">
      <summary>Deletes the local side of a trust relationship.</summary>
      <param name="targetForestName">The DNS name of the forest that the trust exists with.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> that is specified by the <paramref name="targetForestName">targetForestName</paramref> parameter.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetForestName">targetForestName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName">targetForestName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)">
      <summary>Deletes both sides of a trust relationship.</summary>
      <param name="targetForest">A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> object that represents the forest that the trust exists with.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the specified <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForest">targetForest</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose">
      <summary>Releases all managed and unmanaged resources that are held by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)">
      <summary>Releases the managed resources that are used by the object and, optionally, releases unmanaged resources.</summary>
      <param name="disposing">A <see cref="T:System.Boolean"></see> value that determines if the managed resources should be released. true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.Domains">
      <summary>Gets a collection of all domains in the forest.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainCollection"></see> collection that contains the <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> domains in the current <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see>.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)">
      <summary>Finds all of the discoverable global catalogs in this forest in a specified site.</summary>
      <param name="siteName">The name of the site to search.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection"></see> that contains the collection of global catalogs that were found.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs">
      <summary>Finds all of the discoverable global catalogs in this forest.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection"></see> that contains the collection of global catalogs that were found.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs">
      <summary>Finds all the global catalogs in this forest.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection"></see> that contains the collection of global catalogs that were found.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)">
      <summary>Finds all the global catalogs in this forest for a given site.</summary>
      <param name="siteName">The name of the site to search.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection"></see> object that contains the collection of global catalogs that were found.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog">
      <summary>Finds any global catalog in this forest.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> of this <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see>.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A global catalog cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a global catalog in this forest for a specified location criteria.</summary>
      <param name="flag">A <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions"></see> value specifying the location criteria.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object for the specified location criteria.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A global catalog cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)">
      <summary>Finds a global catalog in this forest for a specified site.</summary>
      <param name="siteName">The name of the site to search.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object for the specified site.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A global catalog cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a global catalog in this forest for a specified site and location criteria.</summary>
      <param name="siteName">The name of the site to search.</param>
      <param name="flag">A <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions"></see> value that specifies the location criteria.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object for the specified site and location criteria.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A global catalog cannot be located.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="siteName">siteName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="siteName">siteName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.ForestMode">
      <summary>Gets the operating mode of the forest.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ForestMode"></see> value that represents the current forest mode of this <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see>.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel">
      <summary>Gets the operating mode level of the forest.</summary>
      <returns>The operating mode level of the forest.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships">
      <summary>Gets a collection of the trust relationships of the current forest.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection"></see> collection that contains <see cref="System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> objects that represents trust relationships of the current <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see>.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> object for the current user context.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> object that represents the current forest.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> object for the specified context.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use to retrieve the object.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> object that represents the forest that was retrieved by this method.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the target that is specified in <paramref name="context">context</paramref> could not be made.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)">
      <summary>Gets a Boolean value that indicates whether selective authentication is enabled on the inbound trust relationship with the specified forest.  true if selective authentication is enabled; otherwise, false.</summary>
      <param name="targetForestName">The DNS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> with which the inbound trust relationship exists.</param>
      <returns>true if selective authentication is enabled; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> that is specified by <paramref name="targetForestName">targetForestName</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">The call to LsaQueryTrustedDomainInfoByName failed. For more information, see the topic LsaQueryTrustedDomainInfoByName in the MSDN Library at http://msdn.microsoft.com/library.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetForestName">targetForestName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName">targetForestName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)">
      <summary>Gets the SID filtering status of a trust.</summary>
      <param name="targetForestName">The DNS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> object with which the trust relationship exists.</param>
      <returns>true if SID filtering is enabled; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> object that is specified by <paramref name="targetForestName">targetForestName</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetForestName">targetForestName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName">targetForestName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)">
      <summary>Gets the trust relationship between this forest and the specified forest.</summary>
      <param name="targetForestName">The name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> object for which the trust relationship information is to be obtained.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation"></see> object that represents the trust relationship between this forest and the specified forest.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> that is specified by <paramref name="targetForestName">targetForestName</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetForestName">targetForestName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName">targetForestName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs">
      <summary>Gets a collection of all global catalogs in the forest.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection"></see> collection that contains the <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> global catalogs in the current <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see>.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.Name">
      <summary>Gets the name of the forest.</summary>
      <returns>The name of this <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see>.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner">
      <summary>Gets the domain controller that holds the FSMO naming master role for the forest.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object that represents the domain controller that is the FSMO naming master of this <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see>.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)">
      <summary>Raises the mode of operation for the forest.</summary>
      <param name="forestMode">A <see cref="T:System.DirectoryServices.ActiveDirectory.ForestMode"></see> enumeration value that specifies the new operation level for the forest.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">Based on the current operating mode of the forest, the value specified for <paramref name="forestMode">forestMode</paramref> is not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="forestMode">forestMode</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.ForestMode"></see> enumeration value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)">
      <summary>Raises the forest functionality level to the given setting.</summary>
      <param name="forestMode">Raise to this level.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)">
      <summary>Repairs a trust relationship.</summary>
      <param name="targetForest">A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> object that represents the forest object with which the trust exists.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> object that is specified by <paramref name="targetForest">targetForest</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForest">targetForest</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain">
      <summary>Gets the first domain that was created in a forest.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> object that represents the first domain that was created in this <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see>.</returns>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.Schema">
      <summary>Gets the schema of the forest.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema"></see> object that represents the schema of the current <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see>.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner">
      <summary>Gets the domain controller that holds the FSMO schema master role for the forest.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object that represents the domain controller that is the FSMO schema master of this <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see>.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)">
      <summary>Enables or disables selective authentication for an inbound trust.</summary>
      <param name="targetForestName">The DNS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> object with which the inbound trust relationship exists.</param>
      <param name="enable">true if selective authentication is to be enabled; otherwise, false.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the forest that is specified by <paramref name="targetForestName">targetForestName</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetForestName">targetForestName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName">targetForestName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)">
      <summary>Sets the SID filtering state with the specified forest.</summary>
      <param name="targetForestName">The DNS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> object with which the trust relationship exists.</param>
      <param name="enable">true if SID filtering is to be enabled; otherwise, false.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the forest that is specified by <paramref name="targetForestName">targetForestName</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetForestName">targetForestName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName">targetForestName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.Forest.Sites">
      <summary>Gets a collection of sites that are contained in the forest.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection"></see> that contains the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> sites in the current <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see>.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.ToString">
      <summary>Returns a string representation of the current forest.</summary>
      <returns>A <see cref="System.String"></see> that represents the DNS name of the <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> object.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)">
      <summary>Updates the password for the local side of a trust relationship.</summary>
      <param name="targetForestName">The name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> object for which the local trust password is to be changed.</param>
      <param name="newTrustPassword">The new password for the trust relationship.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the forest that is specified by <paramref name="targetForestName">targetForestName</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetForestName">targetForestName</paramref> or <paramref name="newTrustPassword">newTrustPassword</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName">targetForestName</paramref> or <paramref name="newTrustPassword">newTrustPassword</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
      <summary>Updates the password and trust direction for the local side of a trust relationship.</summary>
      <param name="targetForestName">The name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> object for which the local trust direction and password must be changed.</param>
      <param name="newTrustDirection">A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value for the new trust direction for the trust relationship.</param>
      <param name="newTrustPassword">The new password for the trust relationship.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> object that is specified by <paramref name="targetForestName">targetForestName</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetForestName">targetForestName</paramref> or <paramref name="newTrustPassword">newTrustPassword</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName">targetForestName</paramref> or <paramref name="newTrustPassword">newTrustPassword</paramref> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="newTrustDirection">newTrustDirection</paramref> parameter is not a valid <see cref="System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <summary>Updates the trust direction for a trust relationship. The trust directions are updated on both sides of the trust.</summary>
      <param name="targetForest">A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> object for which the trust directions must be changed.</param>
      <param name="newTrustDirection">A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value that specifies the new trust direction for the trust relationship.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the forest that is specified by <paramref name="targetForest">targetForest</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForest">targetForest</paramref> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="newTrustDirection">newTrustDirection</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)">
      <summary>Verifies that a previously established outbound trust with the specified forest is valid.</summary>
      <param name="targetForestName">The DNS name of the domain with which the trust exists.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no outbound trust relationship with the forest that is specified by <paramref name="targetForestName">targetForestName</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="targetForestName">targetForestName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForestName">targetForestName</paramref> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
      <summary>Verifies that a previously established trust with the specified forest is valid.</summary>
      <param name="targetForest">A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> object for which to verify the trust relationship.</param>
      <param name="direction">A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value that specifies the direction of the trust, relative to this forest.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">There is no trust relationship with the forest that is specified by <paramref name="targetForest">targetForest</paramref>, or the target forest does not have the trust direction that is specified by <paramref name="direction">direction</paramref>.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="targetForest">targetForest</paramref> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="direction">direction</paramref> parameter is not a valid <see cref="System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestMode">
      <summary>Indicates the mode in which a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> is operating.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Unknown">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> is operating in an unknown mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2000Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> is operating in Windows 2000 mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> is operating in Windows Server 2003 mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2003InterimForest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> is operating in Windows Server 2003 domain-function mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2008Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> is operating in Windows Server 2008 mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2008R2Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> is operating in Windows Server 2008 R2 mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows2012R2Forest">
      <summary>[Supported in the .NET Framework 4.5.1 and later versions] The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> is operating in Windows Server 2012 R2 mode.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestMode.Windows8Forest">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> is operating in Windows 8 mode.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException"></see> class exception is thrown when a trust collision occurs during a trust relationship management request.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException"></see> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException"></see> class, using the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> for the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException"></see> class with a specified error message and an underlying exception object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception"></see> object that contains underlying exception information.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException"></see> class with a specified error message, an underlying exception object, and a specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection"></see> object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception"></see> object that contains underlying exception information.</param>
      <param name="collisions">A <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection"></see> object that contains one or more <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> objects that describe the trust relationship collision errors.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.Collisions">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection"></see> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> objects that describe the trust relationship collision errors.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection"></see> that contains one or more <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> objects that describe the trust relationship collision errors.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object with information about the exception.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object that contains serialized object data about the exception being thrown.</param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType">
      <summary>Specifies the collision type of a <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Domain">
      <summary>The collision is between domain cross-references. This collision type indicates a collision with a domain in the same forest.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.Other">
      <summary>The collision is not a collision between top-level domains or domain cross references.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.TopLevelName">
      <summary>The collision is between top-level domains. This collision type indicates a collision with a namespace element of another forest.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> object is in this collection.</summary>
      <param name="information">The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> object is in the collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="information">information</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in array where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="array">array</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> object in this collection.</summary>
      <param name="information">The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> object.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="information">information</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> object that exists at the specified index.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> class contains information about a <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object and is contained in a <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection"></see> object.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DnsName">
      <summary>Gets the DNS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object.</summary>
      <returns>A string that contains the DNS name of the <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.DomainSid">
      <summary>Gets the SID of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object.</summary>
      <returns>A string that contains the SID of the <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.NetBiosName">
      <summary>Gets the NetBIOS name of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object.</summary>
      <returns>A string that contains the NetBIOS name of the <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.Status">
      <summary>Gets or sets the status of the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> object.</summary>
      <returns>One of the <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus"></see> values that represents the status of the <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> object.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="Status">Status</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus"></see> enumeration value.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus">
      <summary>Indicates the status of a forest trust relationship.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.Enabled">
      <summary>The forest trust relationship is enabled.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameAdminDisabled">
      <summary>The forest trust NetBIOS record is disabled by administrative action.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.NetBiosNameConflictDisabled">
      <summary>The forest trust NetBIOS record is disabled due to a conflict with an existing NetBIOS record.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidAdminDisabled">
      <summary>The forest trust SID is disabled by administrative action.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ForestTrustDomainStatus.SidConflictDisabled">
      <summary>The forest trust SID is disabled due to a conflict with an existing SID.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision">
      <summary>Represents a collision record resulting from a collision between forest trust records.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionRecord">
      <summary>Gets the collision record from the underlying Active Directory Domain Services service.</summary>
      <returns>A <see cref="System.String"></see> containing the collision record resulting from a collision between forest trust records.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType"></see> value for the forest trust collision.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType"></see> value indicating the collision type.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.DomainCollisionOption">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollisionOptions"></see> value for the forest trust collision.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainCollisionOptions"></see> value that provides information about the collision when the <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType"></see> type is <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType"></see>.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.TopLevelNameCollisionOption">
      <summary>Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions"></see> value for the forest trust collision.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions"></see> value that provides information about the collision when the <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType"></see> type is <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType"></see>.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> object is in this collection.</summary>
      <param name="collision">The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> object is in the collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="collision">collision</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in array where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="array">array</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> object in this collection.</summary>
      <param name="collision">The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="collision">collision</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation"></see> class contains information about a trust relationship between two <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> objects.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.ExcludedTopLevelNames">
      <summary>Gets the excluded top-level names in the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation"></see> object.</summary>
      <returns>A read/write <see cref="System.Collections.Specialized.StringCollection"></see> that contains the excluded top-level names in the current object.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.Save">
      <summary>Commits any changes to the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation"></see> properties to the Active Directory Domain Services store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException">A collision occurred with an existing trust relationship.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TopLevelNames">
      <summary>Gets the top-level names in the <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation"></see> object.</summary>
      <returns>A read-only <see cref="System.DirectoryServices.ActiveDirectory.TopLevelNameCollection"></see> object that contains the top-level names in the current object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.TrustedDomainInformation">
      <summary>Gets the trusted domain information for this <see cref="T:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> object.</summary>
      <returns>A read-only <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection"></see> object that contains the <see cref="System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation"></see> object  for the current object.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> class represents a global catalog server. A global catalog server is a domain controller that hosts a replica of the global catalog.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog">
      <summary>Demotes this domain controller from a global catalog server.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object that represents the domain controller.</returns>
      <exception cref="T:System.InvalidOperationException">The domain controller is not a global catalog server or the global catalog server has already been disabled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.EnableGlobalCatalog">
      <summary>Not supported for the <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> class because this domain controller is already a global catalog server.</summary>
      <returns>Not applicable. This method will always throw an <see cref="System.InvalidOperationException"></see> exception.</returns>
      <exception cref="T:System.InvalidOperationException">The domain controller is already a global catalog server.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Finds all global catalog servers in the specified context.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search. The target of the context must be a forest.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection"></see> object that contains the global catalog servers found by the search.</returns>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Finds all global catalog servers in the specified context and site.</summary>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search. The target of the context must be a forest.</param>
      <param name="siteName">The name of the site to search for global catalog servers.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection"></see> object that contains the global catalog servers found by the search.</returns>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> or <paramref name="siteName">siteName</paramref> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="siteName">siteName</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAllProperties">
      <summary>Retrieves all of the Active Directory Domain Services properties that are stored on this global catalog server.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection"></see> object that contains the Active Directory Domain Services properties that are stored on this global catalog server.</returns>
      <exception cref="T:System.InvalidOperationException">The domain controller is not a global catalog server or the global catalog server has been disabled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Finds a single global catalog server in the specified context.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object that represents the global catalog server found by the search.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No global catalog server was found.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a single global catalog server in the specified context, allowing for additional search options.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search.</param>
      <param name="flag">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions"></see> members that defines the type of global catalog server to find.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object that represents the global catalog server found by the search.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No global catalog server was found.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> or <paramref name="flag">flag</paramref> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Finds a single global catalog server in the specified context and site.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search.</param>
      <param name="siteName">The name of the site to search for a global catalog server.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object that represents the global catalog server found by the search.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No global catalog server was found.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> or <paramref name="siteName">siteName</paramref> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="siteName">siteName</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
      <summary>Finds a single global catalog server in the specified context and site, allowing for additional search options.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use for the search.</param>
      <param name="siteName">The name of the site to search for a global catalog server.</param>
      <param name="flag">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions"></see> members that defines the type of global catalog server to find.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object that represents the global catalog server found by the search.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">No global catalog server was found.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref>, <paramref name="siteName">siteName</paramref>, or <paramref name="flag">flag</paramref> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="siteName">siteName</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetDirectorySearcher">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectorySearcher"></see> object for the global catalog server.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectorySearcher"></see> object for the global catalog server.</returns>
      <exception cref="T:System.InvalidOperationException">The global catalog server has been disabled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetGlobalCatalog(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object for the specified context.</summary>
      <param name="context">An  <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use to retrieve the object. The target of the context must be a domain controller.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object that represents the global catalog server that was found.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the target specified in <paramref name="context">context</paramref> could not be made.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> is not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.IsGlobalCatalog">
      <summary>Determines if this domain controller is a global catalog server.</summary>
      <returns>true if this domain controller is a global catalog server; false if it is not a global catalog server.</returns>
      <exception cref="T:System.InvalidOperationException">The global catalog server has been disabled.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Contains(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object is in this collection.</summary>
      <param name="globalCatalog">The <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="globalCatalog">globalCatalog</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.CopyTo(System.DirectoryServices.ActiveDirectory.GlobalCatalog[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="globalCatalogs">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in globalCatalogs where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="globalCatalogs">globalCatalogs</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.IndexOf(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
      <summary>Returns the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object in this collection.</summary>
      <param name="globalCatalog">The <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="globalCatalog">globalCatalog</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.GlobalCatalog"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.HourOfDay">
      <summary>Indicates the hour of the day.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eight">
      <summary>8:00 A.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eighteen">
      <summary>6:00 P.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Eleven">
      <summary>11:00 A.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fifteen">
      <summary>3:00 P.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Five">
      <summary>5:00 A.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Four">
      <summary>4:00 A.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Fourteen">
      <summary>2:00 P.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nine">
      <summary>9:00 A.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Nineteen">
      <summary>7:00 P.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.One">
      <summary>1:00 A.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seven">
      <summary>7:00 A.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Seventeen">
      <summary>5:00 P.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Six">
      <summary>6:00 A.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Sixteen">
      <summary>4:00 P.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Ten">
      <summary>10:00 A.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Thirteen">
      <summary>1:00 P.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Three">
      <summary>3:00 A.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twelve">
      <summary>12:00 P.M. (noon)</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Twenty">
      <summary>8:00 P.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyOne">
      <summary>9:00 P.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyThree">
      <summary>11:00 P.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.TwentyTwo">
      <summary>10:00 P.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Two">
      <summary>2:00 A.M.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.HourOfDay.Zero">
      <summary>12:00 A.M. (midnight)</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.LocatorOptions">
      <summary>Specifies search flags for finding a domain controller in a domain.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.AvoidSelf">
      <summary>When searching for domain controllers from a domain controller, exclude this domain controller from the search. If the current computer is not a domain controller, this flag is ignored.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.ForceRediscovery">
      <summary>Forces cached domain controller data to be ignored when searching for domain controllers.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.KdcRequired">
      <summary>Search only for domain controllers that are currently running the Kerberos Key Distribution Center service.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.TimeServerRequired">
      <summary>Search only for domain controllers that are currently running the Windows Time service.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.LocatorOptions.WriteableRequired">
      <summary>Search only for writeable domain controllers.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour">
      <summary>Indicates the 15-minute intervals within an hour.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Fifteen">
      <summary>Represents 15 to 29 minutes after the hour.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.FortyFive">
      <summary>Represents 45 to 59 minutes after the hour.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Thirty">
      <summary>Represents 30 to 44 minutes after the hour.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.MinuteOfHour.Zero">
      <summary>Represents 0 to 14 minutes after the hour.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.NotificationStatus">
      <summary>Represents the notification status of a replication connection.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.IntraSiteOnly">
      <summary>Send notifications only for intra-site connections.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NoNotification">
      <summary>Do not send notifications.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.NotificationStatus.NotificationAlways">
      <summary>Always send notifications.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.PropertyTypes">
      <summary>Specifies the property types to select when calling the <see cref="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)"></see> method.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.Indexed">
      <summary>A property that is indexed.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.PropertyTypes.InGlobalCatalog">
      <summary>A property that is replicated in the global catalog.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object is in this collection.</summary>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemaClass">schemaClass</paramref> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="classes">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in classes where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="classes">classes</paramref> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object in this collection.</summary>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="schemaClass">schemaClass</paramref> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of this collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object is in this collection.</summary>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaProperty">schemaProperty</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="properties">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in properties where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="properties">properties</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object in this collection.</summary>
      <param name="schemaProperty">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaProperty">schemaProperty</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of this collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object is in this collection.</summary>
      <param name="directoryServer">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="directoryServer">directoryServer</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="directoryServers">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in directoryServers where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="directoryServers">directoryServers</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object in this collection.</summary>
      <param name="directoryServer">The <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="directoryServer">directoryServer</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection"></see> class is a read-only collection of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object is in this collection.</summary>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object to search for.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="site">site</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="sites">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in sites where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="sites">sites</paramref> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object in this collection.</summary>
      <param name="site">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="site">site</paramref> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object is in this collection.</summary>
      <param name="bridge">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="bridge">bridge</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="bridges">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in bridges where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="bridges">bridges</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object in this collection.</summary>
      <param name="bridge">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="bridge">bridge</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object is in this collection.</summary>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object to search for.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySite"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="link">link</paramref> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="links">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> array that receives the elements of this collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in links where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="links">links</paramref> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
      <summary>Returns the zero-based index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object in this collection.</summary>
      <param name="link">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object to locate in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member in this collection is identical to the specified <paramref name="link">link</paramref> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="link">link</paramref> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection"></see> class is a read-only collection that contains <see cref="T:System.String"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Contains(System.String)">
      <summary>Determines if the specified <see cref="T:System.String"></see> object is in this collection.</summary>
      <param name="value">The <see cref="T:System.String"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.String"></see> object is in this collection, otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value">value</paramref> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copies all <see cref="T:System.String"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="values">The array of <see cref="T:System.String"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in values where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="values">values</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.IndexOf(System.String)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.String"></see> object in this collection.</summary>
      <param name="value">The <see cref="T:System.String"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.String"></see> object.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="site">site</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.String"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.String"></see> object to get.</param>
      <returns>The <see cref="System.String"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> class represents a replication connection.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> class, using the specified context, name, and source server.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials with which to establish a replication connection.</param>
      <param name="name">The user-defined name of the connection.</param>
      <param name="sourceServer">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object that identifies the source server of the connection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:  

The target of the <paramref name="context">context</paramref> parameter is not a domain controller or AD LDS instance.  

<paramref name="sourceServer">sourceServer</paramref> is invalid or an empty string.  

The target specified in the <paramref name="context">context</paramref> parameter does not match the server type specified in the <paramref name="sourceServer">sourceServer</paramref> parameter. The servers must both be either domain controllers or AD LDS instances.  

The servers specified in the <paramref name="context">context</paramref> and <paramref name="sourceServer">sourceServer</paramref> parameters are domain controllers, but are not in the same forest.  

The servers specified in the <paramref name="context">context</paramref> and <paramref name="sourceServer">sourceServer</paramref> parameters are AD LDS instances, but do not belong to the same configuration set.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="sourceServer">sourceServer</paramref> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> class, using the specified context, name, source server, and schedule.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials with which to establish a replication connection.</param>
      <param name="name">The user-defined name of the connection.</param>
      <param name="sourceServer">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object that identifies the source server of the connection.</param>
      <param name="schedule">A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"></see> object that specifies when the source is available for replication.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:  

The target of the <paramref name="context">context</paramref> parameter is not a domain controller or AD LDS instance.  

<paramref name="sourceServer">sourceServer</paramref> is invalid or an empty string.  

The target specified in the <paramref name="context">context</paramref> parameter does not match the server type specified in the <paramref name="sourceServer">sourceServer</paramref> parameter. The servers must both be either domain controllers or AD LDS instances.  

The servers specified in the <paramref name="context">context</paramref> and <paramref name="sourceServer">sourceServer</paramref> parameters are domain controllers, but are not in the same forest.  

The servers specified in the <paramref name="context">context</paramref> and <paramref name="sourceServer">sourceServer</paramref> parameters are AD LDS instances, but do not belong to the same configuration set.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref>, <paramref name="sourceServer">sourceServer</paramref> or <paramref name="schedule">schedule</paramref> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> class, using the specified context, name, source server, and transport type.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to establish a replication connection with.</param>
      <param name="name">The user-defined name of the connection.</param>
      <param name="sourceServer">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object that identifies the source server of the connection.</param>
      <param name="transport">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> members that specifies the transport type of the connection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:  

The target of the <paramref name="context">context</paramref> parameter is not a domain controller or AD LDS instance.  

<paramref name="sourceServer">sourceServer</paramref> is invalid or an empty string.  

The target specified in the <paramref name="context">context</paramref> parameter does not match the server type specified in the <paramref name="sourceServer">sourceServer</paramref> parameter. The servers must both be either domain controllers or AD LDS instances.  

The servers specified in the <paramref name="context">context</paramref> and <paramref name="sourceServer">sourceServer</paramref> parameters are domain controllers, but are not in the same forest.  

The servers specified in the <paramref name="context">context</paramref> and <paramref name="sourceServer">sourceServer</paramref> parameters are AD LDS instances, but do not belong to the same configuration set.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="sourceServer">sourceServer</paramref> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="transport">transport</paramref> is not a valid <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> value.</exception>
      <exception cref="T:System.NotSupportedException"><paramref name="context">context</paramref> is an AD LDS instance and <paramref name="transport">transport</paramref> is <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Smtp"></see>, which is not supported.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> class, using the specified context, name, source server, schedule, and transport type.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials with which to establish a replication connection.</param>
      <param name="name">The user-defined name of the connection.</param>
      <param name="sourceServer">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object that identifies the source server of the connection.</param>
      <param name="schedule">A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"></see> object that specifies when the source is available for replication.</param>
      <param name="transport">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> members that specifies the transport type of the connection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">This exception will occur for any one of the following reasons:  

The target of the <paramref name="context">context</paramref> parameter is not a domain controller or AD LDS instance.  

<paramref name="sourceServer">sourceServer</paramref> is invalid or an empty string.  

The target specified in the <paramref name="context">context</paramref> parameter does not match the server type specified in the <paramref name="sourceServer">sourceServer</paramref> parameter. The servers must both be either domain controllers or AD LDS instances.  

The servers specified in the <paramref name="context">context</paramref> and <paramref name="sourceServer">sourceServer</paramref> parameters are domain controllers, but are not in the same forest.  

The servers specified in the <paramref name="context">context</paramref> and <paramref name="sourceServer">sourceServer</paramref> parameters are AD LDS instances, but do not belong to the same configuration set.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref>, <paramref name="sourceServer">sourceServer</paramref> or <paramref name="schedule">schedule</paramref> is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><paramref name="transport">transport</paramref> is not valid.</exception>
      <exception cref="T:System.NotSupportedException"><paramref name="context">context</paramref> is an AD LDS instance and <paramref name="transport">transport</paramref> is <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType.Smtp"></see>, which is not supported.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ChangeNotificationStatus">
      <summary>Gets or sets the change notification status of this replication connection.</summary>
      <returns>One of the <see cref="System.DirectoryServices.ActiveDirectory.NotificationStatus"></see> members that specifies the change notification status of this replication connection.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">When setting the property, the new value is not valid.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DataCompressionEnabled">
      <summary>Gets or sets a value indicating whether this replication connection compresses data.</summary>
      <returns>true if this replication connection uses data compression; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Delete">
      <summary>Deletes this replication connection.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> object has not yet been saved to the underlying directory store.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DestinationServer">
      <summary>Gets the DNS name of the server that is the destination of this replication connection.</summary>
      <returns>A string that contains the DNS name of the server that is the destination of this replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose">
      <summary>Releases the unmanaged and managed resources held by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Dispose(System.Boolean)">
      <summary>Releases the unmanaged and, optionally, the managed resources, held by the object.</summary>
      <param name="disposing">true to release the managed resources; otherwise, false.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Enabled">
      <summary>Gets or sets a value indicating whether this replication connection is enabled.</summary>
      <returns>true if this replication connection is enabled; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Finalize">
      <summary>Overrides the <see cref="M:System.Object.Finalize"></see> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Retrieves the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> object that matches the specified target context and name.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to search for.</param>
      <param name="name">The name of the connection to search for.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> object that represents the connection.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The connection could not be found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> or <paramref name="name">name</paramref> is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="name">name</paramref> is null.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GeneratedByKcc">
      <summary>Gets or sets a value indicating whether this replication connection was generated by the knowledge consistency checker (KCC).</summary>
      <returns>true if this replication connection was generated by the KCC; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GetDirectoryEntry">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object that represents the replication connection.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntry"></see> object that represents the target of the replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.InvalidOperationException">The current object has not been committed to the server. <see cref="System.DirectoryServices.ActiveDirectory.ReplicationConnection.Save"></see> must be called first.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Name">
      <summary>Gets the name of this replication connection.</summary>
      <returns>A string that contains the user-defined name of this replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReciprocalReplicationEnabled">
      <summary>Gets or sets a value indicating whether this replication connection supports reciprocal replication.</summary>
      <returns>true if this replication connection supports reciprocal replication; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSchedule">
      <summary>Gets or sets the schedule on which the source server is available for replication.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"></see> object that represents the schedule on which the source server is available for replication. If this property is null, then the default schedule is used.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationScheduleOwnedByUser">
      <summary>Gets or sets a value indicating whether the replication schedule is owned by the user.</summary>
      <returns>true if the replication schedule is owned by the user; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ReplicationSpan">
      <summary>Gets the span of this replication connection.</summary>
      <returns>One of the <see cref="System.DirectoryServices.ActiveDirectory.ReplicationSpan"></see> members that specifies the span of this replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Save">
      <summary>Commits the replication connection to the server. The replication connection object does not actually exist in Active Directory Domain Services until this method is called.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.SourceServer">
      <summary>Gets the DNS name of the server that is the source of this replication connection.</summary>
      <returns>A string that contains the DNS name of the server that is the source of this replication connection.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ToString">
      <summary>Retrieves the name of the replication connection.</summary>
      <returns>A string that contains the name of the replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.TransportType">
      <summary>Gets the type of transport that is used by this replication connection.</summary>
      <returns>One of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> members that specifies the type of transport that is used by this replication connection.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection"></see> class is a read-only collection of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> object is in this collection.</summary>
      <param name="connection">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="connection">connection</paramref> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationConnection[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="connections">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in connections where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="connections">connections</paramref> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> object in this collection.</summary>
      <param name="connection">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of the collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="connection">connection</paramref> parameter is null.</exception>
      <exception cref="T:System.InvalidOperationException">The specified <paramref name="connection">connection</paramref> does not exist.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ReplicationConnection"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor"></see> class represents a replication operation occurrence.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.LastSuccessfulSyncTime">
      <summary>Gets the time of the last successful replication synchronization with the replication source server.</summary>
      <returns>The time at which the last successful replication synchronization occurred.</returns>
      <exception cref="T:System.PlatformNotSupportedException">This property is not supported on Windows 2000.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.PartitionName">
      <summary>Gets the name of the partition to which this replication operation was applied.</summary>
      <returns>The name of the partition represented by this replication cursor.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceInvocationId">
      <summary>Gets the invocation identifier of the replication source server.</summary>
      <returns>The invocation identifier of the replication source server</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.SourceServer">
      <summary>Gets the name of the replication source server.</summary>
      <returns>The name of the replication source server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursor.UpToDatenessUsn">
      <summary>Gets the maximum update sequence number (USN) for which the destination server has accepted changes from the source server.</summary>
      <returns>The maximum update sequence number (USN) for which the destination server has accepted changes from the source server.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor"></see> object is in this collection.</summary>
      <param name="cursor">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ReplicationCursor"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor">cursor</paramref> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationCursor[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="values">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in values where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="values">values</paramref> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor"></see> object in this collection.</summary>
      <param name="cursor">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ReplicationCursor"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="cursor">cursor</paramref> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationCursor"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ReplicationCursor"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure">
      <summary>Contains information about a failed replication attempt.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.ConsecutiveFailureCount">
      <summary>Gets the number of consecutive failures since the last successful replication.</summary>
      <returns>The number of consecutive failures since the last successful replication.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.FirstFailureTime">
      <summary>Gets the date and time that the first failure occurred.</summary>
      <returns>The date and time that the first failure occurred when replicating from the source server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorCode">
      <summary>Gets the error code for the most recent failure.</summary>
      <returns>An HRESULT that contains the error code that is associated with the most recent failure. This will be ERROR_SUCCESS if the specific error is unavailable.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorMessage">
      <summary>Gets the error message for the most recent failure.</summary>
      <returns>The error message for the most recent failure.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.SourceServer">
      <summary>Gets the DNS name of the source server.</summary>
      <returns>The DNS name of the source server.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure"></see> object is in this collection.</summary>
      <param name="failure">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ReplicationFailure"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="failure">failure</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationFailure[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="failures">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in failures where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="failures">failures</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure"></see> object in this collection.</summary>
      <param name="failure">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ReplicationFailure"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="failure">failure</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationFailure"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ReplicationFailure"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions">
      <summary>Specifies the options for a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.CompressChanges">
      <summary>Changes that are received from this source are compressed. This option is usually set only if the source server is in a different site.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.DisableScheduledSync">
      <summary>This option is set to disable synchronizations based on its schedule. The only way this neighbor will perform synchronizations is in response to a change notification or to a manual request for synchronizations.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncInProgress">
      <summary>The destination server is performing a full synchronization from the source server. Full synchronizations do not use vectors that create updates (DS_REPL_CURSORS) for filtering updates. Full synchronizations are not used as a part of the normal replication protocol.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.FullSyncNextPacket">
      <summary>The last packet from the source indicated that an object that has not yet been created by the destination server has been modified. The next packet that is requested will instruct the source server to put all attributes of the modified object into the packet.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.IgnoreChangeNotifications">
      <summary>This option is set to disable notification based synchronizations. Within a site, domain controllers synchronize with each other based on notifications when changes occur. This setting prevents this neighbor from performing syncs that are triggered by notifications. The neighbor will still do synchronizations based on its schedule, or if requested manually.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NeverSynced">
      <summary>A synchronization has never been successfully completed from this source.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.NoChangeNotifications">
      <summary>No change notifications should be received from this source. This option is usually set only if the source server is in a different site.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.PartialAttributeSet">
      <summary>This neighbor is in a state where it is rebuilding the contents of this replica because of a change in the partial attribute set.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Preempted">
      <summary>The replication engine has temporarily stopped processing this neighbor in order to service another higher-priority neighbor, either for this partition or another partition. The replication engine will resume processing this neighbor after the higher-priority work is completed.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ReturnObjectParent">
      <summary>This neighbor is in a state where it returns parent objects before children objects. It goes into this state after it receives a child object before its parent.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.ScheduledSync">
      <summary>Perform replication on a schedule. This option is normally set unless the schedule for this naming context/source is &amp;quot;never&amp;quot;, that is, the empty schedule.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.SyncOnStartup">
      <summary>Replication of this naming context from this source is attempted when the destination server is restarted. This normally only applies to intra-site neighbors.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.TwoWaySync">
      <summary>If set, this option indicates that when inbound replication is complete, the destination server must tell the source server to synchronize in the reverse direction. This feature is used in dial-up scenarios where only one of the two servers can initiate a dial-up connection. For example, this option would be used in a corporate headquarters and branch office, where the branch office connects to the corporate headquarters over the Internet by means of a dial-up ISP connection.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.UseInterSiteTransport">
      <summary>Perform replication indirectly through the Inter-Site Messaging Service. This flag is set only when replicating over SMTP. This flag is not set when replicating over inter-site RPC/IP.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions.Writeable">
      <summary>The local copy of the naming context is writable.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> class contains information about a replication neighbor of an <see cref="T:System.DirectoryServices.ActiveDirectory.AdamInstance"></see> or <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController"></see> object.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ConsecutiveFailureCount">
      <summary>Gets the number of replication failures since the last successful replication cycle.</summary>
      <returns>The number of failed replication attempts from this source since the last successful replication attempt. If no previous attempt was successful, the return value is the number of failed replication attempts since the source was added as a neighbor.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastAttemptedSync">
      <summary>Gets the time of the last replication attempt from this source.</summary>
      <returns>The time of the last replication attempt. If no replication attempt occurred, the value is zero.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSuccessfulSync">
      <summary>Gets the time of the last successful replication cycle from this source.</summary>
      <returns>The time of the last successful synchronization. If no replication succeeded, the value is zero.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncMessage">
      <summary>Gets the message that is associated with the last replication attempt from this source.</summary>
      <returns>The message that corresponds to the last replication attempt. If the last attempt succeeded, the value is an empty string.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncResult">
      <summary>Gets the error code that is associated with the last replication attempt from this source.</summary>
      <returns>The error code for the last replication attempt. If the last attempt succeeded, the value is ERROR_SUCCESS.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.PartitionName">
      <summary>Gets the partition name for this <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> object.</summary>
      <returns>The name of the partition for this <see cref="System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOption">
      <summary>Gets the attribute and object settings for this <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> object.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.ReplicationNeighborOptions"></see> value that contains the attribute and option settings for this <see cref="System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceInvocationId">
      <summary>Gets the invocation identifier that was used by the replication source server in the last replication attempt.</summary>
      <returns>The invocation identifier that was used by the replication source server in the last replication attempt.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.SourceServer">
      <summary>Gets the name of the replication source server.</summary>
      <returns>The name of the replication source server.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.TransportType">
      <summary>Gets the transport type that was used for replication.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> enumeration value that indicates the transport type that was used for the replication connection.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnAttributeFilter">
      <summary>Gets the update sequence number (USN) value for the last successful replication cycle.</summary>
      <returns>The USN value for the last successful replication cycle. If no replication succeeded, the value is zero.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.UsnLastObjectChangeSynced">
      <summary>Gets the update sequence number (USN) of the last object update that was received.</summary>
      <returns>The USN of the last update that was received.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> object is in this collection.</summary>
      <param name="neighbor">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> object is in this collection, otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="neighbor">neighbor</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="neighbors">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in neighbors where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="neighbors">neighbors</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> object in this collection.</summary>
      <param name="neighbor">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="neighbor">neighbor</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ReplicationNeighbor"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation"></see> class represents an Active Directory Domain Services replication operation.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationNumber">
      <summary>Contains the operation number of this replication operation.</summary>
      <returns>An integer that contains the operation number of this replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.OperationType">
      <summary>Contains the type of replication operation that this operation represents.</summary>
      <returns>One of the <see cref="System.DirectoryServices.ActiveDirectory.ReplicationOperationType"></see> members that indicates the type of replication operation that this operation represents.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.PartitionName">
      <summary>Contains the distinguished name of the partition that is associated with this replication operation.</summary>
      <returns>A string that contains the distinguished name of the partition that is associated with this replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.Priority">
      <summary>Contains the priority of this replication operation.</summary>
      <returns>An integer that contains the priority of this replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.SourceServer">
      <summary>Contains the DNS name of the source server for this replication operation.</summary>
      <returns>A string that contains the DNS name of the source server for this replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperation.TimeEnqueued">
      <summary>Contains the time that this replication operation was added to the operation queue.</summary>
      <returns>A <see cref="System.DateTime"></see> object that contains the date and time that this replication operation was added to the operation queue.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation"></see> object is in this collection.</summary>
      <param name="operation">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ReplicationOperation"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException">The <paramref name="operation">operation</paramref> parameter is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationOperation[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="operations">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in operations where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="operations">operations</paramref> parameter is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation"></see> object in this collection.</summary>
      <param name="operation">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ReplicationOperation"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="operation">operation</paramref> parameter is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Item(System.Int32)">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperation"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ReplicationOperation"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation"></see> class contains information about an Active Directory Domain Services replication operation.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation"></see> class.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.CurrentOperation">
      <summary>Gets the current replication operation.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationOperation"></see> object that represents the current replication operation.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.OperationStartTime">
      <summary>Gets the time that this replication operation started.</summary>
      <returns>A <see cref="System.DateTime"></see> object that contains the date and time that this replication operation started.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation.PendingOperations">
      <summary>Gets the replication operations that have not been run.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection"></see> object that contains the pending replication operations.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationOperationType">
      <summary>Indicates a specific type of replication operation.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Add">
      <summary>Indicates the addition of a replication agreement for a new direct replication partner.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Delete">
      <summary>Indicates the removal of a replication agreement for an existing direct replication partner.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Modify">
      <summary>Indicates the modification of a replication agreement for an existing direct replication partner.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.Sync">
      <summary>Indicates an inbound replication over an existing replication agreement from a direct replication partner.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationOperationType.UpdateReference">
      <summary>Indicates the addition, deletion, or update of outbound change notification data for a direct replication partner.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel">
      <summary>Specifies the Active Directory Lightweight Directory (AD LDS) Services replication authentication mode.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.MutualAuthentication">
      <summary>Kerberos authentication, using service principal names (SPNs), required. If Kerberos authentication fails, the AD LDS instances will not replicate.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.Negotiate">
      <summary>Kerberos authentication (using SPNs) is attempted first. If Kerberos fails, NTLM authentication is attempted. If NTLM fails, the AD LDS instances will not replicate.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSecurityLevel.NegotiatePassThrough">
      <summary>All AD LDS instances in the configuration set use an identical account name and password as the AD LDS service account.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ReplicationSpan">
      <summary>Determines the span of a replication connection.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.InterSite">
      <summary>The source and destination servers are in different sites.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ReplicationSpan.IntraSite">
      <summary>The source and destination servers are in the same site.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SchemaClassType">
      <summary>Specifies the class type of an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Abstract">
      <summary>The class is an abstract class.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Auxiliary">
      <summary>The class is an auxiliary class.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Structural">
      <summary>The class is a structural class.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SchemaClassType.Type88">
      <summary>The class is a type 88 class. Classes defined before 1993 are not required to be included in another category; assigning classes to categories was not required in the X.500 1988 specification. Classes defined prior to the X.500 1993 standards default to the 1988 class. This type of class is specified by a value of 0 in the objectClassCategory attribute.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory">
      <summary>Contains information about a <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see>.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorContactingServer">
      <summary>The server could not be contacted for replication.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ErrorReplicating">
      <summary>The replication operation failed to complete.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory.ServerUnreachable">
      <summary>The server is not reachable.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation">
      <summary>Contains information about a <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> exception.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCategory">
      <summary>Gets the category of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> exception.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorCategory"></see> enumeration value that indicates the category of the error.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorCode">
      <summary>Gets the error code for the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> exception.</summary>
      <returns>A value that identifies the <see cref="System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> exception error.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.ErrorMessage">
      <summary>Gets the message that describes the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> exception.</summary>
      <returns>A message that describes the <see cref="System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> exception.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.SourceServer">
      <summary>Gets the name of the source server for which the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> exception occurred.</summary>
      <returns>The name of the source server that is involved in the <see cref="System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> exception.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation.TargetServer">
      <summary>Gets the name of the target server for which the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> exception occurred.</summary>
      <returns>The name of the target server that is involved in the <see cref="System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> exception.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent">
      <summary>Used in the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback"></see> delegate to specify the type of synchronization event.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Error">
      <summary>An error occurred.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.Finished">
      <summary>The entire replication process has completed.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncCompleted">
      <summary>Synchronization of two servers has just completed.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent.SyncStarted">
      <summary>Synchronization of two servers has started.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> exception is thrown when the request to synchronize from all servers fails.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> class, using the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object for the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> class with a specified error message and an underlying exception object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception"></see> object that contains underlying exception information.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.String,System.Exception,System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation[])">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> class with a specified error message, an underlying exception object, and a specified <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation"></see> object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception"></see> object that contains underlying exception information.</param>
      <param name="errors">An array of one or more <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation"></see> objects that describe the errors.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.ErrorInformation">
      <summary>Gets an array of <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation"></see> objects that describe the errors.</summary>
      <returns>An array of one or more <see cref="System.DirectoryServices.ActiveDirectory.SyncFromAllServersErrorInformation"></see> objects that describe the errors.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object with information about the exception.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object that holds serialized object data about the exception being thrown.</param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions">
      <summary>Specifies additional options when performing a synchronization.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.AbortIfServerUnavailable">
      <summary>Aborts the synchronization if any server cannot be contacted or if any server is unreachable.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CheckServerAlivenessOnly">
      <summary>Disables all synchronization. The topology is analyzed and unavailable or unreachable servers are identified.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.CrossSite">
      <summary>Synchronizes across site boundaries. By default, this method attempts to synchronize only with domain controllers in the same site as the home system. Set this flag to attempt to synchronize with all domain controllers in the enterprise forest. However, the domain controllers can be synchronized only if connected by a synchronous (RPC) transport.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.None">
      <summary>No synchronization options.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.PushChangeOutward">
      <summary>Pushes changes from the home server out to all partners using transitive replication. This reverses the direction of replication and the order of execution of the replication sets from the usual mode of execution.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SkipInitialCheck">
      <summary>Assumes that all servers are responding. This will speed up the operation of this method, but if some servers are not responding, some transitive replications might be blocked.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions.SyncAdjacentServerOnly">
      <summary>Disables transitive replication. Synchronization is performed only with adjacent servers.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.SyncUpdateCallback">
      <summary>Receives event notifications during a replica synchronization.</summary>
      <param name="eventType">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersEvent"></see> members that specifies the type of event.</param>
      <param name="targetServer">Contains the DNS name of the server that is the target of the replication. This parameter will be null if it is not used by the notification.</param>
      <param name="sourceServer">Contains the DNS name of the server that is the source of the replication. This parameter will be null if it is not used by the notification.</param>
      <param name="exception">A <see cref="T:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException"></see> object that contains additional information about any error that has occurred. This parameter will be null if no error has occurred.</param>
      <returns>true if the SyncReplicaFromAllServers method invoked on a <see cref="System.DirectoryServices.ActiveDirectory.ADAMInstance"></see>,  <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> or <see cref="System.DirectoryServices.ActiveDirectory.DomainController"></see> object should resume; false if the SyncReplicaFromAllServers method should terminate.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TopLevelName">
      <summary>Contains forest trust account information about a top-level domain in a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see>.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Name">
      <summary>Gets the name of a top-level domain in a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see>.</summary>
      <returns>A <see cref="System.String"></see> that contains the name of the <see cref="System.DirectoryServices.ActiveDirectory.TopLevelName"></see> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Status">
      <summary>Gets or sets the status of a top-level domain in a <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see>.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.TopLevelNameStatus"></see> value that contains the status of the <see cref="System.DirectoryServices.ActiveDirectory.TopLevelName"></see> object.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not one of the <see cref="System.DirectoryServices.ActiveDirectory.TopLevelNameStatus"></see> values.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName"></see> object is in this collection.</summary>
      <param name="name">The <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.TopLevelName"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="name">name</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="names">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in names where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> parameter that was specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="names">names</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName"></see> object in this collection.</summary>
      <param name="name">The <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.TopLevelName"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="name">name</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)"></see> property gets a <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.TopLevelName"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.TopLevelName"></see> that is located at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> parameter that was specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions">
      <summary>Specifies additional information about a forest trust collision when the <see cref="P:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision.CollisionType"></see> property value is <see cref="F:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionType.TopLevelName"></see>.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByAdmin">
      <summary>The forest trust account was disabled by administrative action.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.DisabledByConflict">
      <summary>The forest trust account was disabled due to a conflict with an existing forest trust account.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.NewlyCreated">
      <summary>The forest trust account has been created and is disabled.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameCollisionOptions.None">
      <summary>No action has occurred.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus">
      <summary>Indicates the forest trust account status of a top-level domain in a forest.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.AdminDisabled">
      <summary>The forest trust account is disabled by administrative action.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.ConflictDisabled">
      <summary>The forest trust account is disabled due to a conflict with an existing forest trust account.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.Enabled">
      <summary>The forest trust account is enabled.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TopLevelNameStatus.NewlyCreated">
      <summary>The forest trust account was disabled on creation.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TrustDirection">
      <summary>Indicates the direction of a trust.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional">
      <summary>Each domain or forest has access to the resources of the other domain or forest.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound">
      <summary>This is a trusting domain or forest. The other domain or forest has access to the resources of this domain or forest. This domain or forest does not have access to resources that belong to the other domain or forest.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound">
      <summary>This is a trusted domain or forest. This domain or forest has access to resources of the other domain or forest. The other domain or forest does not have access to the resources of this domain or forest.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> class contains information for a trust relationship between a pair of <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> objects.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.SourceName">
      <summary>Obtains the name of the source <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> objects for this trust relationship.</summary>
      <returns>A string that contains the name of the source <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> or <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> objects for this trust relationship.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TargetName">
      <summary>Obtains the name of the target <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> objects for this trust relationship.</summary>
      <returns>A string that contains the name of the target <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> or <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> objects for this trust relationship.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustDirection">
      <summary>Obtains the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection"></see> objects for this trust relationship relative to the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain"></see> or <see cref="T:System.DirectoryServices.ActiveDirectory.Forest"></see> objects that created the trust.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.TrustDirection"></see> value for this trust relationship relative to the <see cref="System.DirectoryServices.ActiveDirectory.Domain"></see> or <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> objects that created the trust.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.TrustType">
      <summary>Obtains the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustType"></see> object of the trust relationship.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.TrustType"></see> value that represents the type of the trust relationship.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection"></see> class contains a collection of <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Contains(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> object is contained in this collection.</summary>
      <param name="information">The <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> object to search for in this collection.</param>
      <returns>true if the specified object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="information">information</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in array where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough, based on the source collection size and the <paramref name="index">index</paramref> specified.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="array">array</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> object in this collection.</summary>
      <param name="information">The <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="information">information</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> object at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.TrustType">
      <summary>Indicates the type of a <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation"></see> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.CrossLink">
      <summary>The trust relationship is a shortcut between two domains that exists to optimize the authentication processing between two domains that are in separate domain trees.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.External">
      <summary>The trust relationship is with a domain outside of the current forest.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.Forest">
      <summary>The trust relationship is between two forest root domains in separate Windows Server 2003 forests.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.Kerberos">
      <summary>The trusted domain is an MIT Kerberos realm.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.ParentChild">
      <summary>The trust relationship is between a parent and a child domain.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.TreeRoot">
      <summary>One of the domains in the trust relationship is a tree root.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.TrustType.Unknown">
      <summary>The trust is a non-specific type.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectoryAccessRule">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> class is used to represent an access control entry (ACE) in the discretionary access control list (DACL) of an Active Directory Domain Services object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> class with the specified identity reference, Active Directory Domain Services rights, and access rule type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object which identifies the trustee of the access rule.</param>
      <param name="adRights">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> enumeration values that specifies the rights of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> class with the specified identity reference, Active Directory Domain Services rights, access rule type, and inheritance type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="adRights">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> enumeration values that specifies the rights of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> class with the specified identity reference, Active Directory Domain Services rights, access rule type, and object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="adRights">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> enumeration values that specifies the rights of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="objectType">The schema GUID of the object to which the access rule applies.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> class with the specified identity reference, Active Directory Domain Services rights, access rule type, inheritance type, and inherited object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object which identifies the trustee of the access rule.</param>
      <param name="adRights">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> enumeration values that specifies the rights of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
      <param name="inheritedObjectType">The schema GUID of the child object type that can inherit this access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> class with the specified identity reference, Active Directory Domain Services rights, access rule type, object type, and inheritance type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="adRights">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> enumeration values that specifies the rights of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="objectType">The schema GUID of the object to which the access rule applies.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> class with the specified identity reference, Active Directory Domain Services rights, access rule type, object type, inheritance type, and inherited object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="adRights">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> enumeration values that specifies the rights of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="objectType">The schema GUID of the object to which the access rule applies.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
      <param name="inheritedObjectType">The schema GUID of the child object type that can inherit this access rule.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectoryAccessRule.ActiveDirectoryRights">
      <summary>Gets the Active Directory Domain Services rights for this access rule.</summary>
      <returns>A combination of one or more of the <see cref="System.DirectoryServices.ActiveDirectoryRights"></see> enumeration values that specify the Active Directory Domain Services access rights that are included in this rule.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectoryAccessRule.InheritanceType">
      <summary>Gets the inheritance type for this access rule.</summary>
      <returns>One of the <see cref="System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type for this access rule.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectoryAuditRule">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see> is used to set an access control entry (ACE) on a system access control list (SACL). The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> contains the trustee, which is represented as an <see cref="P:System.Security.AccessControl.AuthorizationRule.IdentityReference"></see> object. It also contains information about the access control type, access mask, and other properties such as inheritance flags. This rule is set on an <see cref="T:System.DirectoryServices.ActiveDirectorySecurity"></see> object. After the <see cref="T:System.DirectoryServices.ActiveDirectorySecurity"></see> is committed to the directory store, it will modify the security descriptor object according to the rules that are set on <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see>.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see> class with the specified identity, rights, and flags.</summary>
      <param name="identity">Specifies an <see cref="T:System.Security.Principal.IdentityReference"></see> object, such as an NTAccount object, that resolves to a security identifier (SID).</param>
      <param name="adRights">Specifies an <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> object, which is used to define all the rights that can be set on a directory object, as defined in the <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> enumeration.</param>
      <param name="auditFlags">Specifies an <see cref="T:System.Security.AccessControl.AuditFlags"></see> object, which contains the combination of one or more audit flags to add to this <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see>. The allowable flags are <see cref="F:System.Security.AccessControl.AuditFlags.Success"></see> and <see cref="F:System.Security.AccessControl.AuditFlags.Failure"></see>. This parameter may not be zero.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see> class with the specified identity, rights, flags, and inheritance type.</summary>
      <param name="identity">Specifies an <see cref="T:System.Security.Principal.IdentityReference"></see> object, such as an NTAccount object, that resolves to a security identifier (SID).</param>
      <param name="adRights">Specifies an <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> object, which is used to define all the rights that can be set on a directory object, as defined in the <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> enumeration.</param>
      <param name="auditFlags">Specifies an <see cref="T:System.Security.AccessControl.AuditFlags"></see> object, which contains a combination of one or more audit flags to add to this <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see>. The allowable flags are <see cref="F:System.Security.AccessControl.AuditFlags.Success"></see> and <see cref="F:System.Security.AccessControl.AuditFlags.Failure"></see>. This parameter can not be zero.</param>
      <param name="inheritanceType">Specifies the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> object that contains inheritance information. The allowable flags for this parameter are found in the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see> class with the specified identity, rights, flags, and object type.</summary>
      <param name="identity">Specifies an <see cref="T:System.Security.Principal.IdentityReference"></see> object, such as an NTAccount object, that resolves to a security identifier (SID).</param>
      <param name="adRights">Specifies an <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> object, which is used to define all the rights that can be set on a directory object, as defined in the <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> enumeration.</param>
      <param name="auditFlags">Specifies an <see cref="T:System.Security.AccessControl.AuditFlags"></see> object, which contains the combination of one or more audit flags to add to this <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see>. The allowable flags are <see cref="F:System.Security.AccessControl.AuditFlags.Success"></see> and <see cref="F:System.Security.AccessControl.AuditFlags.Failure"></see>. This parameter can not be zero.</param>
      <param name="objectType">Specifies a <see cref="T:System.Guid"></see> object that contains the GUID of the object to which the access permissions apply.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see> class with the specified identity, rights, flags, inheritance type, and inherited object type.</summary>
      <param name="identity">Specifies an <see cref="T:System.Security.Principal.IdentityReference"></see> object, such as an NTAccount object, that resolves to a security identifier (SID).</param>
      <param name="adRights">Specifies an <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> data type object, which is used to define all the rights that can be set on a directory object, as defined in the <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> enumeration.</param>
      <param name="auditFlags">Specifies an <see cref="T:System.Security.AccessControl.AuditFlags"></see> object, which contains the combination of one or more audit flags to add to this <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see>. The allowable flags are <see cref="F:System.Security.AccessControl.AuditFlags.Success"></see> and <see cref="F:System.Security.AccessControl.AuditFlags.Failure"></see>. This parameter may not be zero.</param>
      <param name="inheritanceType">Specifies the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> object that contains inheritance information. The allowable flags for this parameter are found in the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration.</param>
      <param name="inheritedObjectType">Specifies the <see cref="T:System.Guid"></see> object that identifies the type of child object that can inherit this access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see> class with the specified identity, rights, flags, object type, and inheritance type.</summary>
      <param name="identity">Specifies an <see cref="T:System.Security.Principal.IdentityReference"></see> object, such as an NTAccount object, that resolves to a security identifier (SID).</param>
      <param name="adRights">Specifies an <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> object, which is used to define all the rights that can be set on a directory object, as defined in the <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> enumeration.</param>
      <param name="auditFlags">Specifies an <see cref="T:System.Security.AccessControl.AuditFlags"></see> object, which contains the combination of one or more audit flags to add to this <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see>. The allowable flags are <see cref="F:System.Security.AccessControl.AuditFlags.Success"></see> and <see cref="F:System.Security.AccessControl.AuditFlags.Failure"></see>. This parameter may not be zero.</param>
      <param name="objectType">Specifies a <see cref="T:System.Guid"></see> object which contains the GUID of the object to which the access permissions apply.</param>
      <param name="inheritanceType">Specifies the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> object that contains inheritance information. The allowable flags for this parameter are found in the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see> class with the specified identity, rights, flags, object type, inheritance type, and inherited object type.</summary>
      <param name="identity">Specifies an <see cref="T:System.Security.Principal.IdentityReference"></see> object, such as an NTAccount object, that resolves to a security identifier (SID).</param>
      <param name="adRights">Specifies an <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> object, which is used to define all the rights that can be set on a directory object, as defined in the <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> enumeration.</param>
      <param name="auditFlags">Specifies an <see cref="T:System.Security.AccessControl.AuditFlags"></see> object, which contains the combination of one or more audit flags to add to this <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see>. The allowable flags are <see cref="F:System.Security.AccessControl.AuditFlags.Success"></see> and <see cref="F:System.Security.AccessControl.AuditFlags.Failure"></see>. This parameter may not be zero.</param>
      <param name="objectType">Specifies a <see cref="T:System.Guid"></see> object that contains the GUID of the object to which the access permissions apply.</param>
      <param name="inheritanceType">Specifies the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> object that contains inheritance information. The allowable flags for this parameter are found in the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration.</param>
      <param name="inheritedObjectType">Specifies the <see cref="T:System.Guid"></see> object that identifies the type of child object that can inherit this access rule.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectoryAuditRule.ActiveDirectoryRights">
      <summary>Gets the rights for the audit rule.</summary>
      <returns>One or more of the <see cref="System.DirectoryServices.ActiveDirectoryRights"></see> enumeration values that specifies the rights for the audit rule.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectoryAuditRule.InheritanceType">
      <summary>Gets the inheritance type of the audit rule.</summary>
      <returns>One of the <see cref="System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the audit rule.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectoryRights">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectoryRights"></see> enumeration specifies the access rights that are assigned to an Active Directory Domain Services object.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.AccessSystemSecurity">
      <summary>The right to get or set the SACL in the object security descriptor.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.CreateChild">
      <summary>The right to create children of the object.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.Delete">
      <summary>The right to delete the object.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.DeleteChild">
      <summary>The right to delete children of the object.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.DeleteTree">
      <summary>The right to delete all children of this object, regardless of the permissions of the children.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.ExtendedRight">
      <summary>A customized control access right. For a list of possible extended rights, see the topic &amp;quot;Extended Rights&amp;quot; in the MSDN Library at http://msdn.microsoft.com. For more information about extended rights, see the topic &amp;quot;Control Access Rights&amp;quot; in the MSDN Library at http://msdn.microsoft.com.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.GenericAll">
      <summary>The right to create or delete children, delete a subtree, read and write properties, examine children and the object itself, add and remove the object from the directory, and read or write with an extended right.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.GenericExecute">
      <summary>The right to read permissions on, and list the contents of, a container object.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.GenericRead">
      <summary>The right to read permissions on this object, read all the properties on this object, list this object name when the parent container is listed, and list the contents of this object if it is a container.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.GenericWrite">
      <summary>The right to read permissions on this object, write all the properties on this object, and perform all validated writes to this object.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.ListChildren">
      <summary>The right to list children of this object. For more information about this right, see the topic &amp;quot;Controlling Object Visibility&amp;quot; in the MSDN Library http://msdn.microsoft.com/library.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.ListObject">
      <summary>The right to list a particular object. For more information about this right, see the topic &amp;quot;Controlling Object Visibility&amp;quot; in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.ReadControl">
      <summary>The right to read data from the security descriptor of the object, not including the data in the SACL.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.ReadProperty">
      <summary>The right to read properties of the object.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.Self">
      <summary>The right to perform an operation that is controlled by a validated write access right.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.Synchronize">
      <summary>The right to use the object for synchronization. This right enables a thread to wait until that object is in the signaled state.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.WriteDacl">
      <summary>The right to modify the DACL in the object security descriptor.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.WriteOwner">
      <summary>The right to assume ownership of the object. The user must be an object trustee. The user cannot transfer the ownership to other users.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectoryRights.WriteProperty">
      <summary>The right to write properties of the object.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectorySecurity">
      <summary>Uses the object security layer of the managed ACL library to wrap access control functionality for directory objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurity"></see> class.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType">
      <summary>Gets the <see cref="T:System.Type"></see> object that represents an access right for this object.</summary>
      <returns>The <see cref="System.Type"></see> of the access right.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <summary>Creates an <see cref="T:System.Security.AccessControl.AccessRule"></see> object with the specified values.</summary>
      <param name="identityReference">An <see cref="T:System.Security.Principal.IdentityReference"></see> object such as an NTAccount object that resolves to a security identifier (SID).</param>
      <param name="accessMask">An <see cref="T:System.Int32"></see> bitmask that shows the access privileges to use.</param>
      <param name="isInherited">A <see cref="T:System.Boolean"></see> object that indicates whether ACEs are inherited. true if ACEs are inherited; otherwise, false.</param>
      <param name="inheritanceFlags">An <see cref="T:System.Security.AccessControl.InheritanceFlags"></see> object that contains inheritance flags on a directory object.</param>
      <param name="propagationFlags">A <see cref="T:System.Security.AccessControl.PropagationFlags"></see> object that contains inheritance propagation flags on a directory object.</param>
      <param name="type">An <see cref="T:System.Security.AccessControl.AccessControlType"></see> object that contains the ACE type.</param>
      <returns>The <see cref="System.Security.AccessControl.AccessRule"></see> that corresponds to the <see cref="System.DirectoryServices.ActiveDirectorySecurity"></see> object.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)">
      <summary>Creates an <see cref="T:System.Security.AccessControl.AccessRule"></see> object with the specified values.</summary>
      <param name="identityReference">An <see cref="T:System.Security.Principal.IdentityReference"></see> object, such as an NTAccount object, that resolves to a security identifier (SID).</param>
      <param name="accessMask">An <see cref="T:System.Int32"></see> bitmask that shows the access privileges to use.</param>
      <param name="isInherited">A <see cref="T:System.Boolean"></see> object that indicates if ACEs are inherited. true if ACEs are inherited; otherwise, false.</param>
      <param name="inheritanceFlags">An <see cref="T:System.Security.AccessControl.InheritanceFlags"></see> object that contains inheritance flags for a directory object.</param>
      <param name="propagationFlags">A <see cref="T:System.Security.AccessControl.PropagationFlags"></see> object that contains inheritance propagation flags for a directory object.</param>
      <param name="type">An <see cref="T:System.Security.AccessControl.AccessControlType"></see> object that contains the ACE type.</param>
      <param name="objectGuid">A <see cref="T:System.Guid"></see> object that contains the GUID of the directory object.</param>
      <param name="inheritedObjectGuid">A <see cref="T:System.Guid"></see> object that contains the GUID of the inherited directory object.</param>
      <returns>The <see cref="System.Security.AccessControl.AccessRule"></see> that corresponds to the <see cref="System.DirectoryServices.ActiveDirectorySecurity"></see> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType">
      <summary>Gets the <see cref="T:System.Type"></see> that represents an access rule for this object.</summary>
      <returns>The <see cref="System.Type"></see> of the access rule.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <summary>Adds an access rule to the DACL of an object.</summary>
      <param name="rule">The <see cref="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)"></see> object to which this operation applies.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <summary>Adds an audit rule to the SACL of an object.</summary>
      <param name="rule">The <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule"></see> object to which this operation applies.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <summary>Creates an <see cref="T:System.Security.AccessControl.AuditRule"></see> object with the specified values.</summary>
      <param name="identityReference">An <see cref="T:System.Security.Principal.IdentityReference"></see> object such as an NTAccount object, that resolves to a security identifier (SID).</param>
      <param name="accessMask">An <see cref="T:System.Int32"></see> bitmask that shows the access privileges to use.</param>
      <param name="isInherited">A <see cref="T:System.Boolean"></see> object that indicates if ACEs are inherited. true if ACEs are inherited; otherwise, false.</param>
      <param name="inheritanceFlags">An <see cref="T:System.Security.AccessControl.InheritanceFlags"></see> object that contains inheritance flags on a directory object.</param>
      <param name="propagationFlags">A <see cref="T:System.Security.AccessControl.PropagationFlags"></see> object that contains inheritance propagation flags on a directory object.</param>
      <param name="flags">An <see cref="T:System.Security.AccessControl.AuditFlags"></see> object that contains the audit flags for this <see cref="T:System.DirectoryServices.ActiveDirectorySecurity"></see> object.</param>
      <returns>The <see cref="System.Security.AccessControl.AuditRule"></see> that corresponds to the <see cref="System.DirectoryServices.ActiveDirectorySecurity"></see> object.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)">
      <summary>Creates an <see cref="T:System.Security.AccessControl.AuditRule"></see> object with the specified values.</summary>
      <param name="identityReference">An <see cref="T:System.Security.Principal.IdentityReference"></see> object such as an NTAccount object that resolves to a security identifier (SID).</param>
      <param name="accessMask">An <see cref="T:System.Int32"></see> bitmask that shows the access privileges to use.</param>
      <param name="isInherited">A <see cref="T:System.Boolean"></see> object that indicates whether ACEs are inherited. true if ACEs are inherited; otherwise, false.</param>
      <param name="inheritanceFlags">An <see cref="T:System.Security.AccessControl.InheritanceFlags"></see> object that contains inheritance flags on a directory object.</param>
      <param name="propagationFlags">A <see cref="T:System.Security.AccessControl.PropagationFlags"></see> object that contains inheritance propagation flags on a directory object.</param>
      <param name="flags">An <see cref="T:System.Security.AccessControl.AuditFlags"></see> object that contains the audit flags for this <see cref="T:System.DirectoryServices.ActiveDirectorySecurity"></see> object.</param>
      <param name="objectGuid">A <see cref="T:System.Guid"></see> object that contains the Guido of the directory object.</param>
      <param name="inheritedObjectGuid">A <see cref="T:System.Guid"></see> object that contains the Guido of the inherited directory object.</param>
      <returns>The <see cref="System.Security.AccessControl.AuditRule"></see> that corresponds to the <see cref="System.DirectoryServices.ActiveDirectorySecurity"></see> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType">
      <summary>Gets the <see cref="T:System.Type"></see> that represents an audit rule for this object.</summary>
      <returns>The <see cref="System.Type"></see> of the audit rule.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)">
      <summary>Applies the specified modification to the specified <see cref="T:System.Security.AccessControl.AccessRule"></see>.</summary>
      <param name="modification">The type of access control modification to perform.</param>
      <param name="rule">The access rule to modify.</param>
      <param name="modified">true if successfully modified; otherwise, false.</param>
      <returns>true if successfully modified; otherwise, false.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)">
      <summary>Applies the specified modification to the specified <see cref="T:System.Security.AccessControl.AuditRule"></see>.</summary>
      <param name="modification">The modification to apply.</param>
      <param name="rule">The audit rule to modify.</param>
      <param name="modified">true if successfully modified; otherwise, false.</param>
      <returns>true if successfully modified; otherwise, false.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)">
      <summary>Removes all access rules associated with the specified <see cref="T:System.Security.Principal.IdentityReference"></see>.</summary>
      <param name="identity">The <see cref="T:System.Security.Principal.IdentityReference"></see> for which to remove all access rules.</param>
      <exception cref="T:System.InvalidOperationException">All access rules are not in canonical order.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)">
      <summary>Removes all audit rules associated with the specified <see cref="T:System.Security.Principal.IdentityReference"></see>.</summary>
      <param name="identity">The <see cref="T:System.Security.Principal.IdentityReference"></see> for which to remove all audit rules.</param>
      <exception cref="T:System.InvalidOperationException">All audit rules are not in canonical order.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <summary>Removes all access rules that have the specified <see cref="T:System.Security.Principal.IdentityReference"></see> object and <see cref="T:System.Security.AccessControl.AccessControlType"></see> object from the DACL of an object.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object such as an NTAccount object, that resolves to a security identifier (SID).</param>
      <param name="type">An <see cref="T:System.Security.AccessControl.AccessControlType"></see> object that contains the ACE type.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <summary>Removes all access rules that contain the same security identifier and access mask as the specified access rule from the DACL of an object.</summary>
      <param name="rule">The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> object to which this operation applies.</param>
      <returns>true if the operation is successful; otherwise, false.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <summary>Removes all access rules that exactly match the specified access rule from the DACL of an object.</summary>
      <param name="rule">The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> object to which this operation applies.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)">
      <summary>Removes all audit rules that have the specified <see cref="T:System.Security.Principal.IdentityReference"></see> object from the SACL of an object.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object such as an NTAccount object, that resolves to a security identifier (SID).</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <summary>Removes all audit rules that contain the same security identifier and access mask as the specified audit rule from the System Access Control List (SACL) of an object.</summary>
      <param name="rule">The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> object to which this operation applies.</param>
      <returns>true if the operation is successful; otherwise, false.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <summary>Removes all audit rules that exactly match the specified audit rule from the SACL of an object.</summary>
      <param name="rule">The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> object to which this operation applies.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <summary>Searches an object&amp;#39;s DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <paramref name="rule">rule</paramref> object, and replaces all of those access rules with the access rules that are contained in the <paramref name="rule">rule</paramref> object.</summary>
      <param name="rule">The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> object to which this operation applies.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
      <summary>Searches an object&amp;#39;s DACL for all access rules that contain a security identifier (SID) that matches the SID specified in the <paramref name="rule">rule</paramref> object, and an access control type (Allow or Deny) that matches the type specified in the <paramref name="rule">rule</paramref> object, and replaces all of those access rules with the access rules that are contained in the <paramref name="rule">rule</paramref> object.</summary>
      <param name="rule">The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> object to which this operation applies.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
      <summary>Replaces all audit rules that contain the same security identifier as the specified audit rule in the SACL of an object with the specified audit rule.</summary>
      <param name="rule">The <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule"></see> object to which this operation applies.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectorySecurityInheritance">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration specifies if, and how, ACE information is applied to an object and its descendents.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.All">
      <summary>Indicates inheritance that includes the object to which the ACE is applied, the object&amp;#39;s immediate children, and the descendents of the object&amp;#39;s children.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Children">
      <summary>Indicates inheritance that includes the object&amp;#39;s immediate children only, not the object itself or the descendents of its children.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.Descendents">
      <summary>Indicates inheritance that includes the object&amp;#39;s immediate children and the descendants of the object&amp;#39;s children, but not the object itself.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.None">
      <summary>Indicates no inheritance. The ACE information is only used on the object on which the ACE is set.  ACE information is not inherited by any descendents of the object.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectorySecurityInheritance.SelfAndChildren">
      <summary>Indicates inheritance that includes the object itself and its immediate children.  It does not include the descendents of its children.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.AuthenticationTypes">
      <summary>The <see cref="T:System.DirectoryServices.AuthenticationTypes"></see> enumeration specifies the types of authentication used in <see cref="System.DirectoryServices"></see>. This enumeration has a <see cref="T:System.FlagsAttribute"></see> attribute that allows a bitwise combination of its member values.</summary>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.Anonymous">
      <summary>No authentication is performed.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.Delegation">
      <summary>Enables Active Directory Services Interface (ADSI) to delegate the user&amp;#39;s security context, which is necessary for moving objects across domains.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.Encryption">
      <summary>Attaches a cryptographic signature to the message that both identifies the sender and ensures that the message has not been modified in transit.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.FastBind">
      <summary>Specifies that ADSI will not attempt to query the Active Directory Domain Services objectClass property.  Therefore, only the base interfaces that are supported by all ADSI objects will be exposed.  Other interfaces that the object supports will not be available. A user can use this option to boost the performance in a series of object manipulations that involve only methods of the base interfaces. However, ADSI does not verify if any of the request objects actually exist on the server. For more information, see the topic &amp;quot;Fast Binding Option for Batch Write/Modify Operations&amp;quot; in the MSDN Library at http://msdn.microsoft.com/library.  For more information about the objectClass property, see the &amp;quot;Object-Class&amp;quot; topic in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.None">
      <summary>Equates to zero, which means to use basic authentication (simple bind) in the LDAP provider.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.ReadonlyServer">
      <summary>For a WinNT provider, ADSI tries to connect to a domain controller. For Active Directory Domain Services, this flag indicates that a writable server is not required for a serverless binding.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.Sealing">
      <summary>Encrypts data using Kerberos. The <see cref="F:System.DirectoryServices.AuthenticationTypes.Secure"></see> flag must also be set to use sealing.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.Secure">
      <summary>Requests secure authentication. When this flag is set, the WinNT provider uses NTLM to authenticate the client. Active Directory Domain Services uses Kerberos, and possibly NTLM, to authenticate the client. When the user name and password are a null reference (Nothing in Visual Basic), ADSI binds to the object using the security context of the calling thread, which is either the security context of the user account under which the application is running or of the client user account that the calling thread is impersonating.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.SecureSocketsLayer">
      <summary>Attaches a cryptographic signature to the message that both identifies the sender and ensures that the message has not been modified in transit. Active Directory Domain Services requires the Certificate Server be installed to support Secure Sockets Layer (SSL) encryption.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.ServerBind">
      <summary>If your ADsPath includes a server name, specify this flag when using the LDAP provider. Do not use this flag for paths that include a domain name or for serverless paths. Specifying a server name without also specifying this flag results in unnecessary network traffic.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.AuthenticationTypes.Signing">
      <summary>Verifies data integrity to ensure that the data received is the same as the data sent. The <see cref="F:System.DirectoryServices.AuthenticationTypes.Secure"></see> flag must also be set to use signing.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.CreateChildAccessRule">
      <summary>The <see cref="T:System.DirectoryServices.CreateChildAccessRule"></see> class represents a specific type of access rule that is used to allow or deny an Active Directory Domain Services object the right to create child objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.CreateChildAccessRule"></see> class with the specified identity reference and access control type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
    </member>
    <member name="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.CreateChildAccessRule"></see> class with the specified identity reference, access control type, and Active Directory Domain Services security inheritance information.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.CreateChildAccessRule"></see> class with the specified identity reference, access control type, and child object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="childType">The schema GUID of the type of child objects that can or cannot be created. If this is <see cref="F:System.Guid.Empty"></see>, then the access rule applies to all child types.</param>
    </member>
    <member name="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.CreateChildAccessRule"></see> class with the specified identity reference, access control type, Active Directory Domain Services security inheritance information, and inherited object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
      <param name="inheritedObjectType">The schema GUID of the child object type that can inherit this access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.CreateChildAccessRule"></see> class with the specified identity reference, access control type, child object type, and Active Directory Domain Services security inheritance information.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="childType">The schema GUID of the type of child objects that can or cannot be created. If this is <see cref="F:System.Guid.Empty"></see>, then the access rule applies to all child types.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.CreateChildAccessRule"></see> class with the specified identity reference, access control type, child object type, Active Directory Domain Services security inheritance information, and inherited object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="childType">The schema GUID of the type of child objects that can or cannot be created. If this is <see cref="F:System.Guid.Empty"></see>, then the access rule applies to all child types.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
      <param name="inheritedObjectType">The schema GUID of the child object type that can inherit this access rule.</param>
    </member>
    <member name="T:System.DirectoryServices.DeleteChildAccessRule">
      <summary>The <see cref="T:System.DirectoryServices.DeleteChildAccessRule"></see> class represents a specific type of access rule that is used to allow or deny an Active Directory Domain Services object the right to delete child objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DeleteChildAccessRule"></see> class with the specified identity reference and access control type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
    </member>
    <member name="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DeleteChildAccessRule"></see> class with the specified identity reference, access control type, and Active Directory Domain Services security inheritance.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DeleteChildAccessRule"></see> class with the specified identity reference, access control type, and child type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="childType">The schema GUID of the type of child objects that can or cannot be deleted. If this is <see cref="F:System.Guid.Empty"></see>, then the access rule applies to all child types.</param>
    </member>
    <member name="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DeleteChildAccessRule"></see> class with the specified identity reference, access control type, Active Directory Domain Services security inheritance, and inherited object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
      <param name="inheritedObjectType">The schema GUID of the child object type that can inherit this access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DeleteChildAccessRule"></see> class with the specified identity reference, access control type, child type, and Active Directory Domain Services security inheritance.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="childType">The schema GUID of the type of child objects that can or cannot be deleted. If this is <see cref="F:System.Guid.Empty"></see>, then the access rule applies to all child types.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DeleteChildAccessRule"></see> class with the specified identity reference, access control type, child type, Active Directory Domain Services security inheritance, and inherited object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="childType">The schema GUID of the type of child objects that can or cannot be deleted. If this is <see cref="F:System.Guid.Empty"></see>, then the access rule applies to all child types.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
      <param name="inheritedObjectType">The schema GUID of the child object type that can inherit this access rule.</param>
    </member>
    <member name="T:System.DirectoryServices.DeleteTreeAccessRule">
      <summary>The <see cref="T:System.DirectoryServices.DeleteTreeAccessRule"></see> class represents a specific type of access rule that is used to allow or deny an Active Directory Domain Services object the right to delete all child objects, regardless of the permissions that the child objects have.</summary>
    </member>
    <member name="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DeleteTreeAccessRule"></see> class with the specified identity reference and access control type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
    </member>
    <member name="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DeleteTreeAccessRule"></see> class with the specified identity reference, access control type, and Active Directory Domain Services security inheritance.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
    </member>
    <member name="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.DeleteTreeAccessRule"></see> class with the specified identity reference, access control type, Active Directory Domain Services security inheritance, and inherited object type.</summary>
      <param name="identity">An <see cref="T:System.Security.Principal.IdentityReference"></see> object that identifies the trustee of the access rule.</param>
      <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType"></see> enumeration values that specifies the access rule type.</param>
      <param name="inheritanceType">One of the <see cref="T:System.DirectoryServices.ActiveDirectorySecurityInheritance"></see> enumeration values that specifies the inheritance type of the access rule.</param>
      <param name="inheritedObjectType">The schema GUID of the child object type that can inherit this access rule.</param>
    </member>
    <member name="T:System.DirectoryServices.DereferenceAlias">
      <summary>The <see cref="T:System.DirectoryServices.DereferenceAlias"></see> enumeration specifies how aliases are resolved. This enumeration provides values for the <see cref="P:System.DirectoryServices.DirectorySearcher.DerefAlias"></see> property.</summary>
    </member>
    <member name="F:System.DirectoryServices.DereferenceAlias.Always">
      <summary>Dereferences aliases when both searching subordinates and locating the base objects of the search.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.DereferenceAlias.FindingBaseObject">
      <summary>Dereferences aliases when locating the base object of the search, but not when searching its subordinates.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.DereferenceAlias.InSearching">
      <summary>Dereferences aliases when searching subordinates of the base object, but not when locating the base itself.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.DereferenceAlias.Never">
      <summary>Indicates that the alias will not be dereferenced. If the <see cref="P:System.DirectoryServices.DirectorySearcher.DerefAlias"></see> property is not set, the default value is <see cref="F:System.DirectoryServices.DereferenceAlias.Never"></see>.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.SearchResultCollection">
      <summary>The <see cref="T:System.DirectoryServices.SearchResultCollection"></see> class contains the <see cref="T:System.DirectoryServices.SearchResult"></see> instances that the Active Directory hierarchy returned during a <see cref="T:System.DirectoryServices.DirectorySearcher"></see> query.</summary>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)">
      <summary>Determines if a specified <see cref="T:System.DirectoryServices.SearchResult"></see> object is in this collection.</summary>
      <param name="result">The <see cref="T:System.DirectoryServices.SearchResult"></see> object to find.</param>
      <returns>true if the specified property belongs to this collection; otherwise, false.</returns>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.SearchResult"></see> objects in this collection to the specific array, starting at the specified index in the target array.</summary>
      <param name="results">The array of <see cref="T:System.DirectoryServices.SearchResult"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in results where this method starts copying this collection.</param>
    </member>
    <member name="P:System.DirectoryServices.SearchResultCollection.Count">
      <summary>Gets the number of <see cref="T:System.DirectoryServices.SearchResult"></see> objects in this collection.</summary>
      <returns>The number of <see cref="System.DirectoryServices.SearchResult"></see> objects in this collection.</returns>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.Dispose">
      <summary>Releases all resources that are used by the <see cref="T:System.DirectoryServices.SearchResultCollection"></see> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.SearchResultCollection"></see> object and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.Finalize">
      <summary>Overrides the <see cref="M:System.Object.Finalize"></see> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.GetEnumerator">
      <summary>Returns an enumerator that you can use to iterate through this collection.</summary>
      <returns>An <see cref="System.Collections.IEnumerator"></see> object that you can use to iterate through this collection.</returns>
    </member>
    <member name="P:System.DirectoryServices.SearchResultCollection.Handle">
      <summary>Gets the handle that is returned by the IDirectorySearch::ExecuteSearch method that performs the actual search. For more information, see the IDirectorySearch::ExecuteSearch topic in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <returns>The ADS_SEARCH_HANDLE value that this collection uses.</returns>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.SearchResult"></see> object in this collection.</summary>
      <param name="result">The <see cref="T:System.DirectoryServices.SearchResult"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.SearchResult"></see> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.DirectoryServices.SearchResult"></see> object that is located at a specified index in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.SearchResult"></see> object to retrieve.</param>
      <returns>The <see cref="System.DirectoryServices.SearchResult"></see> object that is located at the specified index.</returns>
    </member>
    <member name="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectorySearcher"></see> properties that were specified before the search was executed.</summary>
      <returns>An array of type <see cref="System.String"></see> that contains the properties that were specified in the <see cref="System.DirectoryServices.DirectorySearcher.PropertiesToLoad"></see> property collection before the search was executed.</returns>
    </member>
    <member name="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
      <param name="index">The zero-based index in array at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="array">array</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index">index</paramref> is less than zero.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="array">array</paramref> is multidimensional.  
 -or-  
 The number of elements in the source <see cref="System.Collections.ICollection"></see> is greater than the available space from <paramref name="index">index</paramref> to the end of the destination <paramref name="array">array</paramref>.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination <paramref name="array">array</paramref>.</exception>
    </member>
    <member name="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="System.Collections.ICollection"></see>.</returns>
    </member>
    <member name="T:System.DirectoryServices.SearchScope">
      <summary>Specifies the possible scopes for a directory search that is performed using the <see cref="T:System.DirectoryServices.DirectorySearcher"></see> object.</summary>
    </member>
    <member name="F:System.DirectoryServices.SearchScope.Base">
      <summary>Limits the search to the base object. The result contains a maximum of one object.  When the <see cref="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery"></see> property is specified for a search, the scope of the search must be set to <see cref="F:System.DirectoryServices.SearchScope.Base"></see>.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.SearchScope.OneLevel">
      <summary>Searches the immediate child objects of the base object, excluding the base object.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.SearchScope.Subtree">
      <summary>Searches the whole subtree, including the base object and all its child objects. If the scope of a directory search is not specified, a <see cref="F:System.DirectoryServices.SearchScope.Subtree"></see> type of search is performed.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.SecurityMasks">
      <summary>Specifies the available options for examining security information of a directory object. This enumeration is used with the <see cref="P:System.DirectoryServices.DirectorySearcher.SecurityMasks"></see> and <see cref="P:System.DirectoryServices.DirectoryEntryConfiguration.SecurityMasks"></see> properties.</summary>
    </member>
    <member name="F:System.DirectoryServices.SecurityMasks.Dacl">
      <summary>Reads or writes the discretionary access-control list (DACL) data.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.SecurityMasks.Group">
      <summary>Reads or writes the group data.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.SecurityMasks.None">
      <summary>Does not read or write security data.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.SecurityMasks.Owner">
      <summary>Reads or writes the owner data.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.SecurityMasks.Sacl">
      <summary>Reads or writes the system access-control list (SACL) data.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.SortDirection">
      <summary>The <see cref="T:System.DirectoryServices.SortDirection"></see> enumeration specifies how to sort the results of an Active Directory Domain Services query.</summary>
    </member>
    <member name="F:System.DirectoryServices.SortDirection.Ascending">
      <summary>Sort from smallest to largest. For example, A to Z.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.SortDirection.Descending">
      <summary>Sort from largest to smallest. For example, Z to A.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.SortOption">
      <summary>Specifies how to sort the results of a search.</summary>
    </member>
    <member name="M:System.DirectoryServices.SortOption.#ctor">
      <summary>Initializes a new instance of the <see cref="M:System.DirectoryServices.SortOption.#ctor"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.SortOption.#ctor(System.String,System.DirectoryServices.SortDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.SortOption"></see> class, which contains the specified property name and specified sort direction.</summary>
      <param name="propertyName">The name of the property to sort by. The <see cref="P:System.DirectoryServices.SortOption.PropertyName"></see> property is set to this value.</param>
      <param name="direction">One of the <see cref="T:System.DirectoryServices.SortDirection"></see> values. The <see cref="P:System.DirectoryServices.SortOption.Direction"></see> property is set to this value.</param>
    </member>
    <member name="P:System.DirectoryServices.SortOption.Direction">
      <summary>Gets or sets the direction in which to sort the results of a query.</summary>
      <returns>One of the <see cref="System.DirectoryServices.SortDirection"></see> values. The default is Ascending.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not one of the <see cref="System.DirectoryServices.SortDirection"></see> values.</exception>
    </member>
    <member name="P:System.DirectoryServices.SortOption.PropertyName">
      <summary>Gets or sets the name of the property to sort on.</summary>
      <returns>The name of the property to sort on. The default is a null reference (Nothing in Visual Basic).</returns>
      <exception cref="T:System.ArgumentNullException">The property value is a null reference (Nothing in Visual Basic).</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport"></see> class represents an inter-site transport object.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.BridgeAllSiteLinks">
      <summary>Gets or sets a value that indicates whether all site links are bridged.</summary>
      <returns>A <see cref="System.Boolean"></see> value that indicates whether to bridge all site links. true if all site links are bridged; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose">
      <summary>Releases all resources that are used by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the object and optionally releases the managed resources.</summary>
      <param name="disposing">true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.FindByTransportType(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport"></see> object for a given directory context and transport type.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that specifies the context for the search.</param>
      <param name="transport">An <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> object that specifies a transport type to find in the search.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport"></see> object for the item found. An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"></see> exception is thrown if an object was not found.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The object was not found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentException">The target in the <paramref name="context">context</paramref> parameter is not a forest, configuration set, domain controller, or an AD LDS server.</exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="context">context</paramref> parameter is null.</exception>
      <exception cref="T:System.Security.Authentication.AuthenticationException">The credentials that were supplied are not valid.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="transport">transport</paramref> parameter is not a valid <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> value.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport"></see> object.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntry"></see> object that represents the directory entry for the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport"></see> object.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.IgnoreReplicationSchedule">
      <summary>Gets or sets a value that indicates whether the replication schedule is ignored.</summary>
      <returns>A <see cref="System.Boolean"></see> value that indicates whether to ignore the replication schedule. true if the replication schedule is ignored; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.Save">
      <summary>Commits all changes to the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport"></see> object to the underlying directory store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
      <exception cref="T:System.UnauthorizedAccessException">The specified account does not have permission to perform this operation.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinkBridges">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection"></see> object that contains all site link bridges for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport"></see> object.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection"></see> object that contains <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge"></see> objects that represent site link bridges.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinks">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection"></see> object that contains all site links for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport"></see> object.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection"></see> object that contains <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink"></see> objects that represent site links.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.ToString">
      <summary>Gets the string representation of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport"></see> object.</summary>
      <returns>A <see cref="System.String"></see> that represents the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> transport type of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport"></see> object.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.TransportType">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> object that represents the transport type for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport"></see> object.</summary>
      <returns>One of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType"></see> values that represents the transport type for this object.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException"></see> class exception is thrown when an Active Directory Domain Services object is created and that object already exists in the underlying directory store.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException"></see> class, using a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException"></see> class, using the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object for the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException"></see> class, using a specified error message and an underlying exception object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception"></see> object that contains underlying exception information.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"></see> class exception is thrown when a requested object is not found in the underlying directory store.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"></see> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"></see> class, using the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> for the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"></see> class with a specified error message and an underlying exception object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception"></see> object that contains underlying exception information.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.String,System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"></see> class with a specified error message and information about the requested object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="type">A <see cref="T:System.Type"></see> object that describes the type of the requested object.</param>
      <param name="name">A <see cref="T:System.String"></see> that contains the name of the requested object.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object with information about the exception.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object that holds serialized object data about the exception that is being thrown.</param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Name">
      <summary>Gets the name of the requested object.</summary>
      <returns>A string that contains the name of the requested object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.Type">
      <summary>Gets the type of the requested object.</summary>
      <returns>A <see cref="System.Type"></see> object that represents the type of the requested object.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"></see> class exception is thrown when an underlying directory operation fails.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"></see> class with a specified error message.</summary>
      <param name="message">A message that describes the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"></see> class, using the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object for the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object for the exception.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"></see> class with a specified error message and an underlying exception object.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception"></see> object that contains underlying exception information.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"></see> class with a specified error message and a specified error code.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="errorCode">An error code that identifies the error.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.String,System.Exception,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"></see> class with a specified error message, an underlying exception object, and a specified error code.</summary>
      <param name="message">A message that describes the error.</param>
      <param name="inner">An <see cref="T:System.Exception"></see> object that contains underlying exception information.</param>
      <param name="errorCode">An error code that identifies the error.</param>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.ErrorCode">
      <summary>Gets the error code for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"></see> object.</summary>
      <returns>An <see cref="System.Int32"></see> value that identifies the error.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object with information about the exception.</summary>
      <param name="serializationInfo">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object that holds serialized object data about the exception being thrown.</param>
      <param name="streamingContext">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> object that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition"></see> class is an abstract class that represents a directory partition in a domain.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose">
      <summary>Releases all managed and unmanaged resources that are held by the object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)">
      <summary>Releases the managed resources that are used by the object and, optionally, releases unmanaged resources.</summary>
      <param name="disposing">A <see cref="T:System.Boolean"></see> value that determines if the managed resources should be released. true if the managed resources are released; false if only the unmanaged resources are released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object that represents the directory partition.</summary>
      <returns>Returns a <see cref="System.DirectoryServices.DirectoryEntry"></see> object that represents the directory partition.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name">
      <summary>Gets the partition name.</summary>
      <returns>A <see cref="System.String"></see> that contains the partition name.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString">
      <summary>Retrieves a string representation of the current directory partition.</summary>
      <returns>Returns a string representation of the current directory partition.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata"></see> class contains replication information for a set of Active Directory Domain Services attributes.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.AttributeNames">
      <summary>Gets the names that are contained in this collection.</summary>
      <returns>An <see cref="System.Collections.ICollection"></see> object that contains the LDAP display names of the attributes in this collection.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Contains(System.String)">
      <summary>Determines if the specified attribute is in this collection.</summary>
      <param name="attributeName">The LDAP display name of the attribute to search for.</param>
      <returns>true if the attribute is in this collection; otherwise, false.</returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="array">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in array where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough to hold the required number of elements.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="array">array</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index">index</paramref> is out of range of the destination array.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Item(System.String)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> object in this collection.</summary>
      <param name="name">The LDAP display name of the attribute to get.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> object that represents the specified attribute.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Values">
      <summary>Gets the values that are contained in this collection.</summary>
      <returns>An <see cref="System.Collections.ICollection"></see> object that contains the <see cref="System.DirectoryServices.ActiveDirectory.AttributeMetadata"></see> objects in this collection.</returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole">
      <summary>Identifies specific roles within a domain.</summary>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.InfrastructureRole">
      <summary>Identifies the infrastructure role.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.NamingRole">
      <summary>Identifies the domain naming master role.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.PdcRole">
      <summary>Identifies the primary domain controller (PDC) emulator role.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.RidRole">
      <summary>Identifies the relative identifier (RID) master role.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole.SchemaRole">
      <summary>Identifies the schema master role.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection"></see> class is a read-only collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> object is in this collection.</summary>
      <param name="role">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.ArgumentNullException"><paramref name="role">role</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> objects in this collection to the specified array, starting at the specified index in the array.</summary>
      <param name="roles">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in roles where this method starts copying this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The destination array is not large enough to hold the required number of elements.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="roles">roles</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> object in this collection.</summary>
      <param name="role">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="role">role</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.Item(System.Int32)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> object to get.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"></see> class represents the weekly schedule for an Active Directory Domain Services replication.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"></see> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"></see> class, using the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"></see> object.</summary>
      <param name="schedule">A <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule"></see> object that is copied to this object.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="schedule">schedule</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule">
      <summary>Gets or sets a three-dimensional array that indicates at what time during the week that the source is available for replication.</summary>
      <returns>A three-dimensional array of <see cref="System.Boolean"></see> elements in which the element is true if the source is available for replication during that specific 15-minute interval. The element is false if the source is not available for replication.  
 The array is in the form RawSchedule[&amp;lt;day-of-week&amp;gt;, &amp;lt;hour&amp;gt;, &amp;lt;15-minute interval&amp;gt;]. All of these values are zero-based and the week begins at 00:00 on Sunday morning, Coordinated Universal Time.  
 The following are the valid values for the day-of-week.  
  Day-of-week value  

  Indicated day of the week.  

  0  

  Sunday  

  1  

  Monday  

  2  

  Tuesday  

  3  

  Wednesday  

  4  

  Thursday  

  5  

  Friday  

  6  

  Saturday  

   

 The hour is zero-based and specified in 24-hour format. For example, 2 P.M. would be specified as 14. Valid values are 0-23.  
 The 15-minute interval specifies the 15-minute block within the hour that the source is available for replication. The following table identifies the possible values for the 15-minute interval.  
  15-minute interval  

  Description  

  0  

  The source is available for replication from 0 to 14 minutes after the hour.  

  1  

  The source is available for replication from 15 to 29 minutes after the hour.  

  2  

  The source is available for replication from 30 to 44 minutes after the hour.  

  3  

  The source is available for replication from 45 to 59 minutes after the hour.  

   

 The following C# example shows how to use this property to determine if the source is available for replication at 15:50 Coordinated Universal Time on Tuesday.  
Boolean isAvailable = scheduleObject.RawSchedule[2, 15, 3];  
 The following C# example shows how to use this property to calculate the 15-minute interval at runtime by dividing the minutes by 15.  
Boolean isAvailable = scheduleObject.RawSchedule[2, 15, (Int32)50/15];  </returns>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ResetSchedule">
      <summary>Resets the entire schedule to unavailable.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetDailySchedule(System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <summary>Adds a range of times for every day of the week to the schedule.</summary>
      <param name="fromHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay"></see> members that specifies the first hour that the source will be available for replication.</param>
      <param name="fromMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour"></see> members that specifies the first 15-minute interval that the source will be available for replication.</param>
      <param name="toHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay"></see> members that specifies the final hour that the source will be available for replication.</param>
      <param name="toMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour"></see> members that specifies the final 15-minute interval that the source will be available for replication.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <summary>Adds a range of times for a single day to the schedule.</summary>
      <param name="day">One of the <see cref="T:System.DayOfWeek"></see> members that specifies the day of the week that the source will be available for replication.</param>
      <param name="fromHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay"></see> members that specifies the first hour that the source will be available for replication.</param>
      <param name="fromMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour"></see> members that specifies the first 15-minute interval that the source will be available for replication.</param>
      <param name="toHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay"></see> members that specifies the final hour that the source will be available for replication.</param>
      <param name="toMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour"></see> members that specifies the final 15-minute interval that the source will be available for replication.</param>
      <exception cref="T:System.ArgumentException">The start time is after the end time.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">One or more parameters is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="days">days</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
      <summary>Adds a range of times for multiple days to the schedule.</summary>
      <param name="days">One of the <see cref="T:System.DayOfWeek"></see> members that specifies the day of the week that the source will be available for replication.</param>
      <param name="fromHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay"></see> members that specifies the first hour that the source will be available for replication.</param>
      <param name="fromMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour"></see> members that specifies the first 15-minute interval that the source will be available for replication.</param>
      <param name="toHour">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.HourOfDay"></see> members that specifies the final hour that the source will be available for replication.</param>
      <param name="toMinute">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.MinuteOfHour"></see> members that specifies the final 15-minute interval that the source will be available for replication.</param>
      <exception cref="T:System.ArgumentException">The start time is after the end time.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">One or more parameters is not valid.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="days">days</paramref> is null.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema"></see> class represents the schema partition for a particular domain.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.Dispose(System.Boolean)">
      <summary>Releases the managed resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema"></see> object and, optionally, releases unmanaged resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses">
      <summary>Retrieves all Active Directory Domain Services classes in the schema.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection"></see> object that contains a collection of <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> objects for the classes that were retrieved.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)">
      <summary>Retrieves all Active Directory Domain Services classes in the schema that are of the specified type.</summary>
      <param name="type">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.SchemaClassType"></see> members that identifies which type of classes to retrieve.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection"></see> object that contains a collection of <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> objects for the classes that were retrieved.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses">
      <summary>Retrieves all of the defunct Active Directory Domain Services classes in the schema.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection"></see> object that contains a collection of <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> objects for the classes that were retrieved.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties">
      <summary>Retrieves all of the defunct Active Directory Domain Services properties in the schema.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection"></see> object that contains a collection of <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> objects for the properties that were retrieved.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties">
      <summary>Retrieves all of the Active Directory Domain Services properties in the schema.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection"></see> object that contains a collection of <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> objects for the properties that were retrieved.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)">
      <summary>Retrieves all of the Active Directory Domain Services properties in the schema of the specified type.</summary>
      <param name="type">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.PropertyTypes"></see> members that identifies which type of properties to retrieve.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection"></see> object that contains a collection of <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> objects for the properties that were retrieved.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)">
      <summary>Retrieves the class with the specified name.</summary>
      <param name="ldapDisplayName">The LDAP display name of the class to find.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object that represents the class with the specified name.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A class with the specified name cannot be found.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="ldapDisplayName">ldapDisplayName</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="ldapDisplayName">ldapDisplayName</paramref> is zero length.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)">
      <summary>Retrieves the defunct class that has the specified common name.</summary>
      <param name="commonName">The common name of the defunct class to find.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object that represents the class with the specified common name.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A class with the specified name cannot be found.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="commonName">commonName</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="commonName">commonName</paramref> is zero length.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)">
      <summary>Retrieves the defunct property that has the specified common name.</summary>
      <param name="commonName">The common name of the defunct property to find.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object that represents the property.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A property with the specified name cannot be found.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="commonName">commonName</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="commonName">commonName</paramref> is zero length.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)">
      <summary>Retrieves the property with the specified name.</summary>
      <param name="ldapDisplayName">The LDAP display name of the property to find.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object that represents the property with the specified name.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A property with the specified name cannot be found.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="propertyName">propertyName</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="propertyName">propertyName</paramref> is zero length.</exception>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema">
      <summary>Gets the schema object for the forest that the currently logged-on user is a member of.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema"></see> object that represents the schema for the domain that the local computer is a member of.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the local domain cannot be made.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetDirectoryEntry">
      <summary>Retrieves a <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object that represents the directory partition.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntry"></see> object that represents the directory partition.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
      <summary>Retrieves the schema object for the specified context.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that contains the target and credentials to use to retrieve the object. The target of the context must be a forest, directory server, or configuration set.</param>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema"></see> object that represents the schema for the specified context.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">A connection to the target specified in <paramref name="context">context</paramref> cannot be made.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> is null.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> is invalid.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.RefreshSchema">
      <summary>Refreshes the schema cache on the client computer.</summary>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner">
      <summary>Gets the schema master role owner.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.DirectoryServer"></see> object that represents the server that is the schema master.</returns>
      <exception cref="T:System.ObjectDisposedException">The current object has been disposed.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> class represents a schema class definition that is contained in the schema partition.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</summary>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that specifies the context for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</param>
      <param name="ldapDisplayName">A <see cref="T:System.String"></see> that represents the LDAP display name for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</param>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> does not refer to a valid <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> or <see cref="System.DirectoryServices.ActiveDirectory.ConfigurationSet"></see>, <paramref name="ldapDisplayName">ldapDisplayName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="ldapDisplayName">ldapDisplayName</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.AuxiliaryClasses">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection"></see> object that contains the auxiliary classes of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection"></see> object that contains <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> objects that represent the auxiliary classes of the current schema class object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.CommonName">
      <summary>Gets or sets the Common Name (CN) of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</summary>
      <returns>A <see cref="System.String"></see> that represents the CN of the current class object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.DefaultObjectSecurityDescriptor">
      <summary>Gets or sets the default <see cref="T:System.DirectoryServices.ActiveDirectorySecurity"></see> descriptor of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectorySecurity"></see> object that represents the default security descriptor for the current schema class object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Description">
      <summary>Gets or sets a description of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</summary>
      <returns>A <see cref="System.String"></see> that contains a description of the current class object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose">
      <summary>Releases the resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object and, optionally, releases unmanaged resources.</summary>
      <param name="disposing">true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object in the Active Directory Domain Services schema partition that matches a given directory context and name.</summary>
      <param name="context">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that specifies the context for the search.</param>
      <param name="ldapDisplayName">A <see cref="T:System.String"></see> that specifies the LDAP display name of the schema class for the search.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object for the schema class that was found. Returns null if the class was not found.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The object was not found.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> does not refer to a valid <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> or <see cref="System.DirectoryServices.ActiveDirectory.ConfigurationSet"></see>, <paramref name="ldapDisplayName">ldapDisplayName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="ldapDisplayName">ldapDisplayName</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetAllProperties">
      <summary>Gets a <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection"></see> collection that contains all properties, including ancestor properties, of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection"></see> collection of the properties of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see>, including ancestor properties.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntry"></see> object that represents the directory entry for the schema class.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object is not a valid instance.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.IsDefunct">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object is defunct.</summary>
      <returns>A <see cref="System.Boolean"></see> value that indicates if the current schema class object is defunct. true if the object is defunct; otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.MandatoryProperties">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection"></see> object that contains the properties that the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> must contain.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection"></see> object that contains the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> objects that represent the properties that the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object must contain.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Name">
      <summary>Gets the ldapDisplayName of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object. For more information, see the topic LDAP-Display-Name in the MSDN Library at http://msdn.microsoft.com.</summary>
      <returns>A <see cref="System.String"></see> that contains the ldapDisplayName of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object. For more information, see the topic LDAP-Display-Name in the MSDN Library at http://msdn.microsoft.com.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Oid">
      <summary>Gets or sets the OID for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</summary>
      <returns>A <see cref="System.String"></see> that represents the OID of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.OptionalProperties">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection"></see> object that contains the properties that the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> can contain.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection"></see> object that contains the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> objects that the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object can contain.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleInferiors">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection"></see> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> objects that the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> class can contain.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection"></see> object that contains the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> objects that this class can contain.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleSuperiors">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection"></see> object that contains the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> objects that can contain this class.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection"></see> object that contains the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> objects that can contain this class.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Save">
      <summary>Commits all changes to the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object to the underlying directory store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The context is an AD LDS configuration set and the AD LDS instance could not be found.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SchemaGuid">
      <summary>Gets or sets the schemaIDGUID for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object. For more information, see the topic &amp;quot;schemaIDGUID&amp;quot; or &amp;quot;Schema-ID-GUID&amp;quot; in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <returns>A <see cref="System.Guid"></see> object that contains the schemaIDGUID for the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object. For more information, see the topic &amp;quot;schemaIDGUID&amp;quot; or &amp;quot;Schema-ID-GUID&amp;quot; in the MSDN Library at http://msdn.microsoft.com/library.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SubClassOf">
      <summary>Gets or sets the schema class from which the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object is derived.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object that contains the schema class from which the current schema class is derived. null if no schema class was specified during the creation of the current class.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.ToString">
      <summary>Gets the LDAP display name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</summary>
      <returns>A <see cref="System.String"></see> that represents the LDAP display name of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.Type">
      <summary>Gets or sets the <see cref="T:System.DirectoryServices.ActiveDirectory.SchemaClassType"></see> type for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</summary>
      <returns>A <see cref="System.DirectoryServices.ActiveDirectory.SchemaClassType"></see> value that contains the type of the current <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified type is not a valid <see cref="System.DirectoryServices.ActiveDirectory.SchemaClassType"></see> value (applies to set only).</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection"></see> class is a read/write collection that contains <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> objects.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Appends the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object to this collection.</summary>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object to append to this collection.</param>
      <returns>The zero-based index of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object that is appended to this collection.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaClass">schemaClass</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[])">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> array to this collection.</summary>
      <param name="schemaClasses">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> array that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaClasses">schemaClasses</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object has not yet been saved to the underlying directory store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection)">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection"></see> object to this collection.</summary>
      <param name="schemaClasses">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection"></see> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaClasses">schemaClasses</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object has not yet been saved to the underlying directory store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection)">
      <summary>Appends the contents of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection"></see> object to this collection.</summary>
      <param name="schemaClasses">The <see cref="T:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection"></see> object that contains the objects to append to this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaClasses">schemaClasses</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Determines if the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object is in this collection.</summary>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object to search for in this collection.</param>
      <returns>true if the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object is in this collection; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaClass">schemaClass</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)">
      <summary>Copies all <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> objects in this collection to the specified array, starting at the specified index of the target array.</summary>
      <param name="schemaClasses">The array of <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> objects that receives the elements of this collection.</param>
      <param name="index">The zero-based index in schemaClasses where this method starts copying this collection.</param>
      <exception cref="T:System.ArgumentException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaClasses">schemaClasses</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the destination array.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object in this collection.</summary>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object to search for in this collection.</param>
      <returns>The zero-based index of the first matching object. Returns -1 if no member of this collection is identical to the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaClass">schemaClass</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Inserts the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object into this collection at the specified index.</summary>
      <param name="index">The zero-based index in this collection where the object is inserted.</param>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object to insert into this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object already exists in this collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaClass">schemaClass</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of the collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Item(System.Int32)">
      <summary>Gets or sets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object in this collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object to get or set.</param>
      <returns>The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object that exists at the specified index.</returns>
      <exception cref="T:System.ArgumentException">The member already exists in this collection (applies to set only).</exception>
      <exception cref="T:System.ArgumentNullException">The item specified is null (applies to set only).</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index">index</paramref> specified is out of range of this collection.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> specified has not yet been saved to the Active Directory Domain Services store (applies to set only).</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnClearComplete">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnClearComplete"></see> method.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index at which the element was inserted.</param>
      <param name="value">The new value of the element at index.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index at which the element was removed.</param>
      <param name="value">The element that was removed from this collection.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)"></see> method.</summary>
      <param name="index">The zero-based index at which the set operation occurred.</param>
      <param name="oldValue">The element that was replaced by newValue.</param>
      <param name="newValue">The element that replaced oldValue.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnValidate(System.Object)">
      <summary>Overrides the <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)"></see> method.</summary>
      <param name="value">The element to validate in this collection.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
      <summary>Removes the first occurrence of an object in this collection that is identical to the specified <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object.</summary>
      <param name="schemaClass">The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object to remove from this collection.</param>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.ArgumentException">The object does not exist in the collection.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="schemaClass">schemaClass</paramref> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass"></see> object has not yet been saved in the Active Directory Domain Services store.</exception>
    </member>
    <member name="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty">
      <summary>The <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> class represents a schema property definition that is contained in the schema partition.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> class.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that specifies the context for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</param>
      <param name="ldapDisplayName">A <see cref="T:System.String"></see> that represents the LDAP display name for this <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</param>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> does not refer to a valid <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> or <see cref="System.DirectoryServices.ActiveDirectory.ConfigurationSet"></see>, or <paramref name="ldapDisplayName">ldapDisplayName</paramref> is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="ldapDisplayName">ldapDisplayName</paramref> is null.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.CommonName">
      <summary>Gets or sets the Common Name (CN) of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</summary>
      <returns>A <see cref="System.String"></see> that gets or sets the CN of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Description">
      <summary>Gets or sets a description of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</summary>
      <returns>A <see cref="System.String"></see> that gets or sets a description of the current <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose">
      <summary>Releases the resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object and, optionally, releases unmanaged resources.</summary>
      <param name="disposing">true if the managed resources should be released; false if only the unmanaged resources should be released.</param>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object in the Active Directory Domain Services schema partition that matches a given directory context and name.</summary>
      <param name="context">A <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext"></see> object that specifies the context for the search.</param>
      <param name="ldapDisplayName">A <see cref="T:System.String"></see> that specifies the LDAP display name of the schema property to search for.</param>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object for the schema property that is found. null if the property is not found.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException">The object was not found.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="context">context</paramref> does not refer to a valid <see cref="System.DirectoryServices.ActiveDirectory.Forest"></see> or <see cref="System.DirectoryServices.ActiveDirectory.ConfigurationSet"></see>, or <paramref name="ldapDisplayName">ldapDisplayName</paramref> parameter is an empty string.</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="context">context</paramref> or <paramref name="ldapDisplayName">ldapDisplayName</paramref> is null.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.GetDirectoryEntry">
      <summary>Gets the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> object for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</summary>
      <returns>A <see cref="System.DirectoryServices.DirectoryEntry"></see> object that represents the directory entry for the schema property.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">The <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object is not a valid instance.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsDefunct">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object is defunct.</summary>
      <returns>A <see cref="System.Boolean"></see> value that indicates whether  the current schema property object is defunct. true if the object is defunct; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInAnr">
      <summary>Gets or sets a value indicating whether the schema property is in the ANR set.</summary>
      <returns>A <see cref="System.Boolean"></see> value that indicates whether the schema property is in the ANR set. true if it is in the ANR set; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexed">
      <summary>Gets or sets a value indicating whether the schema property is indexed in the Active Directory Domain Services store.</summary>
      <returns>A <see cref="System.Boolean"></see> value that indicates whether  the current schema property is indexed in the Active Directory Domain Services store. true if the property is indexed; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsIndexedOverContainer">
      <summary>Gets or sets a value indicating whether the schema property is indexed in all containers.</summary>
      <returns>A <see cref="System.Boolean"></see> value that indicates whether the schema property is indexed in all containers.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsInGlobalCatalog">
      <summary>Gets or sets a value indicating whether the schema property is contained in the global catalog.</summary>
      <returns>A <see cref="System.Boolean"></see> value that indicates whether the schema property is contained in the global catalog. true if it is contained in the global catalog; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsOnTombstonedObject">
      <summary>Gets or sets a value indicating whether the schema property is in the tombstone object that contains deleted properties.</summary>
      <returns>A <see cref="System.Boolean"></see> value that indicates whether the schema property is contained in the tombstone object. true if it is contained in the tombstone object; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsSingleValued">
      <summary>Gets or sets a value indicating whether the schema property is single-valued.</summary>
      <returns>A <see cref="System.Boolean"></see> value that indicates whether the schema property is single valued. true if it is single-valued; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.IsTupleIndexed">
      <summary>Gets or sets a value indicating whether there is a tuple index for this schema property.</summary>
      <returns>A <see cref="System.Boolean"></see> value that indicates whether the schema property has a tuple index. true if there is a tuple index for the property; otherwise, false.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Link">
      <summary>Gets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> that links to the current schema property.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object that is linked to the current <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.LinkId">
      <summary>Gets or sets the value for the link identifier when the schema property is linked.</summary>
      <returns>An <see cref="System.Int32"></see> value that represents the linkID value when the schema property is linked. For more information, see the topic Link-ID in the MSDN Library at http://msdn.microsoft.com/library.</returns>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Name">
      <summary>Gets the ldapDisplayName of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object. For more information, see the topic LDAP-Display-Name in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <returns>A <see cref="System.String"></see> value that contains the ldapDisplayName of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object. For more information, see the topic LDAP-Display-Name in the MSDN Library at http://msdn.microsoft.com/library.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Oid">
      <summary>Gets or sets the OID of the schema property.</summary>
      <returns>A <see cref="System.String"></see> value that contains the OID of the current <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeLower">
      <summary>Gets or sets a value that represents the minimum value or length that the schema property can have.</summary>
      <returns>An <see cref="System.Int32"></see> that represents the minimum value or length of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object value.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">There is no lower range for this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.RangeUpper">
      <summary>Gets or sets a value that represents the maximum value or length that the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object can have.</summary>
      <returns>An <see cref="System.Int32"></see> value that indicates the maximum value or length of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object value.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ArgumentNullException">There is no upper range for this property.</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Save">
      <summary>Commits all changes to the current <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object to the underlying directory store.</summary>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException">An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object of the same name already exists.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.SchemaGuid">
      <summary>Gets or sets the schemaIDGuid for the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object. For more information, see the topic Schema-ID-GUID in the MSDN Library at http://msdn.microsoft.com/library.</summary>
      <returns>A <see cref="System.Guid"></see> that represents the schemaIDGuid for the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object. For more information, see the topic Schema-ID-GUID in the MSDN Library at http://msdn.microsoft.com/library.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
    </member>
    <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.Syntax">
      <summary>Gets or sets an <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax"></see> object indicating the property type (syntax) of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</summary>
      <returns>An <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax"></see> object that defines the property type of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</returns>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException">A call to the underlying directory service resulted in an error.</exception>
      <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException">The target server is either busy or unavailable.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified type is not a valid <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySyntax"></see> value (applies to set only).</exception>
    </member>
    <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.ToString">
      <summary>Gets the LDAP display name of the <see cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</summary>
      <returns>A <see cref="System.String"></see> that represents the LDAP display name of the <see cref="System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty"></see> object.</returns>
    </member>
    <member name="T:System.DirectoryServices.ReferralChasingOption">
      <summary>The <see cref="T:System.DirectoryServices.ReferralChasingOption"></see> enumeration specifies if and how referral chasing is pursued.</summary>
    </member>
    <member name="F:System.DirectoryServices.ReferralChasingOption.All">
      <summary>Chase referrals of either the subordinate or external type.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ReferralChasingOption.External">
      <summary>Chase external referrals.  If no referral chasing option is specified for a directory search, the type of referral chasing performed is  <see cref="F:System.DirectoryServices.ReferralChasingOption.External"></see>.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ReferralChasingOption.None">
      <summary>Never chase the referred-to server. Setting this option prevents a client from contacting other servers in a referral process.</summary>
      <returns></returns>
    </member>
    <member name="F:System.DirectoryServices.ReferralChasingOption.Subordinate">
      <summary>Chase only subordinate referrals that are a subordinate naming context in a directory tree. The ADSI LDAP provider always turns off this flag for paged searches.</summary>
      <returns></returns>
    </member>
    <member name="T:System.DirectoryServices.ResultPropertyCollection">
      <summary>Contains the properties of a <see cref="T:System.DirectoryServices.SearchResult"></see> instance.</summary>
    </member>
    <member name="M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)">
      <summary>Determines whether the property that has the specified name belongs to this collection.</summary>
      <param name="propertyName">The name of the property to find.</param>
      <returns>The return value is true if the specified property belongs to this collection; otherwise, false.</returns>
    </member>
    <member name="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)">
      <summary>Copies the properties from this collection to an array, starting at a particular index of the array.</summary>
      <param name="array">An array of type <see cref="T:System.DirectoryServices.ResultPropertyValueCollection"></see> that receives this collection&amp;#39;s properties.</param>
      <param name="index">The zero-based array index at which to begin copying the properties.</param>
    </member>
    <member name="P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)">
      <summary>Gets the property from this collection that has the specified name.</summary>
      <param name="name">The name of the property to retrieve.</param>
      <returns>A <see cref="System.DirectoryServices.ResultPropertyValueCollection"></see> that has the specified name.</returns>
    </member>
    <member name="P:System.DirectoryServices.ResultPropertyCollection.PropertyNames">
      <summary>Gets the names of the properties in this collection.</summary>
      <returns>An <see cref="System.Collections.ICollection"></see> that contains the names of the properties in this collection.</returns>
    </member>
    <member name="P:System.DirectoryServices.ResultPropertyCollection.Values">
      <summary>Gets the values of the properties in this collection.</summary>
      <returns>An <see cref="System.Collections.ICollection"></see> that contains the values of the properties in this collection.</returns>
    </member>
    <member name="T:System.DirectoryServices.ResultPropertyValueCollection">
      <summary>Contains the values of a <see cref="T:System.DirectoryServices.SearchResult"></see> property.</summary>
    </member>
    <member name="M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)"></see> method determines whether a specified property value is in this collection.</summary>
      <param name="value">The property value to find.</param>
      <returns>The return value is true if the specified property belongs to this collection; otherwise, false.</returns>
    </member>
    <member name="M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)">
      <summary>The <see cref="M:System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)"></see> method copies the property values from this collection to an array, starting at a particular index of the array.</summary>
      <param name="values">An array of type <see cref="T:System.Object"></see> that receives this collection&amp;#39;s property values.</param>
      <param name="index">The zero-based array index at which to begin copying the property values.</param>
    </member>
    <member name="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)">
      <summary>The <see cref="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)"></see> method retrieves the index of a specified property value in this collection.</summary>
      <param name="value">The property value to find.</param>
      <returns>The zero-based index of the specified property value. If the object is not found, the return value is -1.</returns>
    </member>
    <member name="P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)">
      <summary>The <see cref="P:System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)"></see> property gets the property value that is located at a specified index.</summary>
      <param name="index">The zero-based index of the property value to retrieve.</param>
      <returns>The property value that is located at the specified index.</returns>
    </member>
    <member name="T:System.DirectoryServices.SchemaNameCollection">
      <summary>Contains a list of the schema names that the <see cref="P:System.DirectoryServices.DirectoryEntries.SchemaFilter"></see> property of a <see cref="T:System.DirectoryServices.DirectoryEntries"></see> object can use.</summary>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)">
      <summary>Appends a specified schema name to this collection.</summary>
      <param name="value">The schema name to add to this collection.</param>
      <returns>The zero-based index of the specified property value. If the object is not found, the return value is -1.</returns>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)">
      <summary>Appends a set of specified schema names to this collection.</summary>
      <param name="value">A <see cref="T:System.DirectoryServices.SchemaNameCollection"></see> that contains the schema names to add.</param>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])">
      <summary>Appends a set of specified schema names to this collection.</summary>
      <param name="value">An array of type <see cref="T:System.String"></see> that contains the schema names to add.</param>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.Clear">
      <summary>Removes all objects from this collection.</summary>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)">
      <summary>Determines whether this collection contains a specified schema name.</summary>
      <param name="value">The schema name to search for.</param>
      <returns>The return value is true if the specified property belongs to this collection; otherwise, false.</returns>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)">
      <summary>Copies the schema names from this collection to an array, starting at a particular index of the array.</summary>
      <param name="stringArray">An array of type <see cref="T:System.String"></see> that receives this collection&amp;#39;s schema names.</param>
      <param name="index">The zero-based array index at which to begin copying the schema names.</param>
    </member>
    <member name="P:System.DirectoryServices.SchemaNameCollection.Count">
      <summary>The <see cref="P:System.DirectoryServices.SchemaNameCollection.Count"></see> property gets the number of objects in this collection.</summary>
      <returns>The number of objects in this collection.</returns>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator">
      <summary>Returns an enumerator that you can use to iterate through this collection.</summary>
      <returns>An enumerator that you can used to iterate through this collection.</returns>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)">
      <summary>Determines the index of a specified schema name in this collection.</summary>
      <param name="value">The schema name to search for.</param>
      <returns>The zero-based index of the specified schema name, or -1 if the schema name was not found in the collection.</returns>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)">
      <summary>Inserts a schema name into this collection at a specified index.</summary>
      <param name="index">The zero-based index into the collection at which to insert the schema name.</param>
      <param name="value">The schema name to insert into this collection.</param>
    </member>
    <member name="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
      <summary>Gets or sets the object that exists at a specified index.</summary>
      <param name="index">The zero-based index into the collection.</param>
      <returns>The object that exists at the specified index.</returns>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)">
      <summary>Removes a specified schema name from this collection.</summary>
      <param name="value">The schema name to remove.</param>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)">
      <summary>Removes the schema name that is at a specified index from this collection.</summary>
      <param name="index">The zero-based index of the schema name to remove.</param>
      <exception cref="T:System.IndexOutOfRangeException">The zero-based index is either less than zero or equal to the size of the collection.</exception>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Collections.ICollection"></see> to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
      <param name="index">The zero-based index in array at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="array">array</paramref> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index">index</paramref> is less than zero.</exception>
      <exception cref="T:System.ArgumentException"><paramref name="array">array</paramref> is multidimensional.  
 -or-  
 The number of elements in the source <see cref="System.Collections.ICollection"></see> is greater than the available space from <paramref name="index">index</paramref> to the end of the destination <paramref name="array">array</paramref>.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="System.Collections.ICollection"></see> cannot be cast automatically to the type of the destination <paramref name="array">array</paramref>.</exception>
    </member>
    <member name="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).</summary>
      <returns>true if access to the <see cref="System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"></see>.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="System.Collections.ICollection"></see>.</returns>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the list.</summary>
      <param name="value">The item to add to the list.</param>
      <returns>The position into which the new item was inserted.</returns>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the list contains a specified value.</summary>
      <param name="value">The value to locate in the list.</param>
      <returns>true if the value is found in the list, otherwise false.</returns>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specified item in the list.</summary>
      <param name="value">The item to locate in the list.</param>
      <returns>The index of <paramref name="value">value</paramref> if found in the list; otherwise, -1.</returns>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item to the list at the specified index.</summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">The item to insert into the list.</param>
    </member>
    <member name="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IList"></see> has a fixed size.</summary>
      <returns>true if the <see cref="System.Collections.IList"></see> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.IList"></see> is read-only.</summary>
      <returns>true if the <see cref="System.Collections.IList"></see> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <param name="index">The zero-based index of the element to get or set.</param>
      <returns>The element at the specified index.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index">index</paramref> is not a valid index in the <see cref="System.Collections.IList"></see>.</exception>
      <exception cref="T:System.NotSupportedException">The property is set and the <see cref="System.Collections.IList"></see> is read-only.</exception>
    </member>
    <member name="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific <paramref name="value">value</paramref> from the list.</summary>
      <param name="value">The value to remove from the list.</param>
    </member>
    <member name="T:System.DirectoryServices.SearchResult">
      <summary>The <see cref="T:System.DirectoryServices.SearchResult"></see> class encapsulates a node in the Active Directory Domain Services hierarchy that is returned during a search through <see cref="T:System.DirectoryServices.DirectorySearcher"></see>.</summary>
    </member>
    <member name="M:System.DirectoryServices.SearchResult.GetDirectoryEntry">
      <summary>Retrieves the <see cref="T:System.DirectoryServices.DirectoryEntry"></see> that corresponds to the <see cref="T:System.DirectoryServices.SearchResult"></see> from the Active Directory Domain Services hierarchy.</summary>
      <returns>The <see cref="System.DirectoryServices.DirectoryEntry"></see> that corresponds to the <see cref="System.DirectoryServices.SearchResult"></see>.</returns>
    </member>
    <member name="P:System.DirectoryServices.SearchResult.Path">
      <summary>Gets the path for this <see cref="T:System.DirectoryServices.SearchResult"></see>.</summary>
      <returns>The path of this <see cref="System.DirectoryServices.SearchResult"></see>.</returns>
    </member>
    <member name="P:System.DirectoryServices.SearchResult.Properties">
      <summary>Gets a <see cref="T:System.DirectoryServices.ResultPropertyCollection"></see> collection of properties for this object.</summary>
      <returns>A <see cref="System.DirectoryServices.ResultPropertyCollection"></see> of properties set on this object.</returns>
    </member>
  </members>
</doc>